{
  "version": 3,
  "sources": ["../../datatables.net-buttons/js/dataTables.buttons.mjs"],
  "sourcesContent": ["/*! Buttons for DataTables 2.3.6\n * Â©2016-2023 SpryMedia Ltd - datatables.net/license\n */\n\nimport $ from 'jquery';\nimport DataTable from 'datatables.net';\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n// Allow for jQuery slim\nfunction _fadeIn(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeIn( duration, fn );\n\n\t}\n\telse {\n\t\tel.css('display', 'block');\n\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\nfunction _fadeOut(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel\n\t\t\t.stop()\n\t\t\t.fadeOut( duration, fn );\n\t}\n\telse {\n\t\tel.css('display', 'none');\n\t\t\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function( dt, config )\n{\n\t// If not created with a `new` keyword then we return a wrapper function that\n\t// will take the settings object for a DT. This allows easy use of new instances\n\t// with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n\tif ( !(this instanceof Buttons) ) {\n\t\treturn function (settings) {\n\t\t\treturn new Buttons( settings, dt ).container();\n\t\t};\n\t}\n\n\t// If there is no config set it to an empty object\n\tif ( typeof( config ) === 'undefined' ) {\n\t\tconfig = {};\t\n\t}\n\t\n\t// Allow a boolean true for defaults\n\tif ( config === true ) {\n\t\tconfig = {};\n\t}\n\n\t// For easy configuration of buttons an array can be given\n\tif ( Array.isArray( config ) ) {\n\t\tconfig = { buttons: config };\n\t}\n\n\tthis.c = $.extend( true, {}, Buttons.defaults, config );\n\n\t// Don't want a deep copy for the buttons\n\tif ( config.buttons ) {\n\t\tthis.c.buttons = config.buttons;\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( dt ),\n\t\tbuttons: [],\n\t\tlistenKeys: '',\n\t\tnamespace: 'dtb'+(_instCounter++)\n\t};\n\n\tthis.dom = {\n\t\tcontainer: $('<'+this.c.dom.container.tag+'/>')\n\t\t\t.addClass( this.c.dom.container.className )\n\t};\n\n\tthis._constructor();\n};\n\n\n$.extend( Buttons.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get the action of a button\n\t * @param  {int|string} Button index\n\t * @return {function}\n\t *//**\n\t * Set the action of a button\n\t * @param  {node} node Button element\n\t * @param  {function} action Function to set\n\t * @return {Buttons} Self for chaining\n\t */\n\taction: function ( node, action )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( action === undefined ) {\n\t\t\treturn button.conf.action;\n\t\t}\n\n\t\tbutton.conf.action = action;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add an active class to the button to make to look active or get current\n\t * active state.\n\t * @param  {node} node Button element\n\t * @param  {boolean} [flag] Enable / disable flag\n\t * @return {Buttons} Self for chaining or boolean for getter\n\t */\n\tactive: function ( node, flag ) {\n\t\tvar button = this._nodeToButton( node );\n\t\tvar klass = this.c.dom.button.active;\n\t\tvar jqNode = $(button.node);\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn jqNode.hasClass( klass );\n\t\t}\n\n\t\tjqNode.toggleClass( klass, flag === undefined ? true : flag );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add a new button\n\t * @param {object} config Button configuration object, base string name or function\n\t * @param {int|string} [idx] Button index for where to insert the button\n\t * @param {boolean} [draw=true] Trigger a draw. Set a false when adding\n\t *   lots of buttons, until the last button.\n\t * @return {Buttons} Self for chaining\n\t */\n\tadd: function ( config, idx, draw )\n\t{\n\t\tvar buttons = this.s.buttons;\n\n\t\tif ( typeof idx === 'string' ) {\n\t\t\tvar split = idx.split('-');\n\t\t\tvar base = this.s;\n\n\t\t\tfor ( var i=0, ien=split.length-1 ; i<ien ; i++ ) {\n\t\t\t\tbase = base.buttons[ split[i]*1 ];\n\t\t\t}\n\n\t\t\tbuttons = base.buttons;\n\t\t\tidx = split[ split.length-1 ]*1;\n\t\t}\n\n\t\tthis._expandButton(\n\t\t\tbuttons,\n\t\t\tconfig,\n\t\t\tconfig !== undefined ? config.split : undefined,\n\t\t\t(config === undefined || config.split === undefined || config.split.length === 0) && base !== undefined,\n\t\t\tfalse,\n\t\t\tidx\n\t\t);\n\n\t\tif (draw === undefined || draw === true) {\n\t\t\tthis._draw();\n\t\t}\n\t\n\t\treturn this;\n\t},\n\n\t/**\n\t * Clear buttons from a collection and then insert new buttons\n\t */\n\tcollectionRebuild: function ( node, newButtons )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\t\n\t\tif(newButtons !== undefined) {\n\t\t\tvar i;\n\t\t\t// Need to reverse the array\n\t\t\tfor (i=button.buttons.length-1; i>=0; i--) {\n\t\t\t\tthis.remove(button.buttons[i].node);\n\t\t\t}\n\n\t\t\t// If the collection has prefix and / or postfix buttons we need to add them in\n\t\t\tif (button.conf.prefixButtons) {\n\t\t\t\tnewButtons.unshift.apply(newButtons, button.conf.prefixButtons);\n\t\t\t}\n\n\t\t\tif (button.conf.postfixButtons) {\n\t\t\t\tnewButtons.push.apply(newButtons, button.conf.postfixButtons);\n\t\t\t}\n\n\t\t\tfor (i=0; i<newButtons.length; i++) {\n\t\t\t\tvar newBtn = newButtons[i];\n\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tbutton.buttons,\n\t\t\t\t\tnewBtn,\n\t\t\t\t\tnewBtn !== undefined && newBtn.config !== undefined && newBtn.config.split !== undefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\tnewBtn.parentConf !== undefined && newBtn.parentConf.split !== undefined,\n\t\t\t\t\tnull,\n\t\t\t\t\tnewBtn.parentConf\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._draw(button.collection, button.buttons);\n\t},\n\n\t/**\n\t * Get the container node for the buttons\n\t * @return {jQuery} Buttons node\n\t */\n\tcontainer: function ()\n\t{\n\t\treturn this.dom.container;\n\t},\n\n\t/**\n\t * Disable a button\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tdisable: function ( node ) {\n\t\tvar button = this._nodeToButton( node );\n\n\t\t$(button.node)\n\t\t\t.addClass( this.c.dom.button.disabled )\n\t\t\t.prop('disabled', true);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Destroy the instance, cleaning up event handlers and removing DOM\n\t * elements\n\t * @return {Buttons} Self for chaining\n\t */\n\tdestroy: function ()\n\t{\n\t\t// Key event listener\n\t\t$('body').off( 'keyup.'+this.s.namespace );\n\n\t\t// Individual button destroy (so they can remove their own events if\n\t\t// needed). Take a copy as the array is modified by `remove`\n\t\tvar buttons = this.s.buttons.slice();\n\t\tvar i, ien;\n\t\t\n\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.remove( buttons[i].node );\n\t\t}\n\n\t\t// Container\n\t\tthis.dom.container.remove();\n\n\t\t// Remove from the settings object collection\n\t\tvar buttonInsts = this.s.dt.settings()[0];\n\n\t\tfor ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {\n\t\t\tif ( buttonInsts.inst === this ) {\n\t\t\t\tbuttonInsts.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable / disable a button\n\t * @param  {node} node Button node\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tenable: function ( node, flag )\n\t{\n\t\tif ( flag === false ) {\n\t\t\treturn this.disable( node );\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\t$(button.node)\n\t\t\t.removeClass( this.c.dom.button.disabled )\n\t\t\t.prop('disabled', false);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get a button's index\n\t * \n\t * This is internally recursive\n\t * @param {element} node Button to get the index of\n\t * @return {string} Button index\n\t */\n\tindex: function ( node, nested, buttons )\n\t{\n\t\tif ( ! nested ) {\n\t\t\tnested = '';\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tvar inner = buttons[i].buttons;\n\n\t\t\tif (buttons[i].node === node) {\n\t\t\t\treturn nested + i;\n\t\t\t}\n\n\t\t\tif ( inner && inner.length ) {\n\t\t\t\tvar match = this.index(node, i + '-', inner);\n\n\t\t\t\tif (match !== null) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\n\t/**\n\t * Get the instance name for the button set selector\n\t * @return {string} Instance name\n\t */\n\tname: function ()\n\t{\n\t\treturn this.c.name;\n\t},\n\n\t/**\n\t * Get a button's node of the buttons container if no button is given\n\t * @param  {node} [node] Button node\n\t * @return {jQuery} Button element, or container\n\t */\n\tnode: function ( node )\n\t{\n\t\tif ( ! node ) {\n\t\t\treturn this.dom.container;\n\t\t}\n\n\t\tvar button = this._nodeToButton( node );\n\t\treturn $(button.node);\n\t},\n\n\t/**\n\t * Set / get a processing class on the selected button\n\t * @param {element} node Triggering button node\n\t * @param  {boolean} flag true to add, false to remove, undefined to get\n\t * @return {boolean|Buttons} Getter value or this if a setter.\n\t */\n\tprocessing: function ( node, flag )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar button = this._nodeToButton( node );\n\n\t\tif ( flag === undefined ) {\n\t\t\treturn $(button.node).hasClass( 'processing' );\n\t\t}\n\n\t\t$(button.node).toggleClass( 'processing', flag );\n\n\t\t$(dt.table().node()).triggerHandler( 'buttons-processing.dt', [\n\t\t\tflag, dt.button( node ), dt, $(node), button.conf\n\t\t] );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Remove a button.\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tremove: function ( node )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar host = this._nodeToHost( node );\n\t\tvar dt = this.s.dt;\n\n\t\t// Remove any child buttons first\n\t\tif ( button.buttons.length ) {\n\t\t\tfor ( var i=button.buttons.length-1 ; i>=0 ; i-- ) {\n\t\t\t\tthis.remove( button.buttons[i].node );\n\t\t\t}\n\t\t}\n\n\t\tbutton.conf.destroying = true;\n\n\t\t// Allow the button to remove event handlers, etc\n\t\tif ( button.conf.destroy ) {\n\t\t\tbutton.conf.destroy.call( dt.button(node), dt, $(node), button.conf );\n\t\t}\n\n\t\tthis._removeKey( button.conf );\n\n\t\t$(button.node).remove();\n\n\t\tvar idx = $.inArray( button, host );\n\t\thost.splice( idx, 1 );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the text for a button\n\t * @param  {int|string} node Button index\n\t * @return {string} Button text\n\t *//**\n\t * Set the text for a button\n\t * @param  {int|string|function} node Button index\n\t * @param  {string} label Text\n\t * @return {Buttons} Self for chaining\n\t */\n\ttext: function ( node, label )\n\t{\n\t\tvar button = this._nodeToButton( node );\n\t\tvar buttonLiner = this.c.dom.collection.buttonLiner;\n\t\tvar linerTag = button.inCollection && buttonLiner && buttonLiner.tag ?\n\t\t\tbuttonLiner.tag :\n\t\t\tthis.c.dom.buttonLiner.tag;\n\t\tvar dt = this.s.dt;\n\t\tvar jqNode = $(button.node);\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, jqNode, button.conf ) :\n\t\t\t\topt;\n\t\t};\n\n\t\tif ( label === undefined ) {\n\t\t\treturn text( button.conf.text );\n\t\t}\n\n\t\tbutton.conf.text = label;\n\n\t\tif ( linerTag ) {\n\t\t\tjqNode\n\t\t\t\t.children( linerTag )\n\t\t\t\t.eq(0)\n\t\t\t\t.filter(':not(.dt-down-arrow)')\n\t\t\t\t.html( text(label) );\n\t\t}\n\t\telse {\n\t\t\tjqNode.html( text(label) );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Buttons constructor\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar buttons =  this.c.buttons;\n\n\t\tif ( ! dtSettings._buttons ) {\n\t\t\tdtSettings._buttons = [];\n\t\t}\n\n\t\tdtSettings._buttons.push( {\n\t\t\tinst: this,\n\t\t\tname: this.c.name\n\t\t} );\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tthis.add( buttons[i] );\n\t\t}\n\n\t\tdt.on( 'destroy', function ( e, settings ) {\n\t\t\tif ( settings === dtSettings ) {\n\t\t\t\tthat.destroy();\n\t\t\t}\n\t\t} );\n\n\t\t// Global key event binding to listen for button keys\n\t\t$('body').on( 'keyup.'+this.s.namespace, function ( e ) {\n\t\t\tif ( ! document.activeElement || document.activeElement === document.body ) {\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\n\t\t\t\t// handle this\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\n\n\t\t\t\tif ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {\n\t\t\t\t\tthat._keypress( character, e );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Add a new button to the key press listener\n\t * @param {object} conf Resolved button configuration object\n\t * @private\n\t */\n\t_addKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tthis.s.listenKeys += $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\t\t}\n\t},\n\n\t/**\n\t * Insert the buttons into the container. Call without parameters!\n\t * @param  {node} [container] Recursive only - Insert point\n\t * @param  {array} [buttons] Recursive only - Buttons array\n\t * @private\n\t */\n\t_draw: function ( container, buttons )\n\t{\n\t\tif ( ! container ) {\n\t\t\tcontainer = this.dom.container;\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tcontainer.children().detach();\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tcontainer.append( buttons[i].inserter );\n\t\t\tcontainer.append( ' ' );\n\n\t\t\tif ( buttons[i].buttons && buttons[i].buttons.length ) {\n\t\t\t\tthis._draw( buttons[i].collection, buttons[i].buttons );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create buttons from an array of buttons\n\t * @param  {array} attachTo Buttons array to attach to\n\t * @param  {object} button Button definition\n\t * @param  {boolean} inCollection true if the button is in a collection\n\t * @private\n\t */\n\t_expandButton: function ( attachTo, button, split, inCollection, inSplit, attachPoint, parentConf )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar buttonCounter = 0;\n\t\tvar isSplit = false;\n\t\tvar buttons = ! Array.isArray( button ) ?\n\t\t\t[ button ] :\n\t\t\tbutton;\n\t\t\n\t\tif(button === undefined ) {\n\t\t\tbuttons = !Array.isArray(split) ?\n\t\t\t\t[ split ] :\n\t\t\t\tsplit;\n\t\t}\n\n\t\tif (button !== undefined && button.split !== undefined) {\n\t\t\tisSplit = true;\n\t\t}\n\t\t\t\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tvar conf = this._resolveExtends( buttons[i] );\n\n\t\t\tif ( ! conf ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( conf.config !== undefined && conf.config.split) {\n\t\t\t\tisSplit = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tisSplit = false;\n\t\t\t}\n\t\t\t\n\t\t\t// If the configuration is an array, then expand the buttons at this\n\t\t\t// point\n\t\t\tif ( Array.isArray( conf ) ) {\n\t\t\t\tthis._expandButton( attachTo, conf, built !== undefined && built.conf !== undefined ? built.conf.split : undefined, inCollection, parentConf !== undefined && parentConf.split !== undefined, attachPoint, parentConf );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar built = this._buildButton( conf, inCollection, conf.split !== undefined || (conf.config !== undefined && conf.config.split !== undefined), inSplit );\n\t\t\tif ( ! built ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( attachPoint !== undefined && attachPoint !== null ) {\n\t\t\t\tattachTo.splice( attachPoint, 0, built );\n\t\t\t\tattachPoint++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattachTo.push( built );\n\t\t\t}\n\n\t\t\t\n\t\t\tif ( built.conf.buttons || built.conf.split ) {\n\t\t\t\tbuilt.collection = $('<'+(isSplit ? this.c.dom.splitCollection.tag : this.c.dom.collection.tag)+'/>');\n\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\tif(built.conf.split) {\n\t\t\t\t\tfor(var j = 0; j < built.conf.split.length; j++) {\n\t\t\t\t\t\tif(typeof built.conf.split[j] === \"object\") {\n\t\t\t\t\t\t\tbuilt.conf.split[j].parent = parentConf;\n\t\t\t\t\t\t\tif(built.conf.split[j].collectionLayout === undefined) {\n\t\t\t\t\t\t\t\tbuilt.conf.split[j].collectionLayout = built.conf.collectionLayout;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(built.conf.split[j].dropup === undefined) {\n\t\t\t\t\t\t\t\tbuilt.conf.split[j].dropup = built.conf.dropup;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(built.conf.split[j].fade === undefined) {\n\t\t\t\t\t\t\t\tbuilt.conf.split[j].fade = built.conf.fade;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(built.node).append($('<span class=\"dt-down-arrow\">'+this.c.dom.splitDropdown.text+'</span>'))\n\t\t\t\t}\n\n\t\t\t\tthis._expandButton( built.buttons, built.conf.buttons, built.conf.split, !isSplit, isSplit, attachPoint, built.conf );\n\t\t\t}\n\t\t\tbuilt.conf.parent = parentConf;\n\n\t\t\t// init call is made here, rather than buildButton as it needs to\n\t\t\t// be selectable, and for that it needs to be in the buttons array\n\t\t\tif ( conf.init ) {\n\t\t\t\tconf.init.call( dt.button( built.node ), dt, $(built.node), conf );\n\t\t\t}\n\n\t\t\tbuttonCounter++;\n\t\t}\n\t},\n\n\t/**\n\t * Create an individual button\n\t * @param  {object} config            Resolved button configuration\n\t * @param  {boolean} inCollection `true` if a collection button\n\t * @return {jQuery} Created button node (jQuery)\n\t * @private\n\t */\n\t_buildButton: function ( config, inCollection, isSplit, inSplit )\n\t{\n\t\tvar buttonDom = this.c.dom.button;\n\t\tvar linerDom = this.c.dom.buttonLiner;\n\t\tvar collectionDom = this.c.dom.collection;\n\t\tvar splitDom = this.c.dom.split;\n\t\tvar splitCollectionDom = this.c.dom.splitCollection;\n\t\tvar splitDropdownButton = this.c.dom.splitDropdownButton;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function ( opt ) {\n\t\t\treturn typeof opt === 'function' ?\n\t\t\t\topt( dt, button, config ) :\n\t\t\t\topt;\n\t\t};\n\n\t\t// Spacers don't do much other than insert an element into the DOM\n\t\tif (config.spacer) {\n\t\t\tvar spacer = $('<span></span>')\n\t\t\t\t.addClass('dt-button-spacer ' + config.style + ' ' + buttonDom.spacerClass)\n\t\t\t\t.html(text(config.text));\n\n\t\t\treturn {\n\t\t\t\tconf:         config,\n\t\t\t\tnode:         spacer,\n\t\t\t\tinserter:     spacer,\n\t\t\t\tbuttons:      [],\n\t\t\t\tinCollection: inCollection,\n\t\t\t\tisSplit:\t  isSplit,\n\t\t\t\tinSplit:\t  inSplit,\n\t\t\t\tcollection:   null\n\t\t\t};\n\t\t}\n\n\t\tif ( !isSplit && inSplit && splitCollectionDom ) {\n\t\t\tbuttonDom = splitDropdownButton;\n\t\t}\n\t\telse if ( !isSplit && inCollection && collectionDom.button ) {\n\t\t\tbuttonDom = collectionDom.button;\n\t\t} \n\n\t\tif ( !isSplit && inSplit && splitCollectionDom.buttonLiner ) {\n\t\t\tlinerDom = splitCollectionDom.buttonLiner\n\t\t}\n\t\telse if ( !isSplit && inCollection && collectionDom.buttonLiner ) {\n\t\t\tlinerDom = collectionDom.buttonLiner;\n\t\t}\n\n\t\t// Make sure that the button is available based on whatever requirements\n\t\t// it has. For example, PDF button require pdfmake\n\t\tif ( config.available && ! config.available( dt, config ) && !config.hasOwnProperty('html') ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar button;\n\t\tif(!config.hasOwnProperty('html')) {\n\t\t\tvar action = function ( e, dt, button, config ) {\n\t\t\t\tconfig.action.call( dt.button( button ), e, dt, button, config );\n\t\n\t\t\t\t$(dt.table().node()).triggerHandler( 'buttons-action.dt', [\n\t\t\t\t\tdt.button( button ), dt, button, config \n\t\t\t\t] );\n\t\t\t};\n\n\t\t\tvar tag = config.tag || buttonDom.tag;\n\t\t\tvar clickBlurs = config.clickBlurs === undefined\n\t\t\t\t? true :\n\t\t\t\tconfig.clickBlurs;\n\n\t\t\tbutton = $('<'+tag+'/>')\n\t\t\t\t.addClass( buttonDom.className )\n\t\t\t\t.addClass( inSplit ? this.c.dom.splitDropdownButton.className : '')\n\t\t\t\t.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )\n\t\t\t\t.attr( 'aria-controls', this.s.dt.table().node().id )\n\t\t\t\t.on( 'click.dtb', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\n\t\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t\t}\n\t\t\t\t\tif( clickBlurs ) {\n\t\t\t\t\t\tbutton.trigger('blur');\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'keypress.dtb', function (e) {\n\t\t\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tif ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n\t\t\t\t\t\t\taction( e, dt, button, config );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\n\t\t\t// Make `a` tags act like a link\n\t\t\tif ( tag.toLowerCase() === 'a' ) {\n\t\t\t\tbutton.attr( 'href', '#' );\n\t\t\t}\n\t\n\t\t\t// Button tags should have `type=button` so they don't have any default behaviour\n\t\t\tif ( tag.toLowerCase() === 'button' ) {\n\t\t\t\tbutton.attr( 'type', 'button' );\n\t\t\t}\n\t\n\t\t\tif ( linerDom.tag ) {\n\t\t\t\tvar liner = $('<'+linerDom.tag+'/>')\n\t\t\t\t\t.html( text( config.text ) )\n\t\t\t\t\t.addClass( linerDom.className );\n\t\n\t\t\t\tif ( linerDom.tag.toLowerCase() === 'a' ) {\n\t\t\t\t\tliner.attr( 'href', '#' );\n\t\t\t\t}\n\t\n\t\t\t\tbutton.append( liner );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbutton.html( text( config.text ) );\n\t\t\t}\n\t\n\t\t\tif ( config.enabled === false ) {\n\t\t\t\tbutton.addClass( buttonDom.disabled );\n\t\t\t}\n\t\n\t\t\tif ( config.className ) {\n\t\t\t\tbutton.addClass( config.className );\n\t\t\t}\n\t\n\t\t\tif ( config.titleAttr ) {\n\t\t\t\tbutton.attr( 'title', text( config.titleAttr ) );\n\t\t\t}\n\t\n\t\t\tif ( config.attr ) {\n\t\t\t\tbutton.attr( config.attr );\n\t\t\t}\n\t\n\t\t\tif ( ! config.namespace ) {\n\t\t\t\tconfig.namespace = '.dt-button-'+(_buttonCounter++);\n\t\t\t}\n\n\t\t\tif  ( config.config !== undefined && config.config.split ) {\n\t\t\t\tconfig.split = config.config.split;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tbutton = $(config.html)\n\t\t}\n\t\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\n\t\tvar inserter;\n\t\tif ( buttonContainer && buttonContainer.tag ) {\n\t\t\tinserter = $('<'+buttonContainer.tag+'/>')\n\t\t\t\t.addClass( buttonContainer.className )\n\t\t\t\t.append( button );\n\t\t}\n\t\telse {\n\t\t\tinserter = button;\n\t\t}\n\n\t\tthis._addKey( config );\n\n\t\t// Style integration callback for DOM manipulation\n\t\t// Note that this is _not_ documented. It is currently\n\t\t// for style integration only\n\t\tif( this.c.buttonCreated ) {\n\t\t\tinserter = this.c.buttonCreated( config, inserter );\n\t\t}\n\n\t\tvar splitDiv;\n\t\tif(isSplit) {\n\t\t\tsplitDiv = $('<div/>').addClass(this.c.dom.splitWrapper.className)\n\t\t\tsplitDiv.append(button);\n\t\t\tvar dropButtonConfig = $.extend(config, {\n\t\t\t\ttext: this.c.dom.splitDropdown.text,\n\t\t\t\tclassName: this.c.dom.splitDropdown.className,\n\t\t\t\tcloseButton: false,\n\t\t\t\tattr: {\n\t\t\t\t\t'aria-haspopup': 'dialog',\n\t\t\t\t\t'aria-expanded': false\n\t\t\t\t},\n\t\t\t\talign: this.c.dom.splitDropdown.align,\n\t\t\t\tsplitAlignClass: this.c.dom.splitDropdown.splitAlignClass\n\t\t\t\t\n\t\t\t})\n\n\t\t\tthis._addKey(dropButtonConfig);\n\n\t\t\tvar splitAction = function ( e, dt, button, config ) {\n\t\t\t\t_dtButtons.split.action.call( dt.button(splitDiv), e, dt, button, config );\n\t\n\t\t\t\t$(dt.table().node()).triggerHandler( 'buttons-action.dt', [\n\t\t\t\t\tdt.button( button ), dt, button, config \n\t\t\t\t] );\n\t\t\t\tbutton.attr('aria-expanded', true)\n\t\t\t};\n\t\t\t\n\t\t\tvar dropButton = $('<button class=\"' + this.c.dom.splitDropdown.className + ' dt-button\"><span class=\"dt-btn-split-drop-arrow\">'+this.c.dom.splitDropdown.text+'</span></button>')\n\t\t\t\t.on( 'click.dtb', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tif ( ! dropButton.hasClass( buttonDom.disabled )) {\n\t\t\t\t\t\tsplitAction( e, dt, dropButton, dropButtonConfig );\n\t\t\t\t\t}\n\t\t\t\t\tif ( clickBlurs ) {\n\t\t\t\t\t\tdropButton.trigger('blur');\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'keypress.dtb', function (e) {\n\t\t\t\t\tif ( e.keyCode === 13 ) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tif ( ! dropButton.hasClass( buttonDom.disabled ) ) {\n\t\t\t\t\t\t\tsplitAction( e, dt, dropButton, dropButtonConfig );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\tif(config.split.length === 0) {\n\t\t\t\tdropButton.addClass('dtb-hide-drop');\n\t\t\t}\n\n\t\t\tsplitDiv.append(dropButton).attr(dropButtonConfig.attr);\n\t\t}\n\n\t\treturn {\n\t\t\tconf:         config,\n\t\t\tnode:         isSplit ? splitDiv.get(0) : button.get(0),\n\t\t\tinserter:     isSplit ? splitDiv : inserter,\n\t\t\tbuttons:      [],\n\t\t\tinCollection: inCollection,\n\t\t\tisSplit:\t  isSplit,\n\t\t\tinSplit:\t  inSplit,\n\t\t\tcollection:   null\n\t\t};\n\t},\n\n\t/**\n\t * Get the button object from a node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {object} Button object\n\t * @private\n\t */\n\t_nodeToButton: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons[i];\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToButton( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Get container array for a button from a button node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {array} Button's host array\n\t * @private\n\t */\n\t_nodeToHost: function ( node, buttons )\n\t{\n\t\tif ( ! buttons ) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tif ( buttons[i].node === node ) {\n\t\t\t\treturn buttons;\n\t\t\t}\n\n\t\t\tif ( buttons[i].buttons.length ) {\n\t\t\t\tvar ret = this._nodeToHost( node, buttons[i].buttons );\n\n\t\t\t\tif ( ret ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handle a key press - determine if any button's key configured matches\n\t * what was typed and trigger the action if so.\n\t * @param  {string} character The character pressed\n\t * @param  {object} e Key event that triggered this call\n\t * @private\n\t */\n\t_keypress: function ( character, e )\n\t{\n\t\t// Check if this button press already activated on another instance of Buttons\n\t\tif ( e._buttonsHandled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar run = function ( conf, node ) {\n\t\t\tif ( ! conf.key ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( conf.key === character ) {\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t\telse if ( $.isPlainObject( conf.key ) ) {\n\t\t\t\tif ( conf.key.key !== character ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.shiftKey && ! e.shiftKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.altKey && ! e.altKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.ctrlKey && ! e.ctrlKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( conf.key.metaKey && ! e.metaKey ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Made it this far - it is good\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t};\n\n\t\tvar recurse = function ( a ) {\n\t\t\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\trun( a[i].conf, a[i].node );\n\n\t\t\t\tif ( a[i].buttons.length ) {\n\t\t\t\t\trecurse( a[i].buttons );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trecurse( this.s.buttons );\n\t},\n\n\t/**\n\t * Remove a key from the key listener for this instance (to be used when a\n\t * button is removed)\n\t * @param  {object} conf Button configuration\n\t * @private\n\t */\n\t_removeKey: function ( conf )\n\t{\n\t\tif ( conf.key ) {\n\t\t\tvar character = $.isPlainObject( conf.key ) ?\n\t\t\t\tconf.key.key :\n\t\t\t\tconf.key;\n\n\t\t\t// Remove only one character, as multiple buttons could have the\n\t\t\t// same listening key\n\t\t\tvar a = this.s.listenKeys.split('');\n\t\t\tvar idx = $.inArray( character, a );\n\t\t\ta.splice( idx, 1 );\n\t\t\tthis.s.listenKeys = a.join('');\n\t\t}\n\t},\n\n\t/**\n\t * Resolve a button configuration\n\t * @param  {string|function|object} conf Button config to resolve\n\t * @return {object} Button configuration\n\t * @private\n\t */\n\t_resolveExtends: function ( conf )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar toConfObject = function ( base ) {\n\t\t\tvar loop = 0;\n\n\t\t\t// Loop until we have resolved to a button configuration, or an\n\t\t\t// array of button configurations (which will be iterated\n\t\t\t// separately)\n\t\t\twhile ( ! $.isPlainObject(base) && ! Array.isArray(base) ) {\n\t\t\t\tif ( base === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( typeof base === 'function' ) {\n\t\t\t\t\tbase = base.call( that, dt, conf );\n\n\t\t\t\t\tif ( ! base ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( typeof base === 'string' ) {\n\t\t\t\t\tif ( ! _dtButtons[ base ] ) {\n\t\t\t\t\t\treturn {html: base}\n\t\t\t\t\t}\n\n\t\t\t\t\tbase = _dtButtons[ base ];\n\t\t\t\t}\n\n\t\t\t\tloop++;\n\t\t\t\tif ( loop > 30 ) {\n\t\t\t\t\t// Protect against misconfiguration killing the browser\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Array.isArray( base ) ?\n\t\t\t\tbase :\n\t\t\t\t$.extend( {}, base );\n\t\t};\n\n\t\tconf = toConfObject( conf );\n\n\t\twhile ( conf && conf.extend ) {\n\t\t\t// Use `toConfObject` in case the button definition being extended\n\t\t\t// is itself a string or a function\n\t\t\tif ( ! _dtButtons[ conf.extend ] ) {\n\t\t\t\tthrow 'Cannot extend unknown button type: '+conf.extend;\n\t\t\t}\n\n\t\t\tvar objArray = toConfObject( _dtButtons[ conf.extend ] );\n\t\t\tif ( Array.isArray( objArray ) ) {\n\t\t\t\treturn objArray;\n\t\t\t}\n\t\t\telse if ( ! objArray ) {\n\t\t\t\t// This is a little brutal as it might be possible to have a\n\t\t\t\t// valid button without the extend, but if there is no extend\n\t\t\t\t// then the host button would be acting in an undefined state\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stash the current class name\n\t\t\tvar originalClassName = objArray.className;\n\n\t\t\tif (conf.config !== undefined && objArray.config !== undefined) {\n\t\t\t\tconf.config = $.extend({}, objArray.config, conf.config)\n\t\t\t}\n\n\t\t\tconf = $.extend( {}, objArray, conf );\n\n\t\t\t// The extend will have overwritten the original class name if the\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\n\t\t\t// them so they are list that is combined from all extended buttons\n\t\t\tif ( originalClassName && conf.className !== originalClassName ) {\n\t\t\t\tconf.className = originalClassName+' '+conf.className;\n\t\t\t}\n\n\t\t\t// Although we want the `conf` object to overwrite almost all of\n\t\t\t// the properties of the object being extended, the `extend`\n\t\t\t// property should come from the object being extended\n\t\t\tconf.extend = objArray.extend;\n\t\t}\n\n\t\t// Buttons to be added to a collection  -gives the ability to define\n\t\t// if buttons should be added to the start or end of a collection\n\t\tvar postfixButtons = conf.postfixButtons;\n\t\tif ( postfixButtons ) {\n\t\t\tif ( ! conf.buttons ) {\n\t\t\t\tconf.buttons = [];\n\t\t\t}\n\n\t\t\tfor ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {\n\t\t\t\tconf.buttons.push( postfixButtons[i] );\n\t\t\t}\n\t\t}\n\n\t\tvar prefixButtons = conf.prefixButtons;\n\t\tif ( prefixButtons ) {\n\t\t\tif ( ! conf.buttons ) {\n\t\t\t\tconf.buttons = [];\n\t\t\t}\n\n\t\t\tfor ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {\n\t\t\t\tconf.buttons.splice( i, 0, prefixButtons[i] );\n\t\t\t}\n\t\t}\n\n\t\treturn conf;\n\t},\n\n\t/**\n\t * Display (and replace if there is an existing one) a popover attached to a button\n\t * @param {string|node} content Content to show\n\t * @param {DataTable.Api} hostButton DT API instance of the button\n\t * @param {object} inOpts Options (see object below for all options)\n\t */\n\t_popover: function ( content, hostButton, inOpts, e ) {\n\t\tvar dt = hostButton;\n\t\tvar buttonsSettings = this.c;\n\t\tvar closed = false;\n\t\tvar options = $.extend( {\n\t\t\talign: 'button-left', // button-right, dt-container, split-left, split-right\n\t\t\tautoClose: false,\n\t\t\tbackground: true,\n\t\t\tbackgroundClassName: 'dt-button-background',\n\t\t\tcloseButton: true,\n\t\t\tcontentClassName: buttonsSettings.dom.collection.className,\n\t\t\tcollectionLayout: '',\n\t\t\tcollectionTitle: '',\n\t\t\tdropup: false,\n\t\t\tfade: 400,\n\t\t\tpopoverTitle: '',\n\t\t\trightAlignClassName: 'dt-button-right',\n\t\t\ttag: buttonsSettings.dom.collection.tag\n\t\t}, inOpts );\n\n\t\tvar hostNode = hostButton.node();\n\n\t\tvar close = function () {\n\t\t\tclosed = true;\n\n\t\t\t_fadeOut(\n\t\t\t\t$('.dt-button-collection'),\n\t\t\t\toptions.fade,\n\t\t\t\tfunction () {\n\t\t\t\t\t$(this).detach();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t$(dt.buttons( '[aria-haspopup=\"dialog\"][aria-expanded=\"true\"]' ).nodes())\n\t\t\t\t.attr('aria-expanded', 'false');\n\n\t\t\t$('div.dt-button-background').off( 'click.dtb-collection' );\n\t\t\tButtons.background( false, options.backgroundClassName, options.fade, hostNode );\n\n\t\t\t$(window).off('resize.resize.dtb-collection');\n\t\t\t$('body').off( '.dtb-collection' );\n\t\t\tdt.off( 'buttons-action.b-internal' );\n\t\t\tdt.off( 'destroy' );\n\t\t};\n\n\t\tif (content === false) {\n\t\t\tclose();\n\t\t\treturn;\n\t\t}\n\n\t\tvar existingExpanded = $(dt.buttons( '[aria-haspopup=\"dialog\"][aria-expanded=\"true\"]' ).nodes());\n\t\tif ( existingExpanded.length ) {\n\t\t\t// Reuse the current position if the button that was triggered is inside an existing collection\n\t\t\tif (hostNode.closest('div.dt-button-collection').length) {\n\t\t\t\thostNode = existingExpanded.eq(0);\n\t\t\t}\n\n\t\t\tclose();\n\t\t}\n\n\t\t// Try to be smart about the layout\n\t\tvar cnt = $('.dt-button', content).length;\n\t\tvar mod = '';\n\n\t\tif (cnt === 3) {\n\t\t\tmod = 'dtb-b3';\n\t\t}\n\t\telse if (cnt === 2) {\n\t\t\tmod = 'dtb-b2';\n\t\t}\n\t\telse if (cnt === 1) {\n\t\t\tmod = 'dtb-b1';\n\t\t}\n\n\t\tvar display = $('<div/>')\n\t\t\t.addClass('dt-button-collection')\n\t\t\t.addClass(options.collectionLayout)\n\t\t\t.addClass(options.splitAlignClass)\n\t\t\t.addClass(mod)\n\t\t\t.css('display', 'none')\n\t\t\t.attr({\n\t\t\t\t'aria-modal': true,\n\t\t\t\trole: 'dialog'\n\t\t\t});\n\n\t\tcontent = $(content)\n\t\t\t.addClass(options.contentClassName)\n\t\t\t.attr('role', 'menu')\n\t\t\t.appendTo(display);\n\n\t\thostNode.attr( 'aria-expanded', 'true' );\n\n\t\tif ( hostNode.parents('body')[0] !== document.body ) {\n\t\t\thostNode = document.body.lastChild;\n\t\t}\n\n\t\tif ( options.popoverTitle ) {\n\t\t\tdisplay.prepend('<div class=\"dt-button-collection-title\">'+options.popoverTitle+'</div>');\n\t\t}\n\t\telse if ( options.collectionTitle ) {\n\t\t\tdisplay.prepend('<div class=\"dt-button-collection-title\">'+options.collectionTitle+'</div>');\n\t\t}\n\n\t\tif (options.closeButton) {\n\t\t\tdisplay.prepend('<div class=\"dtb-popover-close\">x</div>').addClass('dtb-collection-closeable')\n\t\t}\n\n\t\t_fadeIn( display.insertAfter( hostNode ), options.fade );\n\n\t\tvar tableContainer = $( hostButton.table().container() );\n\t\tvar position = display.css( 'position' );\n\n\t\tif ( options.span === 'container' || options.align === 'dt-container' ) {\n\t\t\thostNode = hostNode.parent();\n\t\t\tdisplay.css('width', tableContainer.width());\n\t\t}\n\n\t\t// Align the popover relative to the DataTables container\n\t\t// Useful for wide popovers such as SearchPanes\n\t\tif (position === 'absolute') {\n\t\t\t// Align relative to the host button\n\t\t\tvar offsetParent = $(hostNode[0].offsetParent);\n\t\t\tvar buttonPosition = hostNode.position();\n\t\t\tvar buttonOffset = hostNode.offset();\n\t\t\tvar tableSizes = offsetParent.offset();\n\t\t\tvar containerPosition = offsetParent.position();\n\t\t\tvar computed = window.getComputedStyle(offsetParent[0]);\n\n\t\t\ttableSizes.height = offsetParent.outerHeight();\n\t\t\ttableSizes.width = offsetParent.width() + parseFloat(computed.paddingLeft);\n\t\t\ttableSizes.right = tableSizes.left + tableSizes.width;\n\t\t\ttableSizes.bottom = tableSizes.top + tableSizes.height;\n\n\t\t\t// Set the initial position so we can read height / width\n\t\t\tvar top = buttonPosition.top + hostNode.outerHeight();\n\t\t\tvar left = buttonPosition.left;\n\n\t\t\tdisplay.css( {\n\t\t\t\ttop: top,\n\t\t\t\tleft: left\n\t\t\t} );\n\n\t\t\t// Get the popover position\n\t\t\tcomputed = window.getComputedStyle(display[0]);\n\t\t\tvar popoverSizes = display.offset();\n\n\t\t\tpopoverSizes.height = display.outerHeight();\n\t\t\tpopoverSizes.width = display.outerWidth();\n\t\t\tpopoverSizes.right = popoverSizes.left + popoverSizes.width;\n\t\t\tpopoverSizes.bottom = popoverSizes.top + popoverSizes.height;\n\t\t\tpopoverSizes.marginTop = parseFloat(computed.marginTop);\n\t\t\tpopoverSizes.marginBottom = parseFloat(computed.marginBottom);\n\n\t\t\t// First position per the class requirements - pop up and right align\n\t\t\tif (options.dropup) {\n\t\t\t\ttop = buttonPosition.top - popoverSizes.height - popoverSizes.marginTop - popoverSizes.marginBottom;\n\t\t\t}\n\n\t\t\tif (options.align === 'button-right' || display.hasClass( options.rightAlignClassName )) {\n\t\t\t\tleft = buttonPosition.left - popoverSizes.width + hostNode.outerWidth(); \n\t\t\t}\n\n\t\t\t// Container alignment - make sure it doesn't overflow the table container\n\t\t\tif (options.align === 'dt-container' || options.align === 'container') {\n\t\t\t\tif (left < buttonPosition.left) {\n\t\t\t\t\tleft = -buttonPosition.left;\n\t\t\t\t}\n\n\t\t\t\tif (left + popoverSizes.width > tableSizes.width) {\n\t\t\t\t\tleft = tableSizes.width - popoverSizes.width;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Window adjustment\n\t\t\tif (containerPosition.left + left + popoverSizes.width > $(window).width()) {\n\t\t\t\t// Overflowing the document to the right\n\t\t\t\tleft = $(window).width() - popoverSizes.width - containerPosition.left;\n\t\t\t}\n\n\t\t\tif (buttonOffset.left + left < 0) {\n\t\t\t\t// Off to the left of the document\n\t\t\t\tleft = -buttonOffset.left;\n\t\t\t}\n\n\t\t\tif (containerPosition.top + top + popoverSizes.height > $(window).height() + $(window).scrollTop()) {\n\t\t\t\t// Pop up if otherwise we'd need the user to scroll down\n\t\t\t\ttop = buttonPosition.top - popoverSizes.height - popoverSizes.marginTop - popoverSizes.marginBottom;\n\t\t\t}\n\n\t\t\tif (containerPosition.top + top < $(window).scrollTop()) {\n\t\t\t\t// Correction for when the top is beyond the top of the page\n\t\t\t\ttop = buttonPosition.top + hostNode.outerHeight();\n\t\t\t}\n\n\t\t\t// Calculations all done - now set it\n\t\t\tdisplay.css( {\n\t\t\t\ttop: top,\n\t\t\t\tleft: left\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t// Fix position - centre on screen\n\t\t\tvar position = function () {\n\t\t\t\tvar half = $(window).height() / 2;\n\n\t\t\t\tvar top = display.height() / 2;\n\t\t\t\tif ( top > half ) {\n\t\t\t\t\ttop = half;\n\t\t\t\t}\n\n\t\t\t\tdisplay.css( 'marginTop', top*-1 );\n\t\t\t};\n\n\t\t\tposition();\n\n\t\t\t$(window).on('resize.dtb-collection', function () {\n\t\t\t\tposition();\n\t\t\t});\n\t\t}\n\n\t\tif ( options.background ) {\n\t\t\tButtons.background(\n\t\t\t\ttrue,\n\t\t\t\toptions.backgroundClassName,\n\t\t\t\toptions.fade,\n\t\t\t\toptions.backgroundHost || hostNode\n\t\t\t);\n\t\t}\n\n\t\t// This is bonkers, but if we don't have a click listener on the\n\t\t// background element, iOS Safari will ignore the body click\n\t\t// listener below. An empty function here is all that is\n\t\t// required to make it work...\n\t\t$('div.dt-button-background').on( 'click.dtb-collection', function () {} );\n\n\t\tif ( options.autoClose ) {\n\t\t\tsetTimeout( function () {\n\t\t\t\tdt.on( 'buttons-action.b-internal', function (e, btn, dt, node) {\n\t\t\t\t\tif ( node[0] === hostNode[0] ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tclose();\n\t\t\t\t} );\n\t\t\t}, 0);\n\t\t}\n\t\t\n\t\t$(display).trigger('buttons-popover.dt');\n\n\n\t\tdt.on('destroy', close);\n\n\t\tsetTimeout(function() {\n\t\t\tclosed = false;\n\t\t\t$('body')\n\t\t\t\t.on( 'click.dtb-collection', function (e) {\n\t\t\t\t\tif (closed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// andSelf is deprecated in jQ1.8, but we want 1.7 compat\n\t\t\t\t\tvar back = $.fn.addBack ? 'addBack' : 'andSelf';\n\t\t\t\t\tvar parent = $(e.target).parent()[0];\n\t\n\t\t\t\t\tif (( ! $(e.target).parents()[back]().filter( content ).length  && !$(parent).hasClass('dt-buttons')) || $(e.target).hasClass('dt-button-background')) {\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'keyup.dtb-collection', function (e) {\n\t\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'keydown.dtb-collection', function (e) {\n\t\t\t\t\t// Focus trap for tab key\n\t\t\t\t\tvar elements = $('a, button', content);\n\t\t\t\t\tvar active = document.activeElement;\n\n\t\t\t\t\tif (e.keyCode !== 9) { // tab\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (elements.index(active) === -1) {\n\t\t\t\t\t\t// If current focus is not inside the popover\n\t\t\t\t\t\telements.first().focus();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\telse if (e.shiftKey) {\n\t\t\t\t\t\t// Reverse tabbing order when shift key is pressed\n\t\t\t\t\t\tif (active === elements[0]) {\n\t\t\t\t\t\t\telements.last().focus();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (active === elements.last()[0]) {\n\t\t\t\t\t\t\telements.first().focus();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, 0);\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden \n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function ( show, className, fade, insertPoint ) {\n\tif ( fade === undefined ) {\n\t\tfade = 400;\n\t}\n\tif ( ! insertPoint ) {\n\t\tinsertPoint = document.body;\n\t}\n\n\tif ( show ) {\n\t\t_fadeIn(\n\t\t\t$('<div/>')\n\t\t\t\t.addClass( className )\n\t\t\t\t.css( 'display', 'none' )\n\t\t\t\t.insertAfter( insertPoint ),\n\t\t\tfade\n\t\t);\n\t}\n\telse {\n\t\t_fadeOut(\n\t\t\t$('div.'+className),\n\t\t\tfade,\n\t\t\tfunction () {\n\t\t\t\t$(this)\n\t\t\t\t\t.removeClass( className )\n\t\t\t\t\t.remove();\n\t\t\t}\n\t\t);\n\t}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function ( group, buttons )\n{\n\tif ( group === undefined || group === null ) {\n\t\treturn $.map( buttons, function ( v ) {\n\t\t\treturn v.inst;\n\t\t} );\n\t}\n\n\tvar ret = [];\n\tvar names = $.map( buttons, function ( v ) {\n\t\treturn v.name;\n\t} );\n\n\t// Flatten the group selector into an array of single options\n\tvar process = function ( input ) {\n\t\tif ( Array.isArray( input ) ) {\n\t\t\tfor ( var i=0, ien=input.length ; i<ien ; i++ ) {\n\t\t\t\tprocess( input[i] );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof input === 'string' ) {\n\t\t\tif ( input.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// String selector, list of names\n\t\t\t\tprocess( input.split(',') );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// String selector individual name\n\t\t\t\tvar idx = $.inArray( input.trim(), names );\n\n\t\t\t\tif ( idx !== -1 ) {\n\t\t\t\t\tret.push( buttons[ idx ].inst );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if ( typeof input === 'number' ) {\n\t\t\t// Index selector\n\t\t\tret.push( buttons[ input ].inst );\n\t\t}\n\t\telse if ( typeof input === 'object' ) {\n\t\t\t// Actual instance selector\n\t\t\tret.push( input );\n\t\t}\n\t};\n\t\n\tprocess( group );\n\n\treturn ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function ( insts, selector )\n{\n\tvar ret = [];\n\tvar nodeBuilder = function ( a, buttons, baseIdx ) {\n\t\tvar button;\n\t\tvar idx;\n\n\t\tfor ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif ( button ) {\n\t\t\t\tidx = baseIdx !== undefined ?\n\t\t\t\t\tbaseIdx+i :\n\t\t\t\t\ti+'';\n\n\t\t\t\ta.push( {\n\t\t\t\t\tnode: button.node,\n\t\t\t\t\tname: button.conf.name,\n\t\t\t\t\tidx:  idx\n\t\t\t\t} );\n\n\t\t\t\tif ( button.buttons ) {\n\t\t\t\t\tnodeBuilder( a, button.buttons, idx+'-' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar run = function ( selector, inst ) {\n\t\tvar i, ien;\n\t\tvar buttons = [];\n\t\tnodeBuilder( buttons, inst.s.buttons );\n\n\t\tvar nodes = $.map( buttons, function (v) {\n\t\t\treturn v.node;\n\t\t} );\n\n\t\tif ( Array.isArray( selector ) || selector instanceof $ ) {\n\t\t\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t\t\trun( selector[i], inst );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif ( selector === null || selector === undefined || selector === '*' ) {\n\t\t\t// Select all\n\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'number' ) {\n\t\t\t// Main button index selector\n\t\t\tif (inst.s.buttons[ selector ]) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: inst.s.buttons[ selector ].node\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'string' ) {\n\t\t\tif ( selector.indexOf( ',' ) !== -1 ) {\n\t\t\t\t// Split\n\t\t\t\tvar a = selector.split(',');\n\n\t\t\t\tfor ( i=0, ien=a.length ; i<ien ; i++ ) {\n\t\t\t\t\trun( a[i].trim(), inst );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( selector.match( /^\\d+(\\-\\d+)*$/ ) ) {\n\t\t\t\t// Sub-button index selector\n\t\t\t\tvar indexes = $.map( buttons, function (v) {\n\t\t\t\t\treturn v.idx;\n\t\t\t\t} );\n\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[ $.inArray( selector, indexes ) ].node\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse if ( selector.indexOf( ':name' ) !== -1 ) {\n\t\t\t\t// Button name selector\n\t\t\t\tvar name = selector.replace( ':name', '' );\n\n\t\t\t\tfor ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( buttons[i].name === name ) {\n\t\t\t\t\t\tret.push( {\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// jQuery selector on the nodes\n\t\t\t\t$( nodes ).filter( selector ).each( function () {\n\t\t\t\t\tret.push( {\n\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\tnode: this\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\telse if ( typeof selector === 'object' && selector.nodeName ) {\n\t\t\t// Node selector\n\t\t\tvar idx = $.inArray( selector, nodes );\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tret.push( {\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: nodes[ idx ]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t};\n\n\n\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\tvar inst = insts[i];\n\n\t\trun( selector, inst );\n\t}\n\n\treturn ret;\n};\n\n/**\n * Default function used for formatting output data.\n * @param {*} str Data to strip\n */\nButtons.stripData = function ( str, config ) {\n\tif ( typeof str !== 'string' ) {\n\t\treturn str;\n\t}\n\n\t// Always remove script tags\n\tstr = str.replace( /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '' );\n\n\t// Always remove comments\n\tstr = str.replace( /<!\\-\\-.*?\\-\\->/g, '' );\n\n\tif ( ! config || config.stripHtml ) {\n\t\tstr = str.replace( /<[^>]*>/g, '' );\n\t}\n\n\tif ( ! config || config.trim ) {\n\t\tstr = str.replace( /^\\s+|\\s+$/g, '' );\n\t}\n\n\tif ( ! config || config.stripNewlines ) {\n\t\tstr = str.replace( /\\n/g, ' ' );\n\t}\n\n\tif ( ! config || config.decodeEntities ) {\n\t\t_exportTextarea.innerHTML = str;\n\t\tstr = _exportTextarea.value;\n\t}\n\n\treturn str;\n};\n\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n\tbuttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],\n\tname: 'main',\n\ttabIndex: 0,\n\tdom: {\n\t\tcontainer: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-buttons'\n\t\t},\n\t\tcollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: ''\n\t\t},\n\t\tbutton: {\n\t\t\ttag: 'button',\n\t\t\tclassName: 'dt-button',\n\t\t\tactive: 'active',\n\t\t\tdisabled: 'disabled',\n\t\t\tspacerClass: ''\n\t\t},\n\t\tbuttonLiner: {\n\t\t\ttag: 'span',\n\t\t\tclassName: ''\n\t\t},\n\t\tsplit: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-button-split',\n\t\t},\n\t\tsplitWrapper: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-btn-split-wrapper',\n\t\t},\n\t\tsplitDropdown: {\n\t\t\ttag: 'button',\n\t\t\ttext: '&#x25BC;',\n\t\t\tclassName: 'dt-btn-split-drop',\n\t\t\talign: 'split-right',\n\t\t\tsplitAlignClass: 'dt-button-split-left'\n\t\t},\n\t\tsplitDropdownButton: {\n\t\t\ttag: 'button',\n\t\t\tclassName: 'dt-btn-split-drop-button dt-button',\n\t\t},\n\t\tsplitCollection: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-button-split-collection',\n\t\t}\n\t}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '2.3.6';\n\n\n$.extend( _dtButtons, {\n\tcollection: {\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.collection', 'Collection' );\n\t\t},\n\t\tclassName: 'buttons-collection',\n\t\tcloseButton: false,\n\t\tinit: function ( dt, button, config ) {\n\t\t\tbutton.attr( 'aria-expanded', false );\n\t\t},\n\t\taction: function ( e, dt, button, config ) {\n\t\t\tif ( config._collection.parents('body').length ) {\n\t\t\t\tthis.popover(false, config);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.popover(config._collection, config);\n\t\t\t}\n\n\t\t\t// When activated using a key - auto focus on the\n\t\t\t// first item in the popover\n\t\t\tif (e.type === 'keypress') {\n\t\t\t\t$('a, button', config._collection).eq(0).focus();\n\t\t\t}\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': 'dialog'\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tsplit: {\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.split', 'Split' );\n\t\t},\n\t\tclassName: 'buttons-split',\n\t\tcloseButton: false,\n\t\tinit: function ( dt, button, config ) {\n\t\t\treturn button.attr( 'aria-expanded', false );\n\t\t},\n\t\taction: function ( e, dt, button, config ) {\n\t\t\tthis.popover(config._collection, config);\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': 'dialog'\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tcopy: function ( dt, conf ) {\n\t\tif ( _dtButtons.copyHtml5 ) {\n\t\t\treturn 'copyHtml5';\n\t\t}\n\t},\n\tcsv: function ( dt, conf ) {\n\t\tif ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {\n\t\t\treturn 'csvHtml5';\n\t\t}\n\t},\n\texcel: function ( dt, conf ) {\n\t\tif ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {\n\t\t\treturn 'excelHtml5';\n\t\t}\n\t},\n\tpdf: function ( dt, conf ) {\n\t\tif ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {\n\t\t\treturn 'pdfHtml5';\n\t\t}\n\t},\n\tpageLength: function ( dt ) {\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\n\t\tvar vals = [];\n\t\tvar lang = [];\n\t\tvar text = function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.pageLength', {\n\t\t\t\t\"-1\": 'Show all rows',\n\t\t\t\t_:    'Show %d rows'\n\t\t\t}, dt.page.len() );\n\t\t};\n\n\t\t// Support for DataTables 1.x 2D array\n\t\tif (Array.isArray( lengthMenu[0] )) {\n\t\t\tvals = lengthMenu[0];\n\t\t\tlang = lengthMenu[1];\n\t\t}\n\t\telse {\n\t\t\tfor (var i=0 ; i<lengthMenu.length ; i++) {\n\t\t\t\tvar option = lengthMenu[i];\n\n\t\t\t\t// Support for DataTables 2 object in the array\n\t\t\t\tif ($.isPlainObject(option)) {\n\t\t\t\t\tvals.push(option.value);\n\t\t\t\t\tlang.push(option.label);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvals.push(option);\n\t\t\t\t\tlang.push(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: text,\n\t\t\tclassName: 'buttons-page-length',\n\t\t\tautoClose: true,\n\t\t\tbuttons: $.map( vals, function ( val, i ) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: lang[i],\n\t\t\t\t\tclassName: 'button-page-length',\n\t\t\t\t\taction: function ( e, dt ) {\n\t\t\t\t\t\tdt.page.len( val ).draw();\n\t\t\t\t\t},\n\t\t\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\tthat.active( dt.page.len() === val );\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdt.on( 'length.dt'+conf.namespace, fn );\n\t\t\t\t\t\tfn();\n\t\t\t\t\t},\n\t\t\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} ),\n\t\t\tinit: function ( dt, node, conf ) {\n\t\t\t\tvar that = this;\n\t\t\t\tdt.on( 'length.dt'+conf.namespace, function () {\n\t\t\t\t\tthat.text( conf.text );\n\t\t\t\t} );\n\t\t\t},\n\t\t\tdestroy: function ( dt, node, conf ) {\n\t\t\t\tdt.off( 'length.dt'+conf.namespace );\n\t\t\t}\n\t\t};\n\t},\n\tspacer: {\n\t\tstyle: 'empty',\n\t\tspacer: true,\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.spacer', '' );\n\t\t}\n\t}\n} );\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register( 'buttons()', function ( group, selector ) {\n\t// Argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = group;\n\t\tgroup = undefined;\n\t}\n\n\tthis.selector.buttonGroup = group;\n\n\tvar res = this.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\treturn Buttons.buttonSelector(\n\t\t\t\tButtons.instanceSelector( group, ctx._buttons ),\n\t\t\t\tselector\n\t\t\t);\n\t\t}\n\t}, true );\n\n\tres._groupSelector = group;\n\treturn res;\n} );\n\n// Individual button selector\nDataTable.Api.register( 'button()', function ( group, selector ) {\n\t// just run buttons() and truncate\n\tvar buttons = this.buttons( group, selector );\n\n\tif ( buttons.length > 1 ) {\n\t\tbuttons.splice( 1, buttons.length );\n\t}\n\n\treturn buttons;\n} );\n\n// Active buttons\nDataTable.Api.registerPlural( 'buttons().active()', 'button().active()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.active( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.active( set.node, flag );\n\t} );\n} );\n\n// Get / set button action\nDataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.action( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.action( set.node, action );\n\t} );\n} );\n\n// Collection control\nDataTable.Api.registerPlural( 'buttons().collectionRebuild()', 'button().collectionRebuild()', function ( buttons ) {\n\treturn this.each( function ( set ) {\n\t\tfor(var i = 0; i < buttons.length; i++) {\n\t\t\tif(typeof buttons[i] === 'object') {\n\t\t\t\tbuttons[i].parentConf = set;\n\t\t\t}\n\t\t}\n\t\tset.inst.collectionRebuild( set.node, buttons );\n\t} );\n} );\n\n// Enable / disable buttons\nDataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {\n\treturn this.each( function ( set ) {\n\t\tset.inst.enable( set.node, flag );\n\t} );\n} );\n\n// Disable buttons\nDataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.disable( set.node );\n\t} );\n} );\n\n// Button index\nDataTable.Api.register( 'button().index()', function () {\n\tvar idx = null;\n\n\tthis.each( function ( set ) {\n\t\tvar res = set.inst.index( set.node );\n\n\t\tif (res !== null) {\n\t\t\tidx = res;\n\t\t}\n\t} );\n\n\treturn idx;\n} );\n\n// Get button nodes\nDataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {\n\tvar jq = $();\n\n\t// jQuery will automatically reduce duplicates to a single entry\n\t$( this.each( function ( set ) {\n\t\tjq = jq.add( set.inst.node( set.node ) );\n\t} ) );\n\n\treturn jq;\n} );\n\n// Get / set button processing state\nDataTable.Api.registerPlural( 'buttons().processing()', 'button().processing()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.processing( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.processing( set.node, flag );\n\t} );\n} );\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {\n\tif ( label === undefined ) {\n\t\treturn this.map( function ( set ) {\n\t\t\treturn set.inst.text( set.node );\n\t\t} );\n\t}\n\n\treturn this.each( function ( set ) {\n\t\tset.inst.text( set.node, label );\n\t} );\n} );\n\n// Trigger a button's action\nDataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {\n\treturn this.each( function ( set ) {\n\t\tset.inst.node( set.node ).trigger( 'click' );\n\t} );\n} );\n\n// Button resolver to the popover\nDataTable.Api.register( 'button().popover()', function (content, options) {\n\treturn this.map( function ( set ) {\n\t\treturn set.inst._popover( content, this.button(this[0].node), options );\n\t} );\n} );\n\n// Get the container elements\nDataTable.Api.register( 'buttons().containers()', function () {\n\tvar jq = $();\n\tvar groupSelector = this._groupSelector;\n\n\t// We need to use the group selector directly, since if there are no buttons\n\t// the result set will be empty\n\tthis.iterator( true, 'table', function ( ctx ) {\n\t\tif ( ctx._buttons ) {\n\t\t\tvar insts = Buttons.instanceSelector( groupSelector, ctx._buttons );\n\n\t\t\tfor ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n\t\t\t\tjq = jq.add( insts[i].container() );\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn jq;\n} );\n\nDataTable.Api.register( 'buttons().container()', function () {\n\t// API level of nesting is `buttons()` so we can zip into the containers method\n\treturn this.containers().eq(0);\n} );\n\n// Add a new button\nDataTable.Api.register( 'button().add()', function ( idx, conf, draw ) {\n\tvar ctx = this.context;\n\n\t// Don't use `this` as it could be empty - select the instances directly\n\tif ( ctx.length ) {\n\t\tvar inst = Buttons.instanceSelector( this._groupSelector, ctx[0]._buttons );\n\n\t\tif ( inst.length ) {\n\t\t\tinst[0].add( conf, idx , draw);\n\t\t}\n\t}\n\n\treturn this.button( this._groupSelector, idx );\n} );\n\n// Destroy the button sets selected\nDataTable.Api.register( 'buttons().destroy()', function () {\n\tthis.pluck( 'inst' ).unique().each( function ( inst ) {\n\t\tinst.destroy();\n\t} );\n\n\treturn this;\n} );\n\n// Remove a button\nDataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {\n\tthis.each( function ( set ) {\n\t\tset.inst.remove( set.node );\n\t} );\n\n\treturn this;\n} );\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register( 'buttons.info()', function ( title, message, time ) {\n\tvar that = this;\n\n\tif ( title === false ) {\n\t\tthis.off('destroy.btn-info');\n\t\t_fadeOut(\n\t\t\t$('#datatables_buttons_info'),\n\t\t\t400,\n\t\t\tfunction () {\n\t\t\t\t$(this).remove();\n\t\t\t}\n\t\t);\n\t\tclearTimeout( _infoTimer );\n\t\t_infoTimer = null;\n\n\t\treturn this;\n\t}\n\n\tif ( _infoTimer ) {\n\t\tclearTimeout( _infoTimer );\n\t}\n\n\tif ( $('#datatables_buttons_info').length ) {\n\t\t$('#datatables_buttons_info').remove();\n\t}\n\n\ttitle = title ? '<h2>'+title+'</h2>' : '';\n\n\t_fadeIn(\n\t\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n\t\t\t.html( title )\n\t\t\t.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )\n\t\t\t.css( 'display', 'none' )\n\t\t\t.appendTo( 'body' )\n\t);\n\n\tif ( time !== undefined && time !== 0 ) {\n\t\t_infoTimer = setTimeout( function () {\n\t\t\tthat.buttons.info( false );\n\t\t}, time );\n\t}\n\n\tthis.on('destroy.btn-info', function () {\n\t\tthat.buttons.info(false);\n\t});\n\n\treturn this;\n} );\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register( 'buttons.exportData()', function ( options ) {\n\tif ( this.context.length ) {\n\t\treturn _exportData( new DataTable.Api( this.context[0] ), options );\n\t}\n} );\n\n// Get information about the export that is common to many of the export data\n// types (DRY)\nDataTable.Api.register( 'buttons.exportInfo()', function ( conf ) {\n\tif ( ! conf ) {\n\t\tconf = {};\n\t}\n\n\treturn {\n\t\tfilename: _filename( conf ),\n\t\ttitle: _title( conf ),\n\t\tmessageTop: _message(this, conf.message || conf.messageTop, 'top'),\n\t\tmessageBottom: _message(this, conf.messageBottom, 'bottom')\n\t};\n} );\n\n\n\n/**\n * Get the file name for an exported file.\n *\n * @param {object}\tconfig Button configuration\n * @param {boolean} incExtension Include the file name extension\n */\nvar _filename = function ( config )\n{\n\t// Backwards compatibility\n\tvar filename = config.filename === '*' && config.title !== '*' && config.title !== undefined && config.title !== null && config.title !== '' ?\n\t\tconfig.title :\n\t\tconfig.filename;\n\n\tif ( typeof filename === 'function' ) {\n\t\tfilename = filename();\n\t}\n\n\tif ( filename === undefined || filename === null ) {\n\t\treturn null;\n\t}\n\n\tif ( filename.indexOf( '*' ) !== -1 ) {\n\t\tfilename = filename.replace( '*', $('head > title').text() ).trim();\n\t}\n\n\t// Strip characters which the OS will object to\n\tfilename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, \"\");\n\n\tvar extension = _stringOrFunction( config.extension );\n\tif ( ! extension ) {\n\t\textension = '';\n\t}\n\n\treturn filename + extension;\n};\n\n/**\n * Simply utility method to allow parameters to be given as a function\n *\n * @param {undefined|string|function} option Option\n * @return {null|string} Resolved value\n */\nvar _stringOrFunction = function ( option )\n{\n\tif ( option === null || option === undefined ) {\n\t\treturn null;\n\t}\n\telse if ( typeof option === 'function' ) {\n\t\treturn option();\n\t}\n\treturn option;\n};\n\n/**\n * Get the title for an exported file.\n *\n * @param {object} config\tButton configuration\n */\nvar _title = function ( config )\n{\n\tvar title = _stringOrFunction( config.title );\n\n\treturn title === null ?\n\t\tnull : title.indexOf( '*' ) !== -1 ?\n\t\t\ttitle.replace( '*', $('head > title').text() || 'Exported data' ) :\n\t\t\ttitle;\n};\n\nvar _message = function ( dt, option, position )\n{\n\tvar message = _stringOrFunction( option );\n\tif ( message === null ) {\n\t\treturn null;\n\t}\n\n\tvar caption = $('caption', dt.table().container()).eq(0);\n\tif ( message === '*' ) {\n\t\tvar side = caption.css( 'caption-side' );\n\t\tif ( side !== position ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn caption.length ?\n\t\t\tcaption.text() :\n\t\t\t'';\n\t}\n\n\treturn message;\n};\n\n\n\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function ( dt, inOpts )\n{\n\tvar config = $.extend( true, {}, {\n\t\trows:           null,\n\t\tcolumns:        '',\n\t\tmodifier:       {\n\t\t\tsearch: 'applied',\n\t\t\torder:  'applied'\n\t\t},\n\t\torthogonal:     'display',\n\t\tstripHtml:      true,\n\t\tstripNewlines:  true,\n\t\tdecodeEntities: true,\n\t\ttrim:           true,\n\t\tformat:         {\n\t\t\theader: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t},\n\t\t\tfooter: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t},\n\t\t\tbody: function ( d ) {\n\t\t\t\treturn Buttons.stripData( d, config );\n\t\t\t}\n\t\t},\n\t\tcustomizeData: null\n\t}, inOpts );\n\n\tvar header = dt.columns( config.columns ).indexes().map( function (idx) {\n\t\tvar el = dt.column( idx ).header();\n\t\treturn config.format.header( el.innerHTML, idx, el );\n\t} ).toArray();\n\n\tvar footer = dt.table().footer() ?\n\t\tdt.columns( config.columns ).indexes().map( function (idx) {\n\t\t\tvar el = dt.column( idx ).footer();\n\t\t\treturn config.format.footer( el ? el.innerHTML : '', idx, el );\n\t\t} ).toArray() :\n\t\tnull;\n\t\n\t// If Select is available on this table, and any rows are selected, limit the export\n\t// to the selected rows. If no rows are selected, all rows will be exported. Specify\n\t// a `selected` modifier to control directly.\n\tvar modifier = $.extend( {}, config.modifier );\n\tif ( dt.select && typeof dt.select.info === 'function' && modifier.selected === undefined ) {\n\t\tif ( dt.rows( config.rows, $.extend( { selected: true }, modifier ) ).any() ) {\n\t\t\t$.extend( modifier, { selected: true } )\n\t\t}\n\t}\n\n\tvar rowIndexes = dt.rows( config.rows, modifier ).indexes().toArray();\n\tvar selectedCells = dt.cells( rowIndexes, config.columns );\n\tvar cells = selectedCells\n\t\t.render( config.orthogonal )\n\t\t.toArray();\n\tvar cellNodes = selectedCells\n\t\t.nodes()\n\t\t.toArray();\n\n\tvar columns = header.length;\n\tvar rows = columns > 0 ? cells.length / columns : 0;\n\tvar body = [];\n\tvar cellCounter = 0;\n\n\tfor ( var i=0, ien=rows ; i<ien ; i++ ) {\n\t\tvar row = [ columns ];\n\n\t\tfor ( var j=0 ; j<columns ; j++ ) {\n\t\t\trow[j] = config.format.body( cells[ cellCounter ], i, j, cellNodes[ cellCounter ] );\n\t\t\tcellCounter++;\n\t\t}\n\n\t\tbody[i] = row;\n\t}\n\n\tvar data = {\n\t\theader: header,\n\t\tfooter: footer,\n\t\tbody:   body\n\t};\n\n\tif ( config.customizeData ) {\n\t\tconfig.customizeData( data );\n\t}\n\n\treturn data;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on( 'init.dt plugin-init.dt', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n\tif ( opts && ! settings._buttons ) {\n\t\tnew Buttons( settings, opts ).container();\n\t}\n} );\n\nfunction _init ( settings, options ) {\n\tvar api = new DataTable.Api( settings );\n\tvar opts = options\n\t\t? options\n\t\t: api.init().buttons || DataTable.defaults.buttons;\n\n\treturn new Buttons( api, opts ).container();\n}\n\n// DataTables `dom` feature option\nDataTable.ext.feature.push( {\n\tfnInit: _init,\n\tcFeature: \"B\"\n} );\n\n// DataTables 2 layout feature\nif ( DataTable.ext.features ) {\n\tDataTable.ext.features.register( 'buttons', _init );\n}\n\n\nexport default DataTable;\n"],
  "mappings": ";;;;;;;;;;;;AAIA,oBAAc;AACd;AAKA,IAAI,eAAe;AAGnB,IAAI,iBAAiB;AAErB,IAAI,aAAa,0BAAU,IAAI;AAG/B,SAAS,QAAQ,IAAI,UAAU,IAAI;AAClC,MAAI,cAAAA,QAAE,GAAG,SAAS;AACjB,OACE,KAAK,EACL,OAAQ,UAAU,EAAG;AAAA,EAExB,OACK;AACJ,OAAG,IAAI,WAAW,OAAO;AAEzB,QAAI,IAAI;AACP,SAAG,KAAK,EAAE;AAAA,IACX;AAAA,EACD;AACD;AAEA,SAAS,SAAS,IAAI,UAAU,IAAI;AACnC,MAAI,cAAAA,QAAE,GAAG,SAAS;AACjB,OACE,KAAK,EACL,QAAS,UAAU,EAAG;AAAA,EACzB,OACK;AACJ,OAAG,IAAI,WAAW,MAAM;AAExB,QAAI,IAAI;AACP,SAAG,KAAK,EAAE;AAAA,IACX;AAAA,EACD;AACD;AAOA,IAAI,UAAU,SAAU,IAAI,QAC5B;AAIC,MAAK,EAAE,gBAAgB,UAAW;AACjC,WAAO,SAAU,UAAU;AAC1B,aAAO,IAAI,QAAS,UAAU,EAAG,EAAE,UAAU;AAAA,IAC9C;AAAA,EACD;AAGA,MAAK,OAAQ,WAAa,aAAc;AACvC,aAAS,CAAC;AAAA,EACX;AAGA,MAAK,WAAW,MAAO;AACtB,aAAS,CAAC;AAAA,EACX;AAGA,MAAK,MAAM,QAAS,MAAO,GAAI;AAC9B,aAAS,EAAE,SAAS,OAAO;AAAA,EAC5B;AAEA,OAAK,IAAI,cAAAA,QAAE,OAAQ,MAAM,CAAC,GAAG,QAAQ,UAAU,MAAO;AAGtD,MAAK,OAAO,SAAU;AACrB,SAAK,EAAE,UAAU,OAAO;AAAA,EACzB;AAEA,OAAK,IAAI;AAAA,IACR,IAAI,IAAI,0BAAU,IAAK,EAAG;AAAA,IAC1B,SAAS,CAAC;AAAA,IACV,YAAY;AAAA,IACZ,WAAW,QAAO;AAAA,EACnB;AAEA,OAAK,MAAM;AAAA,IACV,eAAW,cAAAA,SAAE,MAAI,KAAK,EAAE,IAAI,UAAU,MAAI,IAAI,EAC5C,SAAU,KAAK,EAAE,IAAI,UAAU,SAAU;AAAA,EAC5C;AAEA,OAAK,aAAa;AACnB;AAGA,cAAAA,QAAE,OAAQ,QAAQ,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAe5B,QAAQ,SAAW,MAAM,QACzB;AACC,QAAI,SAAS,KAAK,cAAe,IAAK;AAEtC,QAAK,WAAW,QAAY;AAC3B,aAAO,OAAO,KAAK;AAAA,IACpB;AAEA,WAAO,KAAK,SAAS;AAErB,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,QAAQ,SAAW,MAAM,MAAO;AAC/B,QAAI,SAAS,KAAK,cAAe,IAAK;AACtC,QAAI,QAAQ,KAAK,EAAE,IAAI,OAAO;AAC9B,QAAI,aAAS,cAAAA,SAAE,OAAO,IAAI;AAE1B,QAAK,SAAS,QAAY;AACzB,aAAO,OAAO,SAAU,KAAM;AAAA,IAC/B;AAEA,WAAO,YAAa,OAAO,SAAS,SAAY,OAAO,IAAK;AAE5D,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,KAAK,SAAW,QAAQ,KAAK,MAC7B;AACC,QAAI,UAAU,KAAK,EAAE;AAErB,QAAK,OAAO,QAAQ,UAAW;AAC9B,UAAI,QAAQ,IAAI,MAAM,GAAG;AACzB,UAAI,OAAO,KAAK;AAEhB,eAAU,IAAE,GAAG,MAAI,MAAM,SAAO,GAAI,IAAE,KAAM,KAAM;AACjD,eAAO,KAAK,QAAS,MAAM,CAAC,IAAE,CAAE;AAAA,MACjC;AAEA,gBAAU,KAAK;AACf,YAAM,MAAO,MAAM,SAAO,CAAE,IAAE;AAAA,IAC/B;AAEA,SAAK;AAAA,MACJ;AAAA,MACA;AAAA,MACA,WAAW,SAAY,OAAO,QAAQ;AAAA,OACrC,WAAW,UAAa,OAAO,UAAU,UAAa,OAAO,MAAM,WAAW,MAAM,SAAS;AAAA,MAC9F;AAAA,MACA;AAAA,IACD;AAEA,QAAI,SAAS,UAAa,SAAS,MAAM;AACxC,WAAK,MAAM;AAAA,IACZ;AAEA,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA,EAKA,mBAAmB,SAAW,MAAM,YACpC;AACC,QAAI,SAAS,KAAK,cAAe,IAAK;AAEtC,QAAG,eAAe,QAAW;AAC5B,UAAI;AAEJ,WAAK,IAAE,OAAO,QAAQ,SAAO,GAAG,KAAG,GAAG,KAAK;AAC1C,aAAK,OAAO,OAAO,QAAQ,CAAC,EAAE,IAAI;AAAA,MACnC;AAGA,UAAI,OAAO,KAAK,eAAe;AAC9B,mBAAW,QAAQ,MAAM,YAAY,OAAO,KAAK,aAAa;AAAA,MAC/D;AAEA,UAAI,OAAO,KAAK,gBAAgB;AAC/B,mBAAW,KAAK,MAAM,YAAY,OAAO,KAAK,cAAc;AAAA,MAC7D;AAEA,WAAK,IAAE,GAAG,IAAE,WAAW,QAAQ,KAAK;AACnC,YAAI,SAAS,WAAW,CAAC;AAEzB,aAAK;AAAA,UACJ,OAAO;AAAA,UACP;AAAA,UACA,WAAW,UAAa,OAAO,WAAW,UAAa,OAAO,OAAO,UAAU;AAAA,UAC/E;AAAA,UACA,OAAO,eAAe,UAAa,OAAO,WAAW,UAAU;AAAA,UAC/D;AAAA,UACA,OAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAEA,SAAK,MAAM,OAAO,YAAY,OAAO,OAAO;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,WACX;AACC,WAAO,KAAK,IAAI;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAAS,SAAW,MAAO;AAC1B,QAAI,SAAS,KAAK,cAAe,IAAK;AAEtC,sBAAAA,SAAE,OAAO,IAAI,EACX,SAAU,KAAK,EAAE,IAAI,OAAO,QAAS,EACrC,KAAK,YAAY,IAAI;AAEvB,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,SAAS,WACT;AAEC,sBAAAA,SAAE,MAAM,EAAE,IAAK,WAAS,KAAK,EAAE,SAAU;AAIzC,QAAI,UAAU,KAAK,EAAE,QAAQ,MAAM;AACnC,QAAI,GAAG;AAEP,SAAM,IAAE,GAAG,MAAI,QAAQ,QAAS,IAAE,KAAM,KAAM;AAC7C,WAAK,OAAQ,QAAQ,CAAC,EAAE,IAAK;AAAA,IAC9B;AAGA,SAAK,IAAI,UAAU,OAAO;AAG1B,QAAI,cAAc,KAAK,EAAE,GAAG,SAAS,EAAE,CAAC;AAExC,SAAM,IAAE,GAAG,MAAI,YAAY,QAAS,IAAE,KAAM,KAAM;AACjD,UAAK,YAAY,SAAS,MAAO;AAChC,oBAAY,OAAQ,GAAG,CAAE;AACzB;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,QAAQ,SAAW,MAAM,MACzB;AACC,QAAK,SAAS,OAAQ;AACrB,aAAO,KAAK,QAAS,IAAK;AAAA,IAC3B;AAEA,QAAI,SAAS,KAAK,cAAe,IAAK;AACtC,sBAAAA,SAAE,OAAO,IAAI,EACX,YAAa,KAAK,EAAE,IAAI,OAAO,QAAS,EACxC,KAAK,YAAY,KAAK;AAExB,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,OAAO,SAAW,MAAM,QAAQ,SAChC;AACC,QAAK,CAAE,QAAS;AACf,eAAS;AACT,gBAAU,KAAK,EAAE;AAAA,IAClB;AAEA,aAAU,IAAE,GAAG,MAAI,QAAQ,QAAS,IAAE,KAAM,KAAM;AACjD,UAAI,QAAQ,QAAQ,CAAC,EAAE;AAEvB,UAAI,QAAQ,CAAC,EAAE,SAAS,MAAM;AAC7B,eAAO,SAAS;AAAA,MACjB;AAEA,UAAK,SAAS,MAAM,QAAS;AAC5B,YAAI,QAAQ,KAAK,MAAM,MAAM,IAAI,KAAK,KAAK;AAE3C,YAAI,UAAU,MAAM;AACnB,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,WACN;AACC,WAAO,KAAK,EAAE;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAM,SAAW,MACjB;AACC,QAAK,CAAE,MAAO;AACb,aAAO,KAAK,IAAI;AAAA,IACjB;AAEA,QAAI,SAAS,KAAK,cAAe,IAAK;AACtC,eAAO,cAAAA,SAAE,OAAO,IAAI;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY,SAAW,MAAM,MAC7B;AACC,QAAI,KAAK,KAAK,EAAE;AAChB,QAAI,SAAS,KAAK,cAAe,IAAK;AAEtC,QAAK,SAAS,QAAY;AACzB,iBAAO,cAAAA,SAAE,OAAO,IAAI,EAAE,SAAU,YAAa;AAAA,IAC9C;AAEA,sBAAAA,SAAE,OAAO,IAAI,EAAE,YAAa,cAAc,IAAK;AAE/C,sBAAAA,SAAE,GAAG,MAAM,EAAE,KAAK,CAAC,EAAE,eAAgB,yBAAyB;AAAA,MAC7D;AAAA,MAAM,GAAG,OAAQ,IAAK;AAAA,MAAG;AAAA,UAAI,cAAAA,SAAE,IAAI;AAAA,MAAG,OAAO;AAAA,IAC9C,CAAE;AAEF,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,SAAW,MACnB;AACC,QAAI,SAAS,KAAK,cAAe,IAAK;AACtC,QAAI,OAAO,KAAK,YAAa,IAAK;AAClC,QAAI,KAAK,KAAK,EAAE;AAGhB,QAAK,OAAO,QAAQ,QAAS;AAC5B,eAAU,IAAE,OAAO,QAAQ,SAAO,GAAI,KAAG,GAAI,KAAM;AAClD,aAAK,OAAQ,OAAO,QAAQ,CAAC,EAAE,IAAK;AAAA,MACrC;AAAA,IACD;AAEA,WAAO,KAAK,aAAa;AAGzB,QAAK,OAAO,KAAK,SAAU;AAC1B,aAAO,KAAK,QAAQ,KAAM,GAAG,OAAO,IAAI,GAAG,QAAI,cAAAA,SAAE,IAAI,GAAG,OAAO,IAAK;AAAA,IACrE;AAEA,SAAK,WAAY,OAAO,IAAK;AAE7B,sBAAAA,SAAE,OAAO,IAAI,EAAE,OAAO;AAEtB,QAAI,MAAM,cAAAA,QAAE,QAAS,QAAQ,IAAK;AAClC,SAAK,OAAQ,KAAK,CAAE;AAEpB,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,MAAM,SAAW,MAAM,OACvB;AACC,QAAI,SAAS,KAAK,cAAe,IAAK;AACtC,QAAI,cAAc,KAAK,EAAE,IAAI,WAAW;AACxC,QAAI,WAAW,OAAO,gBAAgB,eAAe,YAAY,MAChE,YAAY,MACZ,KAAK,EAAE,IAAI,YAAY;AACxB,QAAI,KAAK,KAAK,EAAE;AAChB,QAAI,aAAS,cAAAA,SAAE,OAAO,IAAI;AAC1B,QAAI,OAAO,SAAW,KAAM;AAC3B,aAAO,OAAO,QAAQ,aACrB,IAAK,IAAI,QAAQ,OAAO,IAAK,IAC7B;AAAA,IACF;AAEA,QAAK,UAAU,QAAY;AAC1B,aAAO,KAAM,OAAO,KAAK,IAAK;AAAA,IAC/B;AAEA,WAAO,KAAK,OAAO;AAEnB,QAAK,UAAW;AACf,aACE,SAAU,QAAS,EACnB,GAAG,CAAC,EACJ,OAAO,sBAAsB,EAC7B,KAAM,KAAK,KAAK,CAAE;AAAA,IACrB,OACK;AACJ,aAAO,KAAM,KAAK,KAAK,CAAE;AAAA,IAC1B;AAEA,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,cAAc,WACd;AACC,QAAI,OAAO;AACX,QAAI,KAAK,KAAK,EAAE;AAChB,QAAI,aAAa,GAAG,SAAS,EAAE,CAAC;AAChC,QAAI,UAAW,KAAK,EAAE;AAEtB,QAAK,CAAE,WAAW,UAAW;AAC5B,iBAAW,WAAW,CAAC;AAAA,IACxB;AAEA,eAAW,SAAS,KAAM;AAAA,MACzB,MAAM;AAAA,MACN,MAAM,KAAK,EAAE;AAAA,IACd,CAAE;AAEF,aAAU,IAAE,GAAG,MAAI,QAAQ,QAAS,IAAE,KAAM,KAAM;AACjD,WAAK,IAAK,QAAQ,CAAC,CAAE;AAAA,IACtB;AAEA,OAAG,GAAI,WAAW,SAAW,GAAG,UAAW;AAC1C,UAAK,aAAa,YAAa;AAC9B,aAAK,QAAQ;AAAA,MACd;AAAA,IACD,CAAE;AAGF,sBAAAA,SAAE,MAAM,EAAE,GAAI,WAAS,KAAK,EAAE,WAAW,SAAW,GAAI;AACvD,UAAK,CAAE,SAAS,iBAAiB,SAAS,kBAAkB,SAAS,MAAO;AAG3E,YAAI,YAAY,OAAO,aAAa,EAAE,OAAO,EAAE,YAAY;AAE3D,YAAK,KAAK,EAAE,WAAW,YAAY,EAAE,QAAS,SAAU,MAAM,IAAK;AAClE,eAAK,UAAW,WAAW,CAAE;AAAA,QAC9B;AAAA,MACD;AAAA,IACD,CAAE;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA,SAAS,SAAW,MACpB;AACC,QAAK,KAAK,KAAM;AACf,WAAK,EAAE,cAAc,cAAAA,QAAE,cAAe,KAAK,GAAI,IAC9C,KAAK,IAAI,MACT,KAAK;AAAA,IACP;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAO,SAAW,WAAW,SAC7B;AACC,QAAK,CAAE,WAAY;AAClB,kBAAY,KAAK,IAAI;AACrB,gBAAU,KAAK,EAAE;AAAA,IAClB;AAEA,cAAU,SAAS,EAAE,OAAO;AAE5B,aAAU,IAAE,GAAG,MAAI,QAAQ,QAAS,IAAE,KAAM,KAAM;AACjD,gBAAU,OAAQ,QAAQ,CAAC,EAAE,QAAS;AACtC,gBAAU,OAAQ,GAAI;AAEtB,UAAK,QAAQ,CAAC,EAAE,WAAW,QAAQ,CAAC,EAAE,QAAQ,QAAS;AACtD,aAAK,MAAO,QAAQ,CAAC,EAAE,YAAY,QAAQ,CAAC,EAAE,OAAQ;AAAA,MACvD;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,eAAe,SAAW,UAAU,QAAQ,OAAO,cAAc,SAAS,aAAa,YACvF;AACC,QAAI,KAAK,KAAK,EAAE;AAChB,QAAI,gBAAgB;AACpB,QAAI,UAAU;AACd,QAAI,UAAU,CAAE,MAAM,QAAS,MAAO,IACrC,CAAE,MAAO,IACT;AAED,QAAG,WAAW,QAAY;AACzB,gBAAU,CAAC,MAAM,QAAQ,KAAK,IAC7B,CAAE,KAAM,IACR;AAAA,IACF;AAEA,QAAI,WAAW,UAAa,OAAO,UAAU,QAAW;AACvD,gBAAU;AAAA,IACX;AAEA,aAAU,IAAE,GAAG,MAAI,QAAQ,QAAS,IAAE,KAAM,KAAM;AACjD,UAAI,OAAO,KAAK,gBAAiB,QAAQ,CAAC,CAAE;AAE5C,UAAK,CAAE,MAAO;AACb;AAAA,MACD;AAEA,UAAI,KAAK,WAAW,UAAa,KAAK,OAAO,OAAO;AACnD,kBAAU;AAAA,MACX,OACK;AACJ,kBAAU;AAAA,MACX;AAIA,UAAK,MAAM,QAAS,IAAK,GAAI;AAC5B,aAAK,cAAe,UAAU,MAAM,UAAU,UAAa,MAAM,SAAS,SAAY,MAAM,KAAK,QAAQ,QAAW,cAAc,eAAe,UAAa,WAAW,UAAU,QAAW,aAAa,UAAW;AACtN;AAAA,MACD;AAEA,UAAI,QAAQ,KAAK,aAAc,MAAM,cAAc,KAAK,UAAU,UAAc,KAAK,WAAW,UAAa,KAAK,OAAO,UAAU,QAAY,OAAQ;AACvJ,UAAK,CAAE,OAAQ;AACd;AAAA,MACD;AAEA,UAAK,gBAAgB,UAAa,gBAAgB,MAAO;AACxD,iBAAS,OAAQ,aAAa,GAAG,KAAM;AACvC;AAAA,MACD,OACK;AACJ,iBAAS,KAAM,KAAM;AAAA,MACtB;AAGA,UAAK,MAAM,KAAK,WAAW,MAAM,KAAK,OAAQ;AAC7C,cAAM,iBAAa,cAAAA,SAAE,OAAK,UAAU,KAAK,EAAE,IAAI,gBAAgB,MAAM,KAAK,EAAE,IAAI,WAAW,OAAK,IAAI;AAEpG,cAAM,KAAK,cAAc,MAAM;AAE/B,YAAG,MAAM,KAAK,OAAO;AACpB,mBAAQ,IAAI,GAAG,IAAI,MAAM,KAAK,MAAM,QAAQ,KAAK;AAChD,gBAAG,OAAO,MAAM,KAAK,MAAM,CAAC,MAAM,UAAU;AAC3C,oBAAM,KAAK,MAAM,CAAC,EAAE,SAAS;AAC7B,kBAAG,MAAM,KAAK,MAAM,CAAC,EAAE,qBAAqB,QAAW;AACtD,sBAAM,KAAK,MAAM,CAAC,EAAE,mBAAmB,MAAM,KAAK;AAAA,cACnD;AACA,kBAAG,MAAM,KAAK,MAAM,CAAC,EAAE,WAAW,QAAW;AAC5C,sBAAM,KAAK,MAAM,CAAC,EAAE,SAAS,MAAM,KAAK;AAAA,cACzC;AACA,kBAAG,MAAM,KAAK,MAAM,CAAC,EAAE,SAAS,QAAW;AAC1C,sBAAM,KAAK,MAAM,CAAC,EAAE,OAAO,MAAM,KAAK;AAAA,cACvC;AAAA,YACD;AAAA,UACD;AAAA,QACD,OACK;AACJ,4BAAAA,SAAE,MAAM,IAAI,EAAE,WAAO,cAAAA,SAAE,iCAA+B,KAAK,EAAE,IAAI,cAAc,OAAK,SAAS,CAAC;AAAA,QAC/F;AAEA,aAAK,cAAe,MAAM,SAAS,MAAM,KAAK,SAAS,MAAM,KAAK,OAAO,CAAC,SAAS,SAAS,aAAa,MAAM,IAAK;AAAA,MACrH;AACA,YAAM,KAAK,SAAS;AAIpB,UAAK,KAAK,MAAO;AAChB,aAAK,KAAK,KAAM,GAAG,OAAQ,MAAM,IAAK,GAAG,QAAI,cAAAA,SAAE,MAAM,IAAI,GAAG,IAAK;AAAA,MAClE;AAEA;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,cAAc,SAAW,QAAQ,cAAc,SAAS,SACxD;AACC,QAAI,YAAY,KAAK,EAAE,IAAI;AAC3B,QAAI,WAAW,KAAK,EAAE,IAAI;AAC1B,QAAI,gBAAgB,KAAK,EAAE,IAAI;AAC/B,QAAI,WAAW,KAAK,EAAE,IAAI;AAC1B,QAAI,qBAAqB,KAAK,EAAE,IAAI;AACpC,QAAI,sBAAsB,KAAK,EAAE,IAAI;AACrC,QAAI,KAAK,KAAK,EAAE;AAChB,QAAI,OAAO,SAAW,KAAM;AAC3B,aAAO,OAAO,QAAQ,aACrB,IAAK,IAAI,QAAQ,MAAO,IACxB;AAAA,IACF;AAGA,QAAI,OAAO,QAAQ;AAClB,UAAI,aAAS,cAAAA,SAAE,eAAe,EAC5B,SAAS,sBAAsB,OAAO,QAAQ,MAAM,UAAU,WAAW,EACzE,KAAK,KAAK,OAAO,IAAI,CAAC;AAExB,aAAO;AAAA,QACN,MAAc;AAAA,QACd,MAAc;AAAA,QACd,UAAc;AAAA,QACd,SAAc,CAAC;AAAA,QACf;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAc;AAAA,MACf;AAAA,IACD;AAEA,QAAK,CAAC,WAAW,WAAW,oBAAqB;AAChD,kBAAY;AAAA,IACb,WACU,CAAC,WAAW,gBAAgB,cAAc,QAAS;AAC5D,kBAAY,cAAc;AAAA,IAC3B;AAEA,QAAK,CAAC,WAAW,WAAW,mBAAmB,aAAc;AAC5D,iBAAW,mBAAmB;AAAA,IAC/B,WACU,CAAC,WAAW,gBAAgB,cAAc,aAAc;AACjE,iBAAW,cAAc;AAAA,IAC1B;AAIA,QAAK,OAAO,aAAa,CAAE,OAAO,UAAW,IAAI,MAAO,KAAK,CAAC,OAAO,eAAe,MAAM,GAAI;AAC7F,aAAO;AAAA,IACR;AAEA,QAAI;AACJ,QAAG,CAAC,OAAO,eAAe,MAAM,GAAG;AAClC,UAAI,SAAS,SAAW,GAAGC,KAAIC,SAAQC,SAAS;AAC/C,QAAAA,QAAO,OAAO,KAAMF,IAAG,OAAQC,OAAO,GAAG,GAAGD,KAAIC,SAAQC,OAAO;AAE/D,0BAAAH,SAAEC,IAAG,MAAM,EAAE,KAAK,CAAC,EAAE,eAAgB,qBAAqB;AAAA,UACzDA,IAAG,OAAQC,OAAO;AAAA,UAAGD;AAAA,UAAIC;AAAA,UAAQC;AAAA,QAClC,CAAE;AAAA,MACH;AAEA,UAAI,MAAM,OAAO,OAAO,UAAU;AAClC,UAAI,aAAa,OAAO,eAAe,SACpC,OACF,OAAO;AAER,mBAAS,cAAAH,SAAE,MAAI,MAAI,IAAI,EACrB,SAAU,UAAU,SAAU,EAC9B,SAAU,UAAU,KAAK,EAAE,IAAI,oBAAoB,YAAY,EAAE,EACjE,KAAM,YAAY,KAAK,EAAE,GAAG,SAAS,EAAE,CAAC,EAAE,SAAU,EACpD,KAAM,iBAAiB,KAAK,EAAE,GAAG,MAAM,EAAE,KAAK,EAAE,EAAG,EACnD,GAAI,aAAa,SAAU,GAAG;AAC9B,UAAE,eAAe;AAEjB,YAAK,CAAE,OAAO,SAAU,UAAU,QAAS,KAAK,OAAO,QAAS;AAC/D,iBAAQ,GAAG,IAAI,QAAQ,MAAO;AAAA,QAC/B;AACA,YAAI,YAAa;AAChB,iBAAO,QAAQ,MAAM;AAAA,QACtB;AAAA,MACD,CAAE,EACD,GAAI,gBAAgB,SAAU,GAAG;AACjC,YAAK,EAAE,YAAY,IAAK;AACvB,YAAE,eAAe;AAEjB,cAAK,CAAE,OAAO,SAAU,UAAU,QAAS,KAAK,OAAO,QAAS;AAC/D,mBAAQ,GAAG,IAAI,QAAQ,MAAO;AAAA,UAC/B;AAAA,QACD;AAAA,MACD,CAAE;AAGH,UAAK,IAAI,YAAY,MAAM,KAAM;AAChC,eAAO,KAAM,QAAQ,GAAI;AAAA,MAC1B;AAGA,UAAK,IAAI,YAAY,MAAM,UAAW;AACrC,eAAO,KAAM,QAAQ,QAAS;AAAA,MAC/B;AAEA,UAAK,SAAS,KAAM;AACnB,YAAI,YAAQ,cAAAA,SAAE,MAAI,SAAS,MAAI,IAAI,EACjC,KAAM,KAAM,OAAO,IAAK,CAAE,EAC1B,SAAU,SAAS,SAAU;AAE/B,YAAK,SAAS,IAAI,YAAY,MAAM,KAAM;AACzC,gBAAM,KAAM,QAAQ,GAAI;AAAA,QACzB;AAEA,eAAO,OAAQ,KAAM;AAAA,MACtB,OACK;AACJ,eAAO,KAAM,KAAM,OAAO,IAAK,CAAE;AAAA,MAClC;AAEA,UAAK,OAAO,YAAY,OAAQ;AAC/B,eAAO,SAAU,UAAU,QAAS;AAAA,MACrC;AAEA,UAAK,OAAO,WAAY;AACvB,eAAO,SAAU,OAAO,SAAU;AAAA,MACnC;AAEA,UAAK,OAAO,WAAY;AACvB,eAAO,KAAM,SAAS,KAAM,OAAO,SAAU,CAAE;AAAA,MAChD;AAEA,UAAK,OAAO,MAAO;AAClB,eAAO,KAAM,OAAO,IAAK;AAAA,MAC1B;AAEA,UAAK,CAAE,OAAO,WAAY;AACzB,eAAO,YAAY,gBAAe;AAAA,MACnC;AAEA,UAAM,OAAO,WAAW,UAAa,OAAO,OAAO,OAAQ;AAC1D,eAAO,QAAQ,OAAO,OAAO;AAAA,MAC9B;AAAA,IACD,OACK;AACJ,mBAAS,cAAAA,SAAE,OAAO,IAAI;AAAA,IACvB;AAEA,QAAI,kBAAkB,KAAK,EAAE,IAAI;AACjC,QAAI;AACJ,QAAK,mBAAmB,gBAAgB,KAAM;AAC7C,qBAAW,cAAAA,SAAE,MAAI,gBAAgB,MAAI,IAAI,EACvC,SAAU,gBAAgB,SAAU,EACpC,OAAQ,MAAO;AAAA,IAClB,OACK;AACJ,iBAAW;AAAA,IACZ;AAEA,SAAK,QAAS,MAAO;AAKrB,QAAI,KAAK,EAAE,eAAgB;AAC1B,iBAAW,KAAK,EAAE,cAAe,QAAQ,QAAS;AAAA,IACnD;AAEA,QAAI;AACJ,QAAG,SAAS;AACX,qBAAW,cAAAA,SAAE,QAAQ,EAAE,SAAS,KAAK,EAAE,IAAI,aAAa,SAAS;AACjE,eAAS,OAAO,MAAM;AACtB,UAAI,mBAAmB,cAAAA,QAAE,OAAO,QAAQ;AAAA,QACvC,MAAM,KAAK,EAAE,IAAI,cAAc;AAAA,QAC/B,WAAW,KAAK,EAAE,IAAI,cAAc;AAAA,QACpC,aAAa;AAAA,QACb,MAAM;AAAA,UACL,iBAAiB;AAAA,UACjB,iBAAiB;AAAA,QAClB;AAAA,QACA,OAAO,KAAK,EAAE,IAAI,cAAc;AAAA,QAChC,iBAAiB,KAAK,EAAE,IAAI,cAAc;AAAA,MAE3C,CAAC;AAED,WAAK,QAAQ,gBAAgB;AAE7B,UAAI,cAAc,SAAW,GAAGC,KAAIC,SAAQC,SAAS;AACpD,mBAAW,MAAM,OAAO,KAAMF,IAAG,OAAO,QAAQ,GAAG,GAAGA,KAAIC,SAAQC,OAAO;AAEzE,0BAAAH,SAAEC,IAAG,MAAM,EAAE,KAAK,CAAC,EAAE,eAAgB,qBAAqB;AAAA,UACzDA,IAAG,OAAQC,OAAO;AAAA,UAAGD;AAAA,UAAIC;AAAA,UAAQC;AAAA,QAClC,CAAE;AACF,QAAAD,QAAO,KAAK,iBAAiB,IAAI;AAAA,MAClC;AAEA,UAAI,iBAAa,cAAAF,SAAE,oBAAoB,KAAK,EAAE,IAAI,cAAc,YAAY,uDAAqD,KAAK,EAAE,IAAI,cAAc,OAAK,kBAAkB,EAC/K,GAAI,aAAa,SAAU,GAAG;AAC9B,UAAE,eAAe;AACjB,UAAE,gBAAgB;AAElB,YAAK,CAAE,WAAW,SAAU,UAAU,QAAS,GAAG;AACjD,sBAAa,GAAG,IAAI,YAAY,gBAAiB;AAAA,QAClD;AACA,YAAK,YAAa;AACjB,qBAAW,QAAQ,MAAM;AAAA,QAC1B;AAAA,MACD,CAAE,EACD,GAAI,gBAAgB,SAAU,GAAG;AACjC,YAAK,EAAE,YAAY,IAAK;AACvB,YAAE,eAAe;AAEjB,cAAK,CAAE,WAAW,SAAU,UAAU,QAAS,GAAI;AAClD,wBAAa,GAAG,IAAI,YAAY,gBAAiB;AAAA,UAClD;AAAA,QACD;AAAA,MACD,CAAE;AAEH,UAAG,OAAO,MAAM,WAAW,GAAG;AAC7B,mBAAW,SAAS,eAAe;AAAA,MACpC;AAEA,eAAS,OAAO,UAAU,EAAE,KAAK,iBAAiB,IAAI;AAAA,IACvD;AAEA,WAAO;AAAA,MACN,MAAc;AAAA,MACd,MAAc,UAAU,SAAS,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC;AAAA,MACtD,UAAc,UAAU,WAAW;AAAA,MACnC,SAAc,CAAC;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA,YAAc;AAAA,IACf;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,eAAe,SAAW,MAAM,SAChC;AACC,QAAK,CAAE,SAAU;AAChB,gBAAU,KAAK,EAAE;AAAA,IAClB;AAEA,aAAU,IAAE,GAAG,MAAI,QAAQ,QAAS,IAAE,KAAM,KAAM;AACjD,UAAK,QAAQ,CAAC,EAAE,SAAS,MAAO;AAC/B,eAAO,QAAQ,CAAC;AAAA,MACjB;AAEA,UAAK,QAAQ,CAAC,EAAE,QAAQ,QAAS;AAChC,YAAI,MAAM,KAAK,cAAe,MAAM,QAAQ,CAAC,EAAE,OAAQ;AAEvD,YAAK,KAAM;AACV,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,aAAa,SAAW,MAAM,SAC9B;AACC,QAAK,CAAE,SAAU;AAChB,gBAAU,KAAK,EAAE;AAAA,IAClB;AAEA,aAAU,IAAE,GAAG,MAAI,QAAQ,QAAS,IAAE,KAAM,KAAM;AACjD,UAAK,QAAQ,CAAC,EAAE,SAAS,MAAO;AAC/B,eAAO;AAAA,MACR;AAEA,UAAK,QAAQ,CAAC,EAAE,QAAQ,QAAS;AAChC,YAAI,MAAM,KAAK,YAAa,MAAM,QAAQ,CAAC,EAAE,OAAQ;AAErD,YAAK,KAAM;AACV,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAW,SAAW,WAAW,GACjC;AAEC,QAAK,EAAE,iBAAkB;AACxB;AAAA,IACD;AAEA,QAAI,MAAM,SAAW,MAAM,MAAO;AACjC,UAAK,CAAE,KAAK,KAAM;AACjB;AAAA,MACD;AAEA,UAAK,KAAK,QAAQ,WAAY;AAC7B,UAAE,kBAAkB;AACpB,0BAAAA,SAAE,IAAI,EAAE,MAAM;AAAA,MACf,WACU,cAAAA,QAAE,cAAe,KAAK,GAAI,GAAI;AACvC,YAAK,KAAK,IAAI,QAAQ,WAAY;AACjC;AAAA,QACD;AAEA,YAAK,KAAK,IAAI,YAAY,CAAE,EAAE,UAAW;AACxC;AAAA,QACD;AAEA,YAAK,KAAK,IAAI,UAAU,CAAE,EAAE,QAAS;AACpC;AAAA,QACD;AAEA,YAAK,KAAK,IAAI,WAAW,CAAE,EAAE,SAAU;AACtC;AAAA,QACD;AAEA,YAAK,KAAK,IAAI,WAAW,CAAE,EAAE,SAAU;AACtC;AAAA,QACD;AAGA,UAAE,kBAAkB;AACpB,0BAAAA,SAAE,IAAI,EAAE,MAAM;AAAA,MACf;AAAA,IACD;AAEA,QAAI,UAAU,SAAW,GAAI;AAC5B,eAAU,IAAE,GAAG,MAAI,EAAE,QAAS,IAAE,KAAM,KAAM;AAC3C,YAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAK;AAE1B,YAAK,EAAE,CAAC,EAAE,QAAQ,QAAS;AAC1B,kBAAS,EAAE,CAAC,EAAE,OAAQ;AAAA,QACvB;AAAA,MACD;AAAA,IACD;AAEA,YAAS,KAAK,EAAE,OAAQ;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,YAAY,SAAW,MACvB;AACC,QAAK,KAAK,KAAM;AACf,UAAI,YAAY,cAAAA,QAAE,cAAe,KAAK,GAAI,IACzC,KAAK,IAAI,MACT,KAAK;AAIN,UAAI,IAAI,KAAK,EAAE,WAAW,MAAM,EAAE;AAClC,UAAI,MAAM,cAAAA,QAAE,QAAS,WAAW,CAAE;AAClC,QAAE,OAAQ,KAAK,CAAE;AACjB,WAAK,EAAE,aAAa,EAAE,KAAK,EAAE;AAAA,IAC9B;AAAA,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,iBAAiB,SAAW,MAC5B;AACC,QAAI,OAAO;AACX,QAAI,KAAK,KAAK,EAAE;AAChB,QAAI,GAAG;AACP,QAAI,eAAe,SAAW,MAAO;AACpC,UAAI,OAAO;AAKX,aAAQ,CAAE,cAAAA,QAAE,cAAc,IAAI,KAAK,CAAE,MAAM,QAAQ,IAAI,GAAI;AAC1D,YAAK,SAAS,QAAY;AACzB;AAAA,QACD;AAEA,YAAK,OAAO,SAAS,YAAa;AACjC,iBAAO,KAAK,KAAM,MAAM,IAAI,IAAK;AAEjC,cAAK,CAAE,MAAO;AACb,mBAAO;AAAA,UACR;AAAA,QACD,WACU,OAAO,SAAS,UAAW;AACpC,cAAK,CAAE,WAAY,IAAK,GAAI;AAC3B,mBAAO,EAAC,MAAM,KAAI;AAAA,UACnB;AAEA,iBAAO,WAAY,IAAK;AAAA,QACzB;AAEA;AACA,YAAK,OAAO,IAAK;AAEhB,gBAAM;AAAA,QACP;AAAA,MACD;AAEA,aAAO,MAAM,QAAS,IAAK,IAC1B,OACA,cAAAA,QAAE,OAAQ,CAAC,GAAG,IAAK;AAAA,IACrB;AAEA,WAAO,aAAc,IAAK;AAE1B,WAAQ,QAAQ,KAAK,QAAS;AAG7B,UAAK,CAAE,WAAY,KAAK,MAAO,GAAI;AAClC,cAAM,wCAAsC,KAAK;AAAA,MAClD;AAEA,UAAI,WAAW,aAAc,WAAY,KAAK,MAAO,CAAE;AACvD,UAAK,MAAM,QAAS,QAAS,GAAI;AAChC,eAAO;AAAA,MACR,WACU,CAAE,UAAW;AAItB,eAAO;AAAA,MACR;AAGA,UAAI,oBAAoB,SAAS;AAEjC,UAAI,KAAK,WAAW,UAAa,SAAS,WAAW,QAAW;AAC/D,aAAK,SAAS,cAAAA,QAAE,OAAO,CAAC,GAAG,SAAS,QAAQ,KAAK,MAAM;AAAA,MACxD;AAEA,aAAO,cAAAA,QAAE,OAAQ,CAAC,GAAG,UAAU,IAAK;AAKpC,UAAK,qBAAqB,KAAK,cAAc,mBAAoB;AAChE,aAAK,YAAY,oBAAkB,MAAI,KAAK;AAAA,MAC7C;AAKA,WAAK,SAAS,SAAS;AAAA,IACxB;AAIA,QAAI,iBAAiB,KAAK;AAC1B,QAAK,gBAAiB;AACrB,UAAK,CAAE,KAAK,SAAU;AACrB,aAAK,UAAU,CAAC;AAAA,MACjB;AAEA,WAAM,IAAE,GAAG,MAAI,eAAe,QAAS,IAAE,KAAM,KAAM;AACpD,aAAK,QAAQ,KAAM,eAAe,CAAC,CAAE;AAAA,MACtC;AAAA,IACD;AAEA,QAAI,gBAAgB,KAAK;AACzB,QAAK,eAAgB;AACpB,UAAK,CAAE,KAAK,SAAU;AACrB,aAAK,UAAU,CAAC;AAAA,MACjB;AAEA,WAAM,IAAE,GAAG,MAAI,cAAc,QAAS,IAAE,KAAM,KAAM;AACnD,aAAK,QAAQ,OAAQ,GAAG,GAAG,cAAc,CAAC,CAAE;AAAA,MAC7C;AAAA,IACD;AAEA,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,UAAU,SAAW,SAAS,YAAY,QAAQ,GAAI;AACrD,QAAI,KAAK;AACT,QAAI,kBAAkB,KAAK;AAC3B,QAAI,SAAS;AACb,QAAI,UAAU,cAAAA,QAAE,OAAQ;AAAA,MACvB,OAAO;AAAA;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,qBAAqB;AAAA,MACrB,aAAa;AAAA,MACb,kBAAkB,gBAAgB,IAAI,WAAW;AAAA,MACjD,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,cAAc;AAAA,MACd,qBAAqB;AAAA,MACrB,KAAK,gBAAgB,IAAI,WAAW;AAAA,IACrC,GAAG,MAAO;AAEV,QAAI,WAAW,WAAW,KAAK;AAE/B,QAAI,QAAQ,WAAY;AACvB,eAAS;AAET;AAAA,YACC,cAAAA,SAAE,uBAAuB;AAAA,QACzB,QAAQ;AAAA,QACR,WAAY;AACX,4BAAAA,SAAE,IAAI,EAAE,OAAO;AAAA,QAChB;AAAA,MACD;AAEA,wBAAAA,SAAE,GAAG,QAAS,gDAAiD,EAAE,MAAM,CAAC,EACtE,KAAK,iBAAiB,OAAO;AAE/B,wBAAAA,SAAE,0BAA0B,EAAE,IAAK,sBAAuB;AAC1D,cAAQ,WAAY,OAAO,QAAQ,qBAAqB,QAAQ,MAAM,QAAS;AAE/E,wBAAAA,SAAE,MAAM,EAAE,IAAI,8BAA8B;AAC5C,wBAAAA,SAAE,MAAM,EAAE,IAAK,iBAAkB;AACjC,SAAG,IAAK,2BAA4B;AACpC,SAAG,IAAK,SAAU;AAAA,IACnB;AAEA,QAAI,YAAY,OAAO;AACtB,YAAM;AACN;AAAA,IACD;AAEA,QAAI,uBAAmB,cAAAA,SAAE,GAAG,QAAS,gDAAiD,EAAE,MAAM,CAAC;AAC/F,QAAK,iBAAiB,QAAS;AAE9B,UAAI,SAAS,QAAQ,0BAA0B,EAAE,QAAQ;AACxD,mBAAW,iBAAiB,GAAG,CAAC;AAAA,MACjC;AAEA,YAAM;AAAA,IACP;AAGA,QAAI,UAAM,cAAAA,SAAE,cAAc,OAAO,EAAE;AACnC,QAAI,MAAM;AAEV,QAAI,QAAQ,GAAG;AACd,YAAM;AAAA,IACP,WACS,QAAQ,GAAG;AACnB,YAAM;AAAA,IACP,WACS,QAAQ,GAAG;AACnB,YAAM;AAAA,IACP;AAEA,QAAI,cAAU,cAAAA,SAAE,QAAQ,EACtB,SAAS,sBAAsB,EAC/B,SAAS,QAAQ,gBAAgB,EACjC,SAAS,QAAQ,eAAe,EAChC,SAAS,GAAG,EACZ,IAAI,WAAW,MAAM,EACrB,KAAK;AAAA,MACL,cAAc;AAAA,MACd,MAAM;AAAA,IACP,CAAC;AAEF,kBAAU,cAAAA,SAAE,OAAO,EACjB,SAAS,QAAQ,gBAAgB,EACjC,KAAK,QAAQ,MAAM,EACnB,SAAS,OAAO;AAElB,aAAS,KAAM,iBAAiB,MAAO;AAEvC,QAAK,SAAS,QAAQ,MAAM,EAAE,CAAC,MAAM,SAAS,MAAO;AACpD,iBAAW,SAAS,KAAK;AAAA,IAC1B;AAEA,QAAK,QAAQ,cAAe;AAC3B,cAAQ,QAAQ,6CAA2C,QAAQ,eAAa,QAAQ;AAAA,IACzF,WACU,QAAQ,iBAAkB;AACnC,cAAQ,QAAQ,6CAA2C,QAAQ,kBAAgB,QAAQ;AAAA,IAC5F;AAEA,QAAI,QAAQ,aAAa;AACxB,cAAQ,QAAQ,wCAAwC,EAAE,SAAS,0BAA0B;AAAA,IAC9F;AAEA,YAAS,QAAQ,YAAa,QAAS,GAAG,QAAQ,IAAK;AAEvD,QAAI,qBAAiB,cAAAA,SAAG,WAAW,MAAM,EAAE,UAAU,CAAE;AACvD,QAAI,WAAW,QAAQ,IAAK,UAAW;AAEvC,QAAK,QAAQ,SAAS,eAAe,QAAQ,UAAU,gBAAiB;AACvE,iBAAW,SAAS,OAAO;AAC3B,cAAQ,IAAI,SAAS,eAAe,MAAM,CAAC;AAAA,IAC5C;AAIA,QAAI,aAAa,YAAY;AAE5B,UAAI,mBAAe,cAAAA,SAAE,SAAS,CAAC,EAAE,YAAY;AAC7C,UAAI,iBAAiB,SAAS,SAAS;AACvC,UAAI,eAAe,SAAS,OAAO;AACnC,UAAI,aAAa,aAAa,OAAO;AACrC,UAAI,oBAAoB,aAAa,SAAS;AAC9C,UAAI,WAAW,OAAO,iBAAiB,aAAa,CAAC,CAAC;AAEtD,iBAAW,SAAS,aAAa,YAAY;AAC7C,iBAAW,QAAQ,aAAa,MAAM,IAAI,WAAW,SAAS,WAAW;AACzE,iBAAW,QAAQ,WAAW,OAAO,WAAW;AAChD,iBAAW,SAAS,WAAW,MAAM,WAAW;AAGhD,UAAI,MAAM,eAAe,MAAM,SAAS,YAAY;AACpD,UAAI,OAAO,eAAe;AAE1B,cAAQ,IAAK;AAAA,QACZ;AAAA,QACA;AAAA,MACD,CAAE;AAGF,iBAAW,OAAO,iBAAiB,QAAQ,CAAC,CAAC;AAC7C,UAAI,eAAe,QAAQ,OAAO;AAElC,mBAAa,SAAS,QAAQ,YAAY;AAC1C,mBAAa,QAAQ,QAAQ,WAAW;AACxC,mBAAa,QAAQ,aAAa,OAAO,aAAa;AACtD,mBAAa,SAAS,aAAa,MAAM,aAAa;AACtD,mBAAa,YAAY,WAAW,SAAS,SAAS;AACtD,mBAAa,eAAe,WAAW,SAAS,YAAY;AAG5D,UAAI,QAAQ,QAAQ;AACnB,cAAM,eAAe,MAAM,aAAa,SAAS,aAAa,YAAY,aAAa;AAAA,MACxF;AAEA,UAAI,QAAQ,UAAU,kBAAkB,QAAQ,SAAU,QAAQ,mBAAoB,GAAG;AACxF,eAAO,eAAe,OAAO,aAAa,QAAQ,SAAS,WAAW;AAAA,MACvE;AAGA,UAAI,QAAQ,UAAU,kBAAkB,QAAQ,UAAU,aAAa;AACtE,YAAI,OAAO,eAAe,MAAM;AAC/B,iBAAO,CAAC,eAAe;AAAA,QACxB;AAEA,YAAI,OAAO,aAAa,QAAQ,WAAW,OAAO;AACjD,iBAAO,WAAW,QAAQ,aAAa;AAAA,QACxC;AAAA,MACD;AAGA,UAAI,kBAAkB,OAAO,OAAO,aAAa,YAAQ,cAAAA,SAAE,MAAM,EAAE,MAAM,GAAG;AAE3E,mBAAO,cAAAA,SAAE,MAAM,EAAE,MAAM,IAAI,aAAa,QAAQ,kBAAkB;AAAA,MACnE;AAEA,UAAI,aAAa,OAAO,OAAO,GAAG;AAEjC,eAAO,CAAC,aAAa;AAAA,MACtB;AAEA,UAAI,kBAAkB,MAAM,MAAM,aAAa,aAAS,cAAAA,SAAE,MAAM,EAAE,OAAO,QAAI,cAAAA,SAAE,MAAM,EAAE,UAAU,GAAG;AAEnG,cAAM,eAAe,MAAM,aAAa,SAAS,aAAa,YAAY,aAAa;AAAA,MACxF;AAEA,UAAI,kBAAkB,MAAM,UAAM,cAAAA,SAAE,MAAM,EAAE,UAAU,GAAG;AAExD,cAAM,eAAe,MAAM,SAAS,YAAY;AAAA,MACjD;AAGA,cAAQ,IAAK;AAAA,QACZ;AAAA,QACA;AAAA,MACD,CAAE;AAAA,IACH,OACK;AAEJ,UAAI,WAAW,WAAY;AAC1B,YAAI,WAAO,cAAAA,SAAE,MAAM,EAAE,OAAO,IAAI;AAEhC,YAAII,OAAM,QAAQ,OAAO,IAAI;AAC7B,YAAKA,OAAM,MAAO;AACjB,UAAAA,OAAM;AAAA,QACP;AAEA,gBAAQ,IAAK,aAAaA,OAAI,EAAG;AAAA,MAClC;AAEA,eAAS;AAET,wBAAAJ,SAAE,MAAM,EAAE,GAAG,yBAAyB,WAAY;AACjD,iBAAS;AAAA,MACV,CAAC;AAAA,IACF;AAEA,QAAK,QAAQ,YAAa;AACzB,cAAQ;AAAA,QACP;AAAA,QACA,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ,kBAAkB;AAAA,MAC3B;AAAA,IACD;AAMA,sBAAAA,SAAE,0BAA0B,EAAE,GAAI,wBAAwB,WAAY;AAAA,IAAC,CAAE;AAEzE,QAAK,QAAQ,WAAY;AACxB,iBAAY,WAAY;AACvB,WAAG,GAAI,6BAA6B,SAAUK,IAAG,KAAKJ,KAAI,MAAM;AAC/D,cAAK,KAAK,CAAC,MAAM,SAAS,CAAC,GAAI;AAC9B;AAAA,UACD;AACA,gBAAM;AAAA,QACP,CAAE;AAAA,MACH,GAAG,CAAC;AAAA,IACL;AAEA,sBAAAD,SAAE,OAAO,EAAE,QAAQ,oBAAoB;AAGvC,OAAG,GAAG,WAAW,KAAK;AAEtB,eAAW,WAAW;AACrB,eAAS;AACT,wBAAAA,SAAE,MAAM,EACN,GAAI,wBAAwB,SAAUK,IAAG;AACzC,YAAI,QAAQ;AACX;AAAA,QACD;AAGA,YAAI,OAAO,cAAAL,QAAE,GAAG,UAAU,YAAY;AACtC,YAAI,aAAS,cAAAA,SAAEK,GAAE,MAAM,EAAE,OAAO,EAAE,CAAC;AAEnC,YAAM,KAAE,cAAAL,SAAEK,GAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,OAAQ,OAAQ,EAAE,UAAW,KAAC,cAAAL,SAAE,MAAM,EAAE,SAAS,YAAY,SAAM,cAAAA,SAAEK,GAAE,MAAM,EAAE,SAAS,sBAAsB,GAAG;AACtJ,gBAAM;AAAA,QACP;AAAA,MACD,CAAE,EACD,GAAI,wBAAwB,SAAUA,IAAG;AACzC,YAAKA,GAAE,YAAY,IAAK;AACvB,gBAAM;AAAA,QACP;AAAA,MACD,CAAE,EACD,GAAI,0BAA0B,SAAUA,IAAG;AAE3C,YAAI,eAAW,cAAAL,SAAE,aAAa,OAAO;AACrC,YAAI,SAAS,SAAS;AAEtB,YAAIK,GAAE,YAAY,GAAG;AACpB;AAAA,QACD;AAEA,YAAI,SAAS,MAAM,MAAM,MAAM,IAAI;AAElC,mBAAS,MAAM,EAAE,MAAM;AACvB,UAAAA,GAAE,eAAe;AAAA,QAClB,WACSA,GAAE,UAAU;AAEpB,cAAI,WAAW,SAAS,CAAC,GAAG;AAC3B,qBAAS,KAAK,EAAE,MAAM;AACtB,YAAAA,GAAE,eAAe;AAAA,UAClB;AAAA,QACD,OACK;AACJ,cAAI,WAAW,SAAS,KAAK,EAAE,CAAC,GAAG;AAClC,qBAAS,MAAM,EAAE,MAAM;AACvB,YAAAA,GAAE,eAAe;AAAA,UAClB;AAAA,QACD;AAAA,MACD,CAAE;AAAA,IACJ,GAAG,CAAC;AAAA,EACL;AACD,CAAE;AAeF,QAAQ,aAAa,SAAW,MAAM,WAAW,MAAM,aAAc;AACpE,MAAK,SAAS,QAAY;AACzB,WAAO;AAAA,EACR;AACA,MAAK,CAAE,aAAc;AACpB,kBAAc,SAAS;AAAA,EACxB;AAEA,MAAK,MAAO;AACX;AAAA,UACC,cAAAL,SAAE,QAAQ,EACR,SAAU,SAAU,EACpB,IAAK,WAAW,MAAO,EACvB,YAAa,WAAY;AAAA,MAC3B;AAAA,IACD;AAAA,EACD,OACK;AACJ;AAAA,UACC,cAAAA,SAAE,SAAO,SAAS;AAAA,MAClB;AAAA,MACA,WAAY;AACX,0BAAAA,SAAE,IAAI,EACJ,YAAa,SAAU,EACvB,OAAO;AAAA,MACV;AAAA,IACD;AAAA,EACD;AACD;AAaA,QAAQ,mBAAmB,SAAW,OAAO,SAC7C;AACC,MAAK,UAAU,UAAa,UAAU,MAAO;AAC5C,WAAO,cAAAA,QAAE,IAAK,SAAS,SAAW,GAAI;AACrC,aAAO,EAAE;AAAA,IACV,CAAE;AAAA,EACH;AAEA,MAAI,MAAM,CAAC;AACX,MAAI,QAAQ,cAAAA,QAAE,IAAK,SAAS,SAAW,GAAI;AAC1C,WAAO,EAAE;AAAA,EACV,CAAE;AAGF,MAAI,UAAU,SAAW,OAAQ;AAChC,QAAK,MAAM,QAAS,KAAM,GAAI;AAC7B,eAAU,IAAE,GAAG,MAAI,MAAM,QAAS,IAAE,KAAM,KAAM;AAC/C,gBAAS,MAAM,CAAC,CAAE;AAAA,MACnB;AACA;AAAA,IACD;AAEA,QAAK,OAAO,UAAU,UAAW;AAChC,UAAK,MAAM,QAAS,GAAI,MAAM,IAAK;AAElC,gBAAS,MAAM,MAAM,GAAG,CAAE;AAAA,MAC3B,OACK;AAEJ,YAAI,MAAM,cAAAA,QAAE,QAAS,MAAM,KAAK,GAAG,KAAM;AAEzC,YAAK,QAAQ,IAAK;AACjB,cAAI,KAAM,QAAS,GAAI,EAAE,IAAK;AAAA,QAC/B;AAAA,MACD;AAAA,IACD,WACU,OAAO,UAAU,UAAW;AAErC,UAAI,KAAM,QAAS,KAAM,EAAE,IAAK;AAAA,IACjC,WACU,OAAO,UAAU,UAAW;AAErC,UAAI,KAAM,KAAM;AAAA,IACjB;AAAA,EACD;AAEA,UAAS,KAAM;AAEf,SAAO;AACR;AAYA,QAAQ,iBAAiB,SAAW,OAAO,UAC3C;AACC,MAAI,MAAM,CAAC;AACX,MAAI,cAAc,SAAW,GAAG,SAAS,SAAU;AAClD,QAAI;AACJ,QAAI;AAEJ,aAAUM,KAAE,GAAGC,OAAI,QAAQ,QAASD,KAAEC,MAAMD,MAAM;AACjD,eAAS,QAAQA,EAAC;AAElB,UAAK,QAAS;AACb,cAAM,YAAY,SACjB,UAAQA,KACRA,KAAE;AAEH,UAAE,KAAM;AAAA,UACP,MAAM,OAAO;AAAA,UACb,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,QACD,CAAE;AAEF,YAAK,OAAO,SAAU;AACrB,sBAAa,GAAG,OAAO,SAAS,MAAI,GAAI;AAAA,QACzC;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAEA,MAAI,MAAM,SAAWE,WAAUC,OAAO;AACrC,QAAIH,IAAGC;AACP,QAAI,UAAU,CAAC;AACf,gBAAa,SAASE,MAAK,EAAE,OAAQ;AAErC,QAAI,QAAQ,cAAAT,QAAE,IAAK,SAAS,SAAU,GAAG;AACxC,aAAO,EAAE;AAAA,IACV,CAAE;AAEF,QAAK,MAAM,QAASQ,SAAS,KAAKA,qBAAoB,cAAAR,SAAI;AACzD,WAAMM,KAAE,GAAGC,OAAIC,UAAS,QAASF,KAAEC,MAAMD,MAAM;AAC9C,YAAKE,UAASF,EAAC,GAAGG,KAAK;AAAA,MACxB;AACA;AAAA,IACD;AAEA,QAAKD,cAAa,QAAQA,cAAa,UAAaA,cAAa,KAAM;AAEtE,WAAMF,KAAE,GAAGC,OAAI,QAAQ,QAASD,KAAEC,MAAMD,MAAM;AAC7C,YAAI,KAAM;AAAA,UACT,MAAMG;AAAA,UACN,MAAM,QAAQH,EAAC,EAAE;AAAA,QAClB,CAAE;AAAA,MACH;AAAA,IACD,WACU,OAAOE,cAAa,UAAW;AAExC,UAAIC,MAAK,EAAE,QAASD,SAAS,GAAG;AAC/B,YAAI,KAAM;AAAA,UACT,MAAMC;AAAA,UACN,MAAMA,MAAK,EAAE,QAASD,SAAS,EAAE;AAAA,QAClC,CAAE;AAAA,MACH;AAAA,IACD,WACU,OAAOA,cAAa,UAAW;AACxC,UAAKA,UAAS,QAAS,GAAI,MAAM,IAAK;AAErC,YAAI,IAAIA,UAAS,MAAM,GAAG;AAE1B,aAAMF,KAAE,GAAGC,OAAI,EAAE,QAASD,KAAEC,MAAMD,MAAM;AACvC,cAAK,EAAEA,EAAC,EAAE,KAAK,GAAGG,KAAK;AAAA,QACxB;AAAA,MACD,WACUD,UAAS,MAAO,eAAgB,GAAI;AAE7C,YAAI,UAAU,cAAAR,QAAE,IAAK,SAAS,SAAU,GAAG;AAC1C,iBAAO,EAAE;AAAA,QACV,CAAE;AAEF,YAAI,KAAM;AAAA,UACT,MAAMS;AAAA,UACN,MAAM,QAAS,cAAAT,QAAE,QAASQ,WAAU,OAAQ,CAAE,EAAE;AAAA,QACjD,CAAE;AAAA,MACH,WACUA,UAAS,QAAS,OAAQ,MAAM,IAAK;AAE9C,YAAI,OAAOA,UAAS,QAAS,SAAS,EAAG;AAEzC,aAAMF,KAAE,GAAGC,OAAI,QAAQ,QAASD,KAAEC,MAAMD,MAAM;AAC7C,cAAK,QAAQA,EAAC,EAAE,SAAS,MAAO;AAC/B,gBAAI,KAAM;AAAA,cACT,MAAMG;AAAA,cACN,MAAM,QAAQH,EAAC,EAAE;AAAA,YAClB,CAAE;AAAA,UACH;AAAA,QACD;AAAA,MACD,OACK;AAEJ,0BAAAN,SAAG,KAAM,EAAE,OAAQQ,SAAS,EAAE,KAAM,WAAY;AAC/C,cAAI,KAAM;AAAA,YACT,MAAMC;AAAA,YACN,MAAM;AAAA,UACP,CAAE;AAAA,QACH,CAAE;AAAA,MACH;AAAA,IACD,WACU,OAAOD,cAAa,YAAYA,UAAS,UAAW;AAE7D,UAAI,MAAM,cAAAR,QAAE,QAASQ,WAAU,KAAM;AAErC,UAAK,QAAQ,IAAK;AACjB,YAAI,KAAM;AAAA,UACT,MAAMC;AAAA,UACN,MAAM,MAAO,GAAI;AAAA,QAClB,CAAE;AAAA,MACH;AAAA,IACD;AAAA,EACD;AAGA,WAAU,IAAE,GAAG,MAAI,MAAM,QAAS,IAAE,KAAM,KAAM;AAC/C,QAAI,OAAO,MAAM,CAAC;AAElB,QAAK,UAAU,IAAK;AAAA,EACrB;AAEA,SAAO;AACR;AAMA,QAAQ,YAAY,SAAW,KAAK,QAAS;AAC5C,MAAK,OAAO,QAAQ,UAAW;AAC9B,WAAO;AAAA,EACR;AAGA,QAAM,IAAI,QAAS,uDAAuD,EAAG;AAG7E,QAAM,IAAI,QAAS,mBAAmB,EAAG;AAEzC,MAAK,CAAE,UAAU,OAAO,WAAY;AACnC,UAAM,IAAI,QAAS,YAAY,EAAG;AAAA,EACnC;AAEA,MAAK,CAAE,UAAU,OAAO,MAAO;AAC9B,UAAM,IAAI,QAAS,cAAc,EAAG;AAAA,EACrC;AAEA,MAAK,CAAE,UAAU,OAAO,eAAgB;AACvC,UAAM,IAAI,QAAS,OAAO,GAAI;AAAA,EAC/B;AAEA,MAAK,CAAE,UAAU,OAAO,gBAAiB;AACxC,oBAAgB,YAAY;AAC5B,UAAM,gBAAgB;AAAA,EACvB;AAEA,SAAO;AACR;AASA,QAAQ,WAAW;AAAA,EAClB,SAAS,CAAE,QAAQ,SAAS,OAAO,OAAO,OAAQ;AAAA,EAClD,MAAM;AAAA,EACN,UAAU;AAAA,EACV,KAAK;AAAA,IACJ,WAAW;AAAA,MACV,KAAK;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACX,KAAK;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACP,KAAK;AAAA,MACL,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,aAAa;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACZ,KAAK;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACN,KAAK;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,IACA,cAAc;AAAA,MACb,KAAK;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,IACA,eAAe;AAAA,MACd,KAAK;AAAA,MACL,MAAM;AAAA,MACN,WAAW;AAAA,MACX,OAAO;AAAA,MACP,iBAAiB;AAAA,IAClB;AAAA,IACA,qBAAqB;AAAA,MACpB,KAAK;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,IACA,iBAAiB;AAAA,MAChB,KAAK;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,EACD;AACD;AAOA,QAAQ,UAAU;AAGlB,cAAAT,QAAE,OAAQ,YAAY;AAAA,EACrB,YAAY;AAAA,IACX,MAAM,SAAW,IAAK;AACrB,aAAO,GAAG,KAAM,sBAAsB,YAAa;AAAA,IACpD;AAAA,IACA,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM,SAAW,IAAI,QAAQ,QAAS;AACrC,aAAO,KAAM,iBAAiB,KAAM;AAAA,IACrC;AAAA,IACA,QAAQ,SAAW,GAAG,IAAI,QAAQ,QAAS;AAC1C,UAAK,OAAO,YAAY,QAAQ,MAAM,EAAE,QAAS;AAChD,aAAK,QAAQ,OAAO,MAAM;AAAA,MAC3B,OACK;AACJ,aAAK,QAAQ,OAAO,aAAa,MAAM;AAAA,MACxC;AAIA,UAAI,EAAE,SAAS,YAAY;AAC1B,0BAAAA,SAAE,aAAa,OAAO,WAAW,EAAE,GAAG,CAAC,EAAE,MAAM;AAAA,MAChD;AAAA,IACD;AAAA,IACA,MAAM;AAAA,MACL,iBAAiB;AAAA,IAClB;AAAA;AAAA,EAED;AAAA,EACA,OAAO;AAAA,IACN,MAAM,SAAW,IAAK;AACrB,aAAO,GAAG,KAAM,iBAAiB,OAAQ;AAAA,IAC1C;AAAA,IACA,WAAW;AAAA,IACX,aAAa;AAAA,IACb,MAAM,SAAW,IAAI,QAAQ,QAAS;AACrC,aAAO,OAAO,KAAM,iBAAiB,KAAM;AAAA,IAC5C;AAAA,IACA,QAAQ,SAAW,GAAG,IAAI,QAAQ,QAAS;AAC1C,WAAK,QAAQ,OAAO,aAAa,MAAM;AAAA,IACxC;AAAA,IACA,MAAM;AAAA,MACL,iBAAiB;AAAA,IAClB;AAAA;AAAA,EAED;AAAA,EACA,MAAM,SAAW,IAAI,MAAO;AAC3B,QAAK,WAAW,WAAY;AAC3B,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EACA,KAAK,SAAW,IAAI,MAAO;AAC1B,QAAK,WAAW,YAAY,WAAW,SAAS,UAAW,IAAI,IAAK,GAAI;AACvE,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EACA,OAAO,SAAW,IAAI,MAAO;AAC5B,QAAK,WAAW,cAAc,WAAW,WAAW,UAAW,IAAI,IAAK,GAAI;AAC3E,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EACA,KAAK,SAAW,IAAI,MAAO;AAC1B,QAAK,WAAW,YAAY,WAAW,SAAS,UAAW,IAAI,IAAK,GAAI;AACvE,aAAO;AAAA,IACR;AAAA,EACD;AAAA,EACA,YAAY,SAAW,IAAK;AAC3B,QAAI,aAAa,GAAG,SAAS,EAAE,CAAC,EAAE;AAClC,QAAI,OAAO,CAAC;AACZ,QAAI,OAAO,CAAC;AACZ,QAAI,OAAO,SAAWC,KAAK;AAC1B,aAAOA,IAAG,KAAM,sBAAsB;AAAA,QACrC,MAAM;AAAA,QACN,GAAM;AAAA,MACP,GAAGA,IAAG,KAAK,IAAI,CAAE;AAAA,IAClB;AAGA,QAAI,MAAM,QAAS,WAAW,CAAC,CAAE,GAAG;AACnC,aAAO,WAAW,CAAC;AACnB,aAAO,WAAW,CAAC;AAAA,IACpB,OACK;AACJ,eAAS,IAAE,GAAI,IAAE,WAAW,QAAS,KAAK;AACzC,YAAI,SAAS,WAAW,CAAC;AAGzB,YAAI,cAAAD,QAAE,cAAc,MAAM,GAAG;AAC5B,eAAK,KAAK,OAAO,KAAK;AACtB,eAAK,KAAK,OAAO,KAAK;AAAA,QACvB,OACK;AACJ,eAAK,KAAK,MAAM;AAChB,eAAK,KAAK,MAAM;AAAA,QACjB;AAAA,MACD;AAAA,IACD;AAEA,WAAO;AAAA,MACN,QAAQ;AAAA,MACR;AAAA,MACA,WAAW;AAAA,MACX,WAAW;AAAA,MACX,SAAS,cAAAA,QAAE,IAAK,MAAM,SAAW,KAAKM,IAAI;AACzC,eAAO;AAAA,UACN,MAAM,KAAKA,EAAC;AAAA,UACZ,WAAW;AAAA,UACX,QAAQ,SAAW,GAAGL,KAAK;AAC1B,YAAAA,IAAG,KAAK,IAAK,GAAI,EAAE,KAAK;AAAA,UACzB;AAAA,UACA,MAAM,SAAWA,KAAI,MAAM,MAAO;AACjC,gBAAI,OAAO;AACX,gBAAI,KAAK,WAAY;AACpB,mBAAK,OAAQA,IAAG,KAAK,IAAI,MAAM,GAAI;AAAA,YACpC;AAEA,YAAAA,IAAG,GAAI,cAAY,KAAK,WAAW,EAAG;AACtC,eAAG;AAAA,UACJ;AAAA,UACA,SAAS,SAAWA,KAAI,MAAM,MAAO;AACpC,YAAAA,IAAG,IAAK,cAAY,KAAK,SAAU;AAAA,UACpC;AAAA,QACD;AAAA,MACD,CAAE;AAAA,MACF,MAAM,SAAWA,KAAI,MAAM,MAAO;AACjC,YAAI,OAAO;AACX,QAAAA,IAAG,GAAI,cAAY,KAAK,WAAW,WAAY;AAC9C,eAAK,KAAM,KAAK,IAAK;AAAA,QACtB,CAAE;AAAA,MACH;AAAA,MACA,SAAS,SAAWA,KAAI,MAAM,MAAO;AACpC,QAAAA,IAAG,IAAK,cAAY,KAAK,SAAU;AAAA,MACpC;AAAA,IACD;AAAA,EACD;AAAA,EACA,QAAQ;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,MAAM,SAAW,IAAK;AACrB,aAAO,GAAG,KAAM,kBAAkB,EAAG;AAAA,IACtC;AAAA,EACD;AACD,CAAE;AAWF,0BAAU,IAAI,SAAU,aAAa,SAAW,OAAO,UAAW;AAEjE,MAAK,aAAa,QAAY;AAC7B,eAAW;AACX,YAAQ;AAAA,EACT;AAEA,OAAK,SAAS,cAAc;AAE5B,MAAI,MAAM,KAAK,SAAU,MAAM,SAAS,SAAW,KAAM;AACxD,QAAK,IAAI,UAAW;AACnB,aAAO,QAAQ;AAAA,QACd,QAAQ,iBAAkB,OAAO,IAAI,QAAS;AAAA,QAC9C;AAAA,MACD;AAAA,IACD;AAAA,EACD,GAAG,IAAK;AAER,MAAI,iBAAiB;AACrB,SAAO;AACR,CAAE;AAGF,0BAAU,IAAI,SAAU,YAAY,SAAW,OAAO,UAAW;AAEhE,MAAI,UAAU,KAAK,QAAS,OAAO,QAAS;AAE5C,MAAK,QAAQ,SAAS,GAAI;AACzB,YAAQ,OAAQ,GAAG,QAAQ,MAAO;AAAA,EACnC;AAEA,SAAO;AACR,CAAE;AAGF,0BAAU,IAAI,eAAgB,sBAAsB,qBAAqB,SAAW,MAAO;AAC1F,MAAK,SAAS,QAAY;AACzB,WAAO,KAAK,IAAK,SAAW,KAAM;AACjC,aAAO,IAAI,KAAK,OAAQ,IAAI,IAAK;AAAA,IAClC,CAAE;AAAA,EACH;AAEA,SAAO,KAAK,KAAM,SAAW,KAAM;AAClC,QAAI,KAAK,OAAQ,IAAI,MAAM,IAAK;AAAA,EACjC,CAAE;AACH,CAAE;AAGF,0BAAU,IAAI,eAAgB,sBAAsB,qBAAqB,SAAW,QAAS;AAC5F,MAAK,WAAW,QAAY;AAC3B,WAAO,KAAK,IAAK,SAAW,KAAM;AACjC,aAAO,IAAI,KAAK,OAAQ,IAAI,IAAK;AAAA,IAClC,CAAE;AAAA,EACH;AAEA,SAAO,KAAK,KAAM,SAAW,KAAM;AAClC,QAAI,KAAK,OAAQ,IAAI,MAAM,MAAO;AAAA,EACnC,CAAE;AACH,CAAE;AAGF,0BAAU,IAAI,eAAgB,iCAAiC,gCAAgC,SAAW,SAAU;AACnH,SAAO,KAAK,KAAM,SAAW,KAAM;AAClC,aAAQ,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,UAAG,OAAO,QAAQ,CAAC,MAAM,UAAU;AAClC,gBAAQ,CAAC,EAAE,aAAa;AAAA,MACzB;AAAA,IACD;AACA,QAAI,KAAK,kBAAmB,IAAI,MAAM,OAAQ;AAAA,EAC/C,CAAE;AACH,CAAE;AAGF,0BAAU,IAAI,SAAU,CAAC,sBAAsB,mBAAmB,GAAG,SAAW,MAAO;AACtF,SAAO,KAAK,KAAM,SAAW,KAAM;AAClC,QAAI,KAAK,OAAQ,IAAI,MAAM,IAAK;AAAA,EACjC,CAAE;AACH,CAAE;AAGF,0BAAU,IAAI,SAAU,CAAC,uBAAuB,oBAAoB,GAAG,WAAY;AAClF,SAAO,KAAK,KAAM,SAAW,KAAM;AAClC,QAAI,KAAK,QAAS,IAAI,IAAK;AAAA,EAC5B,CAAE;AACH,CAAE;AAGF,0BAAU,IAAI,SAAU,oBAAoB,WAAY;AACvD,MAAI,MAAM;AAEV,OAAK,KAAM,SAAW,KAAM;AAC3B,QAAI,MAAM,IAAI,KAAK,MAAO,IAAI,IAAK;AAEnC,QAAI,QAAQ,MAAM;AACjB,YAAM;AAAA,IACP;AAAA,EACD,CAAE;AAEF,SAAO;AACR,CAAE;AAGF,0BAAU,IAAI,eAAgB,qBAAqB,mBAAmB,WAAY;AACjF,MAAI,SAAK,cAAAD,SAAE;AAGX,oBAAAA,SAAG,KAAK,KAAM,SAAW,KAAM;AAC9B,SAAK,GAAG,IAAK,IAAI,KAAK,KAAM,IAAI,IAAK,CAAE;AAAA,EACxC,CAAE,CAAE;AAEJ,SAAO;AACR,CAAE;AAGF,0BAAU,IAAI,eAAgB,0BAA0B,yBAAyB,SAAW,MAAO;AAClG,MAAK,SAAS,QAAY;AACzB,WAAO,KAAK,IAAK,SAAW,KAAM;AACjC,aAAO,IAAI,KAAK,WAAY,IAAI,IAAK;AAAA,IACtC,CAAE;AAAA,EACH;AAEA,SAAO,KAAK,KAAM,SAAW,KAAM;AAClC,QAAI,KAAK,WAAY,IAAI,MAAM,IAAK;AAAA,EACrC,CAAE;AACH,CAAE;AAGF,0BAAU,IAAI,eAAgB,oBAAoB,mBAAmB,SAAW,OAAQ;AACvF,MAAK,UAAU,QAAY;AAC1B,WAAO,KAAK,IAAK,SAAW,KAAM;AACjC,aAAO,IAAI,KAAK,KAAM,IAAI,IAAK;AAAA,IAChC,CAAE;AAAA,EACH;AAEA,SAAO,KAAK,KAAM,SAAW,KAAM;AAClC,QAAI,KAAK,KAAM,IAAI,MAAM,KAAM;AAAA,EAChC,CAAE;AACH,CAAE;AAGF,0BAAU,IAAI,eAAgB,uBAAuB,sBAAsB,WAAY;AACtF,SAAO,KAAK,KAAM,SAAW,KAAM;AAClC,QAAI,KAAK,KAAM,IAAI,IAAK,EAAE,QAAS,OAAQ;AAAA,EAC5C,CAAE;AACH,CAAE;AAGF,0BAAU,IAAI,SAAU,sBAAsB,SAAU,SAAS,SAAS;AACzE,SAAO,KAAK,IAAK,SAAW,KAAM;AACjC,WAAO,IAAI,KAAK,SAAU,SAAS,KAAK,OAAO,KAAK,CAAC,EAAE,IAAI,GAAG,OAAQ;AAAA,EACvE,CAAE;AACH,CAAE;AAGF,0BAAU,IAAI,SAAU,0BAA0B,WAAY;AAC7D,MAAI,SAAK,cAAAA,SAAE;AACX,MAAI,gBAAgB,KAAK;AAIzB,OAAK,SAAU,MAAM,SAAS,SAAW,KAAM;AAC9C,QAAK,IAAI,UAAW;AACnB,UAAI,QAAQ,QAAQ,iBAAkB,eAAe,IAAI,QAAS;AAElE,eAAU,IAAE,GAAG,MAAI,MAAM,QAAS,IAAE,KAAM,KAAM;AAC/C,aAAK,GAAG,IAAK,MAAM,CAAC,EAAE,UAAU,CAAE;AAAA,MACnC;AAAA,IACD;AAAA,EACD,CAAE;AAEF,SAAO;AACR,CAAE;AAEF,0BAAU,IAAI,SAAU,yBAAyB,WAAY;AAE5D,SAAO,KAAK,WAAW,EAAE,GAAG,CAAC;AAC9B,CAAE;AAGF,0BAAU,IAAI,SAAU,kBAAkB,SAAW,KAAK,MAAM,MAAO;AACtE,MAAI,MAAM,KAAK;AAGf,MAAK,IAAI,QAAS;AACjB,QAAI,OAAO,QAAQ,iBAAkB,KAAK,gBAAgB,IAAI,CAAC,EAAE,QAAS;AAE1E,QAAK,KAAK,QAAS;AAClB,WAAK,CAAC,EAAE,IAAK,MAAM,KAAM,IAAI;AAAA,IAC9B;AAAA,EACD;AAEA,SAAO,KAAK,OAAQ,KAAK,gBAAgB,GAAI;AAC9C,CAAE;AAGF,0BAAU,IAAI,SAAU,uBAAuB,WAAY;AAC1D,OAAK,MAAO,MAAO,EAAE,OAAO,EAAE,KAAM,SAAW,MAAO;AACrD,SAAK,QAAQ;AAAA,EACd,CAAE;AAEF,SAAO;AACR,CAAE;AAGF,0BAAU,IAAI,eAAgB,sBAAsB,sBAAsB,WAAY;AACrF,OAAK,KAAM,SAAW,KAAM;AAC3B,QAAI,KAAK,OAAQ,IAAI,IAAK;AAAA,EAC3B,CAAE;AAEF,SAAO;AACR,CAAE;AAGF,IAAI;AACJ,0BAAU,IAAI,SAAU,kBAAkB,SAAW,OAAO,SAAS,MAAO;AAC3E,MAAI,OAAO;AAEX,MAAK,UAAU,OAAQ;AACtB,SAAK,IAAI,kBAAkB;AAC3B;AAAA,UACC,cAAAA,SAAE,0BAA0B;AAAA,MAC5B;AAAA,MACA,WAAY;AACX,0BAAAA,SAAE,IAAI,EAAE,OAAO;AAAA,MAChB;AAAA,IACD;AACA,iBAAc,UAAW;AACzB,iBAAa;AAEb,WAAO;AAAA,EACR;AAEA,MAAK,YAAa;AACjB,iBAAc,UAAW;AAAA,EAC1B;AAEA,UAAK,cAAAA,SAAE,0BAA0B,EAAE,QAAS;AAC3C,sBAAAA,SAAE,0BAA0B,EAAE,OAAO;AAAA,EACtC;AAEA,UAAQ,QAAQ,SAAO,QAAM,UAAU;AAEvC;AAAA,QACC,cAAAA,SAAE,4DAA4D,EAC5D,KAAM,KAAM,EACZ,WAAQ,cAAAA,SAAE,QAAQ,EAAG,OAAO,YAAY,WAAW,SAAS,QAAS,EAAG,OAAQ,CAAE,EAClF,IAAK,WAAW,MAAO,EACvB,SAAU,MAAO;AAAA,EACpB;AAEA,MAAK,SAAS,UAAa,SAAS,GAAI;AACvC,iBAAa,WAAY,WAAY;AACpC,WAAK,QAAQ,KAAM,KAAM;AAAA,IAC1B,GAAG,IAAK;AAAA,EACT;AAEA,OAAK,GAAG,oBAAoB,WAAY;AACvC,SAAK,QAAQ,KAAK,KAAK;AAAA,EACxB,CAAC;AAED,SAAO;AACR,CAAE;AAIF,0BAAU,IAAI,SAAU,wBAAwB,SAAW,SAAU;AACpE,MAAK,KAAK,QAAQ,QAAS;AAC1B,WAAO,YAAa,IAAI,0BAAU,IAAK,KAAK,QAAQ,CAAC,CAAE,GAAG,OAAQ;AAAA,EACnE;AACD,CAAE;AAIF,0BAAU,IAAI,SAAU,wBAAwB,SAAW,MAAO;AACjE,MAAK,CAAE,MAAO;AACb,WAAO,CAAC;AAAA,EACT;AAEA,SAAO;AAAA,IACN,UAAU,UAAW,IAAK;AAAA,IAC1B,OAAO,OAAQ,IAAK;AAAA,IACpB,YAAY,SAAS,MAAM,KAAK,WAAW,KAAK,YAAY,KAAK;AAAA,IACjE,eAAe,SAAS,MAAM,KAAK,eAAe,QAAQ;AAAA,EAC3D;AACD,CAAE;AAUF,IAAI,YAAY,SAAW,QAC3B;AAEC,MAAI,WAAW,OAAO,aAAa,OAAO,OAAO,UAAU,OAAO,OAAO,UAAU,UAAa,OAAO,UAAU,QAAQ,OAAO,UAAU,KACzI,OAAO,QACP,OAAO;AAER,MAAK,OAAO,aAAa,YAAa;AACrC,eAAW,SAAS;AAAA,EACrB;AAEA,MAAK,aAAa,UAAa,aAAa,MAAO;AAClD,WAAO;AAAA,EACR;AAEA,MAAK,SAAS,QAAS,GAAI,MAAM,IAAK;AACrC,eAAW,SAAS,QAAS,SAAK,cAAAA,SAAE,cAAc,EAAE,KAAK,CAAE,EAAE,KAAK;AAAA,EACnE;AAGA,aAAW,SAAS,QAAQ,2CAA2C,EAAE;AAEzE,MAAI,YAAY,kBAAmB,OAAO,SAAU;AACpD,MAAK,CAAE,WAAY;AAClB,gBAAY;AAAA,EACb;AAEA,SAAO,WAAW;AACnB;AAQA,IAAI,oBAAoB,SAAW,QACnC;AACC,MAAK,WAAW,QAAQ,WAAW,QAAY;AAC9C,WAAO;AAAA,EACR,WACU,OAAO,WAAW,YAAa;AACxC,WAAO,OAAO;AAAA,EACf;AACA,SAAO;AACR;AAOA,IAAI,SAAS,SAAW,QACxB;AACC,MAAI,QAAQ,kBAAmB,OAAO,KAAM;AAE5C,SAAO,UAAU,OAChB,OAAO,MAAM,QAAS,GAAI,MAAM,KAC/B,MAAM,QAAS,SAAK,cAAAA,SAAE,cAAc,EAAE,KAAK,KAAK,eAAgB,IAChE;AACH;AAEA,IAAI,WAAW,SAAW,IAAI,QAAQ,UACtC;AACC,MAAI,UAAU,kBAAmB,MAAO;AACxC,MAAK,YAAY,MAAO;AACvB,WAAO;AAAA,EACR;AAEA,MAAI,cAAU,cAAAA,SAAE,WAAW,GAAG,MAAM,EAAE,UAAU,CAAC,EAAE,GAAG,CAAC;AACvD,MAAK,YAAY,KAAM;AACtB,QAAI,OAAO,QAAQ,IAAK,cAAe;AACvC,QAAK,SAAS,UAAW;AACxB,aAAO;AAAA,IACR;AAEA,WAAO,QAAQ,SACd,QAAQ,KAAK,IACb;AAAA,EACF;AAEA,SAAO;AACR;AAKA,IAAI,sBAAkB,cAAAA,SAAE,aAAa,EAAE,CAAC;AACxC,IAAI,cAAc,SAAW,IAAI,QACjC;AACC,MAAI,SAAS,cAAAA,QAAE,OAAQ,MAAM,CAAC,GAAG;AAAA,IAChC,MAAgB;AAAA,IAChB,SAAgB;AAAA,IAChB,UAAgB;AAAA,MACf,QAAQ;AAAA,MACR,OAAQ;AAAA,IACT;AAAA,IACA,YAAgB;AAAA,IAChB,WAAgB;AAAA,IAChB,eAAgB;AAAA,IAChB,gBAAgB;AAAA,IAChB,MAAgB;AAAA,IAChB,QAAgB;AAAA,MACf,QAAQ,SAAW,GAAI;AACtB,eAAO,QAAQ,UAAW,GAAG,MAAO;AAAA,MACrC;AAAA,MACA,QAAQ,SAAW,GAAI;AACtB,eAAO,QAAQ,UAAW,GAAG,MAAO;AAAA,MACrC;AAAA,MACA,MAAM,SAAW,GAAI;AACpB,eAAO,QAAQ,UAAW,GAAG,MAAO;AAAA,MACrC;AAAA,IACD;AAAA,IACA,eAAe;AAAA,EAChB,GAAG,MAAO;AAEV,MAAI,SAAS,GAAG,QAAS,OAAO,OAAQ,EAAE,QAAQ,EAAE,IAAK,SAAU,KAAK;AACvE,QAAI,KAAK,GAAG,OAAQ,GAAI,EAAE,OAAO;AACjC,WAAO,OAAO,OAAO,OAAQ,GAAG,WAAW,KAAK,EAAG;AAAA,EACpD,CAAE,EAAE,QAAQ;AAEZ,MAAI,SAAS,GAAG,MAAM,EAAE,OAAO,IAC9B,GAAG,QAAS,OAAO,OAAQ,EAAE,QAAQ,EAAE,IAAK,SAAU,KAAK;AAC1D,QAAI,KAAK,GAAG,OAAQ,GAAI,EAAE,OAAO;AACjC,WAAO,OAAO,OAAO,OAAQ,KAAK,GAAG,YAAY,IAAI,KAAK,EAAG;AAAA,EAC9D,CAAE,EAAE,QAAQ,IACZ;AAKD,MAAI,WAAW,cAAAA,QAAE,OAAQ,CAAC,GAAG,OAAO,QAAS;AAC7C,MAAK,GAAG,UAAU,OAAO,GAAG,OAAO,SAAS,cAAc,SAAS,aAAa,QAAY;AAC3F,QAAK,GAAG,KAAM,OAAO,MAAM,cAAAA,QAAE,OAAQ,EAAE,UAAU,KAAK,GAAG,QAAS,CAAE,EAAE,IAAI,GAAI;AAC7E,oBAAAA,QAAE,OAAQ,UAAU,EAAE,UAAU,KAAK,CAAE;AAAA,IACxC;AAAA,EACD;AAEA,MAAI,aAAa,GAAG,KAAM,OAAO,MAAM,QAAS,EAAE,QAAQ,EAAE,QAAQ;AACpE,MAAI,gBAAgB,GAAG,MAAO,YAAY,OAAO,OAAQ;AACzD,MAAI,QAAQ,cACV,OAAQ,OAAO,UAAW,EAC1B,QAAQ;AACV,MAAI,YAAY,cACd,MAAM,EACN,QAAQ;AAEV,MAAI,UAAU,OAAO;AACrB,MAAI,OAAO,UAAU,IAAI,MAAM,SAAS,UAAU;AAClD,MAAI,OAAO,CAAC;AACZ,MAAI,cAAc;AAElB,WAAU,IAAE,GAAG,MAAI,MAAO,IAAE,KAAM,KAAM;AACvC,QAAI,MAAM,CAAE,OAAQ;AAEpB,aAAU,IAAE,GAAI,IAAE,SAAU,KAAM;AACjC,UAAI,CAAC,IAAI,OAAO,OAAO,KAAM,MAAO,WAAY,GAAG,GAAG,GAAG,UAAW,WAAY,CAAE;AAClF;AAAA,IACD;AAEA,SAAK,CAAC,IAAI;AAAA,EACX;AAEA,MAAI,OAAO;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,EACD;AAEA,MAAK,OAAO,eAAgB;AAC3B,WAAO,cAAe,IAAK;AAAA,EAC5B;AAEA,SAAO;AACR;AAQA,cAAAA,QAAE,GAAG,UAAU,UAAU;AACzB,cAAAA,QAAE,GAAG,UAAU,UAAU;AAAA,IASzB,cAAAA,SAAE,QAAQ,EAAE,GAAI,0BAA0B,SAAU,GAAG,UAAU;AAChE,MAAK,EAAE,cAAc,MAAO;AAC3B;AAAA,EACD;AAEA,MAAI,OAAO,SAAS,MAAM,WAAW,0BAAU,SAAS;AAExD,MAAK,QAAQ,CAAE,SAAS,UAAW;AAClC,QAAI,QAAS,UAAU,IAAK,EAAE,UAAU;AAAA,EACzC;AACD,CAAE;AAEF,SAAS,MAAQ,UAAU,SAAU;AACpC,MAAI,MAAM,IAAI,0BAAU,IAAK,QAAS;AACtC,MAAI,OAAO,UACR,UACA,IAAI,KAAK,EAAE,WAAW,0BAAU,SAAS;AAE5C,SAAO,IAAI,QAAS,KAAK,IAAK,EAAE,UAAU;AAC3C;AAGA,0BAAU,IAAI,QAAQ,KAAM;AAAA,EAC3B,QAAQ;AAAA,EACR,UAAU;AACX,CAAE;AAGF,IAAK,0BAAU,IAAI,UAAW;AAC7B,4BAAU,IAAI,SAAS,SAAU,WAAW,KAAM;AACnD;AAGA,IAAO,6BAAQ;",
  "names": ["$", "dt", "button", "config", "top", "e", "i", "ien", "selector", "inst"]
}
