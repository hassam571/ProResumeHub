import {
  require_jquery
} from "./chunk-7LFTRKDJ.js";
import {
  __commonJS
} from "./chunk-TFWDKVI3.js";

// node_modules/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js
var require_bootstrap_datepicker_min = __commonJS({
  "node_modules/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"(exports) {
    !function(a) {
      "function" == typeof define && define.amd ? define(["jquery"], a) : a("object" == typeof exports ? require_jquery() : jQuery);
    }(function(a, b) {
      function c() {
        return new Date(Date.UTC.apply(Date, arguments));
      }
      function d() {
        var a2 = /* @__PURE__ */ new Date();
        return c(a2.getFullYear(), a2.getMonth(), a2.getDate());
      }
      function e(a2, b2) {
        return a2.getUTCFullYear() === b2.getUTCFullYear() && a2.getUTCMonth() === b2.getUTCMonth() && a2.getUTCDate() === b2.getUTCDate();
      }
      function f(c2, d2) {
        return function() {
          return d2 !== b && a.fn.datepicker.deprecated(d2), this[c2].apply(this, arguments);
        };
      }
      function g(a2) {
        return a2 && !isNaN(a2.getTime());
      }
      function h(b2, c2) {
        function d2(a2, b3) {
          return b3.toLowerCase();
        }
        var e2, f2 = a(b2).data(), g2 = {}, h2 = new RegExp("^" + c2.toLowerCase() + "([A-Z])");
        c2 = new RegExp("^" + c2.toLowerCase());
        for (var i2 in f2)
          c2.test(i2) && (e2 = i2.replace(h2, d2), g2[e2] = f2[i2]);
        return g2;
      }
      function i(b2) {
        var c2 = {};
        if (q[b2] || (b2 = b2.split("-")[0], q[b2])) {
          var d2 = q[b2];
          return a.each(p, function(a2, b3) {
            b3 in d2 && (c2[b3] = d2[b3]);
          }), c2;
        }
      }
      var j = function() {
        var b2 = { get: function(a2) {
          return this.slice(a2)[0];
        }, contains: function(a2) {
          for (var b3 = a2 && a2.valueOf(), c2 = 0, d2 = this.length; c2 < d2; c2++)
            if (0 <= this[c2].valueOf() - b3 && this[c2].valueOf() - b3 < 864e5)
              return c2;
          return -1;
        }, remove: function(a2) {
          this.splice(a2, 1);
        }, replace: function(b3) {
          b3 && (a.isArray(b3) || (b3 = [b3]), this.clear(), this.push.apply(this, b3));
        }, clear: function() {
          this.length = 0;
        }, copy: function() {
          var a2 = new j();
          return a2.replace(this), a2;
        } };
        return function() {
          var c2 = [];
          return c2.push.apply(c2, arguments), a.extend(c2, b2), c2;
        };
      }(), k = function(b2, c2) {
        a.data(b2, "datepicker", this), this._events = [], this._secondaryEvents = [], this._process_options(c2), this.dates = new j(), this.viewDate = this.o.defaultViewDate, this.focusDate = null, this.element = a(b2), this.isInput = this.element.is("input"), this.inputField = this.isInput ? this.element : this.element.find("input"), this.component = !!this.element.hasClass("date") && this.element.find(".add-on, .input-group-addon, .input-group-append, .input-group-prepend, .btn"), this.component && 0 === this.component.length && (this.component = false), this.isInline = !this.component && this.element.is("div"), this.picker = a(r.template), this._check_template(this.o.templates.leftArrow) && this.picker.find(".prev").html(this.o.templates.leftArrow), this._check_template(this.o.templates.rightArrow) && this.picker.find(".next").html(this.o.templates.rightArrow), this._buildEvents(), this._attachEvents(), this.isInline ? this.picker.addClass("datepicker-inline").appendTo(this.element) : this.picker.addClass("datepicker-dropdown dropdown-menu"), this.o.rtl && this.picker.addClass("datepicker-rtl"), this.o.calendarWeeks && this.picker.find(".datepicker-days .datepicker-switch, thead .datepicker-title, tfoot .today, tfoot .clear").attr("colspan", function(a2, b3) {
          return Number(b3) + 1;
        }), this._process_options({ startDate: this._o.startDate, endDate: this._o.endDate, daysOfWeekDisabled: this.o.daysOfWeekDisabled, daysOfWeekHighlighted: this.o.daysOfWeekHighlighted, datesDisabled: this.o.datesDisabled }), this._allow_update = false, this.setViewMode(this.o.startView), this._allow_update = true, this.fillDow(), this.fillMonths(), this.update(), this.isInline && this.show();
      };
      k.prototype = { constructor: k, _resolveViewName: function(b2) {
        return a.each(r.viewModes, function(c2, d2) {
          if (b2 === c2 || -1 !== a.inArray(b2, d2.names))
            return b2 = c2, false;
        }), b2;
      }, _resolveDaysOfWeek: function(b2) {
        return a.isArray(b2) || (b2 = b2.split(/[,\s]*/)), a.map(b2, Number);
      }, _check_template: function(c2) {
        try {
          if (c2 === b || "" === c2)
            return false;
          if ((c2.match(/[<>]/g) || []).length <= 0)
            return true;
          return a(c2).length > 0;
        } catch (a2) {
          return false;
        }
      }, _process_options: function(b2) {
        this._o = a.extend({}, this._o, b2);
        var e2 = this.o = a.extend({}, this._o), f2 = e2.language;
        q[f2] || (f2 = f2.split("-")[0], q[f2] || (f2 = o.language)), e2.language = f2, e2.startView = this._resolveViewName(e2.startView), e2.minViewMode = this._resolveViewName(e2.minViewMode), e2.maxViewMode = this._resolveViewName(e2.maxViewMode), e2.startView = Math.max(this.o.minViewMode, Math.min(this.o.maxViewMode, e2.startView)), true !== e2.multidate && (e2.multidate = Number(e2.multidate) || false, false !== e2.multidate && (e2.multidate = Math.max(0, e2.multidate))), e2.multidateSeparator = String(e2.multidateSeparator), e2.weekStart %= 7, e2.weekEnd = (e2.weekStart + 6) % 7;
        var g2 = r.parseFormat(e2.format);
        e2.startDate !== -1 / 0 && (e2.startDate ? e2.startDate instanceof Date ? e2.startDate = this._local_to_utc(this._zero_time(e2.startDate)) : e2.startDate = r.parseDate(e2.startDate, g2, e2.language, e2.assumeNearbyYear) : e2.startDate = -1 / 0), e2.endDate !== 1 / 0 && (e2.endDate ? e2.endDate instanceof Date ? e2.endDate = this._local_to_utc(this._zero_time(e2.endDate)) : e2.endDate = r.parseDate(e2.endDate, g2, e2.language, e2.assumeNearbyYear) : e2.endDate = 1 / 0), e2.daysOfWeekDisabled = this._resolveDaysOfWeek(e2.daysOfWeekDisabled || []), e2.daysOfWeekHighlighted = this._resolveDaysOfWeek(e2.daysOfWeekHighlighted || []), e2.datesDisabled = e2.datesDisabled || [], a.isArray(e2.datesDisabled) || (e2.datesDisabled = e2.datesDisabled.split(",")), e2.datesDisabled = a.map(e2.datesDisabled, function(a2) {
          return r.parseDate(a2, g2, e2.language, e2.assumeNearbyYear);
        });
        var h2 = String(e2.orientation).toLowerCase().split(/\s+/g), i2 = e2.orientation.toLowerCase();
        if (h2 = a.grep(h2, function(a2) {
          return /^auto|left|right|top|bottom$/.test(a2);
        }), e2.orientation = { x: "auto", y: "auto" }, i2 && "auto" !== i2)
          if (1 === h2.length)
            switch (h2[0]) {
              case "top":
              case "bottom":
                e2.orientation.y = h2[0];
                break;
              case "left":
              case "right":
                e2.orientation.x = h2[0];
            }
          else
            i2 = a.grep(h2, function(a2) {
              return /^left|right$/.test(a2);
            }), e2.orientation.x = i2[0] || "auto", i2 = a.grep(h2, function(a2) {
              return /^top|bottom$/.test(a2);
            }), e2.orientation.y = i2[0] || "auto";
        else
          ;
        if (e2.defaultViewDate instanceof Date || "string" == typeof e2.defaultViewDate)
          e2.defaultViewDate = r.parseDate(e2.defaultViewDate, g2, e2.language, e2.assumeNearbyYear);
        else if (e2.defaultViewDate) {
          var j2 = e2.defaultViewDate.year || (/* @__PURE__ */ new Date()).getFullYear(), k2 = e2.defaultViewDate.month || 0, l2 = e2.defaultViewDate.day || 1;
          e2.defaultViewDate = c(j2, k2, l2);
        } else
          e2.defaultViewDate = d();
      }, _applyEvents: function(a2) {
        for (var c2, d2, e2, f2 = 0; f2 < a2.length; f2++)
          c2 = a2[f2][0], 2 === a2[f2].length ? (d2 = b, e2 = a2[f2][1]) : 3 === a2[f2].length && (d2 = a2[f2][1], e2 = a2[f2][2]), c2.on(e2, d2);
      }, _unapplyEvents: function(a2) {
        for (var c2, d2, e2, f2 = 0; f2 < a2.length; f2++)
          c2 = a2[f2][0], 2 === a2[f2].length ? (e2 = b, d2 = a2[f2][1]) : 3 === a2[f2].length && (e2 = a2[f2][1], d2 = a2[f2][2]), c2.off(d2, e2);
      }, _buildEvents: function() {
        var b2 = { keyup: a.proxy(function(b3) {
          -1 === a.inArray(b3.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) && this.update();
        }, this), keydown: a.proxy(this.keydown, this), paste: a.proxy(this.paste, this) };
        true === this.o.showOnFocus && (b2.focus = a.proxy(this.show, this)), this.isInput ? this._events = [[this.element, b2]] : this.component && this.inputField.length ? this._events = [[this.inputField, b2], [this.component, { click: a.proxy(this.show, this) }]] : this._events = [[this.element, { click: a.proxy(this.show, this), keydown: a.proxy(this.keydown, this) }]], this._events.push([this.element, "*", { blur: a.proxy(function(a2) {
          this._focused_from = a2.target;
        }, this) }], [this.element, { blur: a.proxy(function(a2) {
          this._focused_from = a2.target;
        }, this) }]), this.o.immediateUpdates && this._events.push([this.element, { "changeYear changeMonth": a.proxy(function(a2) {
          this.update(a2.date);
        }, this) }]), this._secondaryEvents = [[this.picker, { click: a.proxy(this.click, this) }], [this.picker, ".prev, .next", { click: a.proxy(this.navArrowsClick, this) }], [this.picker, ".day:not(.disabled)", { click: a.proxy(this.dayCellClick, this) }], [a(window), { resize: a.proxy(this.place, this) }], [a(document), { "mousedown touchstart": a.proxy(function(a2) {
          this.element.is(a2.target) || this.element.find(a2.target).length || this.picker.is(a2.target) || this.picker.find(a2.target).length || this.isInline || this.hide();
        }, this) }]];
      }, _attachEvents: function() {
        this._detachEvents(), this._applyEvents(this._events);
      }, _detachEvents: function() {
        this._unapplyEvents(this._events);
      }, _attachSecondaryEvents: function() {
        this._detachSecondaryEvents(), this._applyEvents(this._secondaryEvents);
      }, _detachSecondaryEvents: function() {
        this._unapplyEvents(this._secondaryEvents);
      }, _trigger: function(b2, c2) {
        var d2 = c2 || this.dates.get(-1), e2 = this._utc_to_local(d2);
        this.element.trigger({ type: b2, date: e2, viewMode: this.viewMode, dates: a.map(this.dates, this._utc_to_local), format: a.proxy(function(a2, b3) {
          0 === arguments.length ? (a2 = this.dates.length - 1, b3 = this.o.format) : "string" == typeof a2 && (b3 = a2, a2 = this.dates.length - 1), b3 = b3 || this.o.format;
          var c3 = this.dates.get(a2);
          return r.formatDate(c3, b3, this.o.language);
        }, this) });
      }, show: function() {
        if (!(this.inputField.is(":disabled") || this.inputField.prop("readonly") && false === this.o.enableOnReadonly))
          return this.isInline || this.picker.appendTo(this.o.container), this.place(), this.picker.show(), this._attachSecondaryEvents(), this._trigger("show"), (window.navigator.msMaxTouchPoints || "ontouchstart" in document) && this.o.disableTouchKeyboard && a(this.element).blur(), this;
      }, hide: function() {
        return this.isInline || !this.picker.is(":visible") ? this : (this.focusDate = null, this.picker.hide().detach(), this._detachSecondaryEvents(), this.setViewMode(this.o.startView), this.o.forceParse && this.inputField.val() && this.setValue(), this._trigger("hide"), this);
      }, destroy: function() {
        return this.hide(), this._detachEvents(), this._detachSecondaryEvents(), this.picker.remove(), delete this.element.data().datepicker, this.isInput || delete this.element.data().date, this;
      }, paste: function(b2) {
        var c2;
        if (b2.originalEvent.clipboardData && b2.originalEvent.clipboardData.types && -1 !== a.inArray("text/plain", b2.originalEvent.clipboardData.types))
          c2 = b2.originalEvent.clipboardData.getData("text/plain");
        else {
          if (!window.clipboardData)
            return;
          c2 = window.clipboardData.getData("Text");
        }
        this.setDate(c2), this.update(), b2.preventDefault();
      }, _utc_to_local: function(a2) {
        if (!a2)
          return a2;
        var b2 = new Date(a2.getTime() + 6e4 * a2.getTimezoneOffset());
        return b2.getTimezoneOffset() !== a2.getTimezoneOffset() && (b2 = new Date(a2.getTime() + 6e4 * b2.getTimezoneOffset())), b2;
      }, _local_to_utc: function(a2) {
        return a2 && new Date(a2.getTime() - 6e4 * a2.getTimezoneOffset());
      }, _zero_time: function(a2) {
        return a2 && new Date(a2.getFullYear(), a2.getMonth(), a2.getDate());
      }, _zero_utc_time: function(a2) {
        return a2 && c(a2.getUTCFullYear(), a2.getUTCMonth(), a2.getUTCDate());
      }, getDates: function() {
        return a.map(this.dates, this._utc_to_local);
      }, getUTCDates: function() {
        return a.map(this.dates, function(a2) {
          return new Date(a2);
        });
      }, getDate: function() {
        return this._utc_to_local(this.getUTCDate());
      }, getUTCDate: function() {
        var a2 = this.dates.get(-1);
        return a2 !== b ? new Date(a2) : null;
      }, clearDates: function() {
        this.inputField.val(""), this.update(), this._trigger("changeDate"), this.o.autoclose && this.hide();
      }, setDates: function() {
        var b2 = a.isArray(arguments[0]) ? arguments[0] : arguments;
        return this.update.apply(this, b2), this._trigger("changeDate"), this.setValue(), this;
      }, setUTCDates: function() {
        var b2 = a.isArray(arguments[0]) ? arguments[0] : arguments;
        return this.setDates.apply(this, a.map(b2, this._utc_to_local)), this;
      }, setDate: f("setDates"), setUTCDate: f("setUTCDates"), remove: f("destroy", "Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead"), setValue: function() {
        var a2 = this.getFormattedDate();
        return this.inputField.val(a2), this;
      }, getFormattedDate: function(c2) {
        c2 === b && (c2 = this.o.format);
        var d2 = this.o.language;
        return a.map(this.dates, function(a2) {
          return r.formatDate(a2, c2, d2);
        }).join(this.o.multidateSeparator);
      }, getStartDate: function() {
        return this.o.startDate;
      }, setStartDate: function(a2) {
        return this._process_options({ startDate: a2 }), this.update(), this.updateNavArrows(), this;
      }, getEndDate: function() {
        return this.o.endDate;
      }, setEndDate: function(a2) {
        return this._process_options({ endDate: a2 }), this.update(), this.updateNavArrows(), this;
      }, setDaysOfWeekDisabled: function(a2) {
        return this._process_options({ daysOfWeekDisabled: a2 }), this.update(), this;
      }, setDaysOfWeekHighlighted: function(a2) {
        return this._process_options({ daysOfWeekHighlighted: a2 }), this.update(), this;
      }, setDatesDisabled: function(a2) {
        return this._process_options({ datesDisabled: a2 }), this.update(), this;
      }, place: function() {
        if (this.isInline)
          return this;
        var b2 = this.picker.outerWidth(), c2 = this.picker.outerHeight(), d2 = a(this.o.container), e2 = d2.width(), f2 = "body" === this.o.container ? a(document).scrollTop() : d2.scrollTop(), g2 = d2.offset(), h2 = [0];
        this.element.parents().each(function() {
          var b3 = a(this).css("z-index");
          "auto" !== b3 && 0 !== Number(b3) && h2.push(Number(b3));
        });
        var i2 = Math.max.apply(Math, h2) + this.o.zIndexOffset, j2 = this.component ? this.component.parent().offset() : this.element.offset(), k2 = this.component ? this.component.outerHeight(true) : this.element.outerHeight(false), l2 = this.component ? this.component.outerWidth(true) : this.element.outerWidth(false), m2 = j2.left - g2.left, n2 = j2.top - g2.top;
        "body" !== this.o.container && (n2 += f2), this.picker.removeClass("datepicker-orient-top datepicker-orient-bottom datepicker-orient-right datepicker-orient-left"), "auto" !== this.o.orientation.x ? (this.picker.addClass("datepicker-orient-" + this.o.orientation.x), "right" === this.o.orientation.x && (m2 -= b2 - l2)) : j2.left < 0 ? (this.picker.addClass("datepicker-orient-left"), m2 -= j2.left - 10) : m2 + b2 > e2 ? (this.picker.addClass("datepicker-orient-right"), m2 += l2 - b2) : this.o.rtl ? this.picker.addClass("datepicker-orient-right") : this.picker.addClass("datepicker-orient-left");
        var o2, p2 = this.o.orientation.y;
        if ("auto" === p2 && (o2 = -f2 + n2 - c2, p2 = o2 < 0 ? "bottom" : "top"), this.picker.addClass("datepicker-orient-" + p2), "top" === p2 ? n2 -= c2 + parseInt(this.picker.css("padding-top")) : n2 += k2, this.o.rtl) {
          var q2 = e2 - (m2 + l2);
          this.picker.css({ top: n2, right: q2, zIndex: i2 });
        } else
          this.picker.css({ top: n2, left: m2, zIndex: i2 });
        return this;
      }, _allow_update: true, update: function() {
        if (!this._allow_update)
          return this;
        var b2 = this.dates.copy(), c2 = [], d2 = false;
        return arguments.length ? (a.each(arguments, a.proxy(function(a2, b3) {
          b3 instanceof Date && (b3 = this._local_to_utc(b3)), c2.push(b3);
        }, this)), d2 = true) : (c2 = this.isInput ? this.element.val() : this.element.data("date") || this.inputField.val(), c2 = c2 && this.o.multidate ? c2.split(this.o.multidateSeparator) : [c2], delete this.element.data().date), c2 = a.map(c2, a.proxy(function(a2) {
          return r.parseDate(a2, this.o.format, this.o.language, this.o.assumeNearbyYear);
        }, this)), c2 = a.grep(c2, a.proxy(function(a2) {
          return !this.dateWithinRange(a2) || !a2;
        }, this), true), this.dates.replace(c2), this.o.updateViewDate && (this.dates.length ? this.viewDate = new Date(this.dates.get(-1)) : this.viewDate < this.o.startDate ? this.viewDate = new Date(this.o.startDate) : this.viewDate > this.o.endDate ? this.viewDate = new Date(this.o.endDate) : this.viewDate = this.o.defaultViewDate), d2 ? (this.setValue(), this.element.change()) : this.dates.length && String(b2) !== String(this.dates) && d2 && (this._trigger("changeDate"), this.element.change()), !this.dates.length && b2.length && (this._trigger("clearDate"), this.element.change()), this.fill(), this;
      }, fillDow: function() {
        if (this.o.showWeekDays) {
          var b2 = this.o.weekStart, c2 = "<tr>";
          for (this.o.calendarWeeks && (c2 += '<th class="cw">&#160;</th>'); b2 < this.o.weekStart + 7; )
            c2 += '<th class="dow', -1 !== a.inArray(b2, this.o.daysOfWeekDisabled) && (c2 += " disabled"), c2 += '">' + q[this.o.language].daysMin[b2++ % 7] + "</th>";
          c2 += "</tr>", this.picker.find(".datepicker-days thead").append(c2);
        }
      }, fillMonths: function() {
        for (var a2, b2 = this._utc_to_local(this.viewDate), c2 = "", d2 = 0; d2 < 12; d2++)
          a2 = b2 && b2.getMonth() === d2 ? " focused" : "", c2 += '<span class="month' + a2 + '">' + q[this.o.language].monthsShort[d2] + "</span>";
        this.picker.find(".datepicker-months td").html(c2);
      }, setRange: function(b2) {
        b2 && b2.length ? this.range = a.map(b2, function(a2) {
          return a2.valueOf();
        }) : delete this.range, this.fill();
      }, getClassNames: function(b2) {
        var c2 = [], f2 = this.viewDate.getUTCFullYear(), g2 = this.viewDate.getUTCMonth(), h2 = d();
        return b2.getUTCFullYear() < f2 || b2.getUTCFullYear() === f2 && b2.getUTCMonth() < g2 ? c2.push("old") : (b2.getUTCFullYear() > f2 || b2.getUTCFullYear() === f2 && b2.getUTCMonth() > g2) && c2.push("new"), this.focusDate && b2.valueOf() === this.focusDate.valueOf() && c2.push("focused"), this.o.todayHighlight && e(b2, h2) && c2.push("today"), -1 !== this.dates.contains(b2) && c2.push("active"), this.dateWithinRange(b2) || c2.push("disabled"), this.dateIsDisabled(b2) && c2.push("disabled", "disabled-date"), -1 !== a.inArray(b2.getUTCDay(), this.o.daysOfWeekHighlighted) && c2.push("highlighted"), this.range && (b2 > this.range[0] && b2 < this.range[this.range.length - 1] && c2.push("range"), -1 !== a.inArray(b2.valueOf(), this.range) && c2.push("selected"), b2.valueOf() === this.range[0] && c2.push("range-start"), b2.valueOf() === this.range[this.range.length - 1] && c2.push("range-end")), c2;
      }, _fill_yearsView: function(c2, d2, e2, f2, g2, h2, i2) {
        for (var j2, k2, l2, m2 = "", n2 = e2 / 10, o2 = this.picker.find(c2), p2 = Math.floor(f2 / e2) * e2, q2 = p2 + 9 * n2, r2 = Math.floor(this.viewDate.getFullYear() / n2) * n2, s = a.map(this.dates, function(a2) {
          return Math.floor(a2.getUTCFullYear() / n2) * n2;
        }), t = p2 - n2; t <= q2 + n2; t += n2)
          j2 = [d2], k2 = null, t === p2 - n2 ? j2.push("old") : t === q2 + n2 && j2.push("new"), -1 !== a.inArray(t, s) && j2.push("active"), (t < g2 || t > h2) && j2.push("disabled"), t === r2 && j2.push("focused"), i2 !== a.noop && (l2 = i2(new Date(t, 0, 1)), l2 === b ? l2 = {} : "boolean" == typeof l2 ? l2 = { enabled: l2 } : "string" == typeof l2 && (l2 = { classes: l2 }), false === l2.enabled && j2.push("disabled"), l2.classes && (j2 = j2.concat(l2.classes.split(/\s+/))), l2.tooltip && (k2 = l2.tooltip)), m2 += '<span class="' + j2.join(" ") + '"' + (k2 ? ' title="' + k2 + '"' : "") + ">" + t + "</span>";
        o2.find(".datepicker-switch").text(p2 + "-" + q2), o2.find("td").html(m2);
      }, fill: function() {
        var e2, f2, g2 = new Date(this.viewDate), h2 = g2.getUTCFullYear(), i2 = g2.getUTCMonth(), j2 = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCFullYear() : -1 / 0, k2 = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCMonth() : -1 / 0, l2 = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCFullYear() : 1 / 0, m2 = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCMonth() : 1 / 0, n2 = q[this.o.language].today || q.en.today || "", o2 = q[this.o.language].clear || q.en.clear || "", p2 = q[this.o.language].titleFormat || q.en.titleFormat, s = d(), t = (true === this.o.todayBtn || "linked" === this.o.todayBtn) && s >= this.o.startDate && s <= this.o.endDate && !this.weekOfDateIsDisabled(s);
        if (!isNaN(h2) && !isNaN(i2)) {
          this.picker.find(".datepicker-days .datepicker-switch").text(r.formatDate(g2, p2, this.o.language)), this.picker.find("tfoot .today").text(n2).css("display", t ? "table-cell" : "none"), this.picker.find("tfoot .clear").text(o2).css("display", true === this.o.clearBtn ? "table-cell" : "none"), this.picker.find("thead .datepicker-title").text(this.o.title).css("display", "string" == typeof this.o.title && "" !== this.o.title ? "table-cell" : "none"), this.updateNavArrows(), this.fillMonths();
          var u = c(h2, i2, 0), v = u.getUTCDate();
          u.setUTCDate(v - (u.getUTCDay() - this.o.weekStart + 7) % 7);
          var w = new Date(u);
          u.getUTCFullYear() < 100 && w.setUTCFullYear(u.getUTCFullYear()), w.setUTCDate(w.getUTCDate() + 42), w = w.valueOf();
          for (var x, y, z = []; u.valueOf() < w; ) {
            if ((x = u.getUTCDay()) === this.o.weekStart && (z.push("<tr>"), this.o.calendarWeeks)) {
              var A = new Date(+u + (this.o.weekStart - x - 7) % 7 * 864e5), B = new Date(Number(A) + (11 - A.getUTCDay()) % 7 * 864e5), C = new Date(Number(C = c(B.getUTCFullYear(), 0, 1)) + (11 - C.getUTCDay()) % 7 * 864e5), D = (B - C) / 864e5 / 7 + 1;
              z.push('<td class="cw">' + D + "</td>");
            }
            y = this.getClassNames(u), y.push("day");
            var E = u.getUTCDate();
            this.o.beforeShowDay !== a.noop && (f2 = this.o.beforeShowDay(this._utc_to_local(u)), f2 === b ? f2 = {} : "boolean" == typeof f2 ? f2 = { enabled: f2 } : "string" == typeof f2 && (f2 = { classes: f2 }), false === f2.enabled && y.push("disabled"), f2.classes && (y = y.concat(f2.classes.split(/\s+/))), f2.tooltip && (e2 = f2.tooltip), f2.content && (E = f2.content)), y = a.isFunction(a.uniqueSort) ? a.uniqueSort(y) : a.unique(y), z.push('<td class="' + y.join(" ") + '"' + (e2 ? ' title="' + e2 + '"' : "") + ' data-date="' + u.getTime().toString() + '">' + E + "</td>"), e2 = null, x === this.o.weekEnd && z.push("</tr>"), u.setUTCDate(u.getUTCDate() + 1);
          }
          this.picker.find(".datepicker-days tbody").html(z.join(""));
          var F = q[this.o.language].monthsTitle || q.en.monthsTitle || "Months", G = this.picker.find(".datepicker-months").find(".datepicker-switch").text(this.o.maxViewMode < 2 ? F : h2).end().find("tbody span").removeClass("active");
          if (a.each(this.dates, function(a2, b2) {
            b2.getUTCFullYear() === h2 && G.eq(b2.getUTCMonth()).addClass("active");
          }), (h2 < j2 || h2 > l2) && G.addClass("disabled"), h2 === j2 && G.slice(0, k2).addClass("disabled"), h2 === l2 && G.slice(m2 + 1).addClass("disabled"), this.o.beforeShowMonth !== a.noop) {
            var H = this;
            a.each(G, function(c2, d2) {
              var e3 = new Date(h2, c2, 1), f3 = H.o.beforeShowMonth(e3);
              f3 === b ? f3 = {} : "boolean" == typeof f3 ? f3 = { enabled: f3 } : "string" == typeof f3 && (f3 = { classes: f3 }), false !== f3.enabled || a(d2).hasClass("disabled") || a(d2).addClass("disabled"), f3.classes && a(d2).addClass(f3.classes), f3.tooltip && a(d2).prop("title", f3.tooltip);
            });
          }
          this._fill_yearsView(".datepicker-years", "year", 10, h2, j2, l2, this.o.beforeShowYear), this._fill_yearsView(".datepicker-decades", "decade", 100, h2, j2, l2, this.o.beforeShowDecade), this._fill_yearsView(".datepicker-centuries", "century", 1e3, h2, j2, l2, this.o.beforeShowCentury);
        }
      }, updateNavArrows: function() {
        if (this._allow_update) {
          var a2, b2, c2 = new Date(this.viewDate), d2 = c2.getUTCFullYear(), e2 = c2.getUTCMonth(), f2 = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCFullYear() : -1 / 0, g2 = this.o.startDate !== -1 / 0 ? this.o.startDate.getUTCMonth() : -1 / 0, h2 = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCFullYear() : 1 / 0, i2 = this.o.endDate !== 1 / 0 ? this.o.endDate.getUTCMonth() : 1 / 0, j2 = 1;
          switch (this.viewMode) {
            case 4:
              j2 *= 10;
            case 3:
              j2 *= 10;
            case 2:
              j2 *= 10;
            case 1:
              a2 = Math.floor(d2 / j2) * j2 <= f2, b2 = Math.floor(d2 / j2) * j2 + j2 > h2;
              break;
            case 0:
              a2 = d2 <= f2 && e2 <= g2, b2 = d2 >= h2 && e2 >= i2;
          }
          this.picker.find(".prev").toggleClass("disabled", a2), this.picker.find(".next").toggleClass("disabled", b2);
        }
      }, click: function(b2) {
        b2.preventDefault(), b2.stopPropagation();
        var e2, f2, g2, h2;
        e2 = a(b2.target), e2.hasClass("datepicker-switch") && this.viewMode !== this.o.maxViewMode && this.setViewMode(this.viewMode + 1), e2.hasClass("today") && !e2.hasClass("day") && (this.setViewMode(0), this._setDate(d(), "linked" === this.o.todayBtn ? null : "view")), e2.hasClass("clear") && this.clearDates(), e2.hasClass("disabled") || (e2.hasClass("month") || e2.hasClass("year") || e2.hasClass("decade") || e2.hasClass("century")) && (this.viewDate.setUTCDate(1), f2 = 1, 1 === this.viewMode ? (h2 = e2.parent().find("span").index(e2), g2 = this.viewDate.getUTCFullYear(), this.viewDate.setUTCMonth(h2)) : (h2 = 0, g2 = Number(e2.text()), this.viewDate.setUTCFullYear(g2)), this._trigger(r.viewModes[this.viewMode - 1].e, this.viewDate), this.viewMode === this.o.minViewMode ? this._setDate(c(g2, h2, f2)) : (this.setViewMode(this.viewMode - 1), this.fill())), this.picker.is(":visible") && this._focused_from && this._focused_from.focus(), delete this._focused_from;
      }, dayCellClick: function(b2) {
        var c2 = a(b2.currentTarget), d2 = c2.data("date"), e2 = new Date(d2);
        this.o.updateViewDate && (e2.getUTCFullYear() !== this.viewDate.getUTCFullYear() && this._trigger("changeYear", this.viewDate), e2.getUTCMonth() !== this.viewDate.getUTCMonth() && this._trigger("changeMonth", this.viewDate)), this._setDate(e2);
      }, navArrowsClick: function(b2) {
        var c2 = a(b2.currentTarget), d2 = c2.hasClass("prev") ? -1 : 1;
        0 !== this.viewMode && (d2 *= 12 * r.viewModes[this.viewMode].navStep), this.viewDate = this.moveMonth(this.viewDate, d2), this._trigger(r.viewModes[this.viewMode].e, this.viewDate), this.fill();
      }, _toggle_multidate: function(a2) {
        var b2 = this.dates.contains(a2);
        if (a2 || this.dates.clear(), -1 !== b2 ? (true === this.o.multidate || this.o.multidate > 1 || this.o.toggleActive) && this.dates.remove(b2) : false === this.o.multidate ? (this.dates.clear(), this.dates.push(a2)) : this.dates.push(a2), "number" == typeof this.o.multidate)
          for (; this.dates.length > this.o.multidate; )
            this.dates.remove(0);
      }, _setDate: function(a2, b2) {
        b2 && "date" !== b2 || this._toggle_multidate(a2 && new Date(a2)), (!b2 && this.o.updateViewDate || "view" === b2) && (this.viewDate = a2 && new Date(a2)), this.fill(), this.setValue(), b2 && "view" === b2 || this._trigger("changeDate"), this.inputField.trigger("change"), !this.o.autoclose || b2 && "date" !== b2 || this.hide();
      }, moveDay: function(a2, b2) {
        var c2 = new Date(a2);
        return c2.setUTCDate(a2.getUTCDate() + b2), c2;
      }, moveWeek: function(a2, b2) {
        return this.moveDay(a2, 7 * b2);
      }, moveMonth: function(a2, b2) {
        if (!g(a2))
          return this.o.defaultViewDate;
        if (!b2)
          return a2;
        var c2, d2, e2 = new Date(a2.valueOf()), f2 = e2.getUTCDate(), h2 = e2.getUTCMonth(), i2 = Math.abs(b2);
        if (b2 = b2 > 0 ? 1 : -1, 1 === i2)
          d2 = -1 === b2 ? function() {
            return e2.getUTCMonth() === h2;
          } : function() {
            return e2.getUTCMonth() !== c2;
          }, c2 = h2 + b2, e2.setUTCMonth(c2), c2 = (c2 + 12) % 12;
        else {
          for (var j2 = 0; j2 < i2; j2++)
            e2 = this.moveMonth(e2, b2);
          c2 = e2.getUTCMonth(), e2.setUTCDate(f2), d2 = function() {
            return c2 !== e2.getUTCMonth();
          };
        }
        for (; d2(); )
          e2.setUTCDate(--f2), e2.setUTCMonth(c2);
        return e2;
      }, moveYear: function(a2, b2) {
        return this.moveMonth(a2, 12 * b2);
      }, moveAvailableDate: function(a2, b2, c2) {
        do {
          if (a2 = this[c2](a2, b2), !this.dateWithinRange(a2))
            return false;
          c2 = "moveDay";
        } while (this.dateIsDisabled(a2));
        return a2;
      }, weekOfDateIsDisabled: function(b2) {
        return -1 !== a.inArray(b2.getUTCDay(), this.o.daysOfWeekDisabled);
      }, dateIsDisabled: function(b2) {
        return this.weekOfDateIsDisabled(b2) || a.grep(this.o.datesDisabled, function(a2) {
          return e(b2, a2);
        }).length > 0;
      }, dateWithinRange: function(a2) {
        return a2 >= this.o.startDate && a2 <= this.o.endDate;
      }, keydown: function(a2) {
        if (!this.picker.is(":visible"))
          return void (40 !== a2.keyCode && 27 !== a2.keyCode || (this.show(), a2.stopPropagation()));
        var b2, c2, d2 = false, e2 = this.focusDate || this.viewDate;
        switch (a2.keyCode) {
          case 27:
            this.focusDate ? (this.focusDate = null, this.viewDate = this.dates.get(-1) || this.viewDate, this.fill()) : this.hide(), a2.preventDefault(), a2.stopPropagation();
            break;
          case 37:
          case 38:
          case 39:
          case 40:
            if (!this.o.keyboardNavigation || 7 === this.o.daysOfWeekDisabled.length)
              break;
            b2 = 37 === a2.keyCode || 38 === a2.keyCode ? -1 : 1, 0 === this.viewMode ? a2.ctrlKey ? (c2 = this.moveAvailableDate(e2, b2, "moveYear")) && this._trigger("changeYear", this.viewDate) : a2.shiftKey ? (c2 = this.moveAvailableDate(e2, b2, "moveMonth")) && this._trigger("changeMonth", this.viewDate) : 37 === a2.keyCode || 39 === a2.keyCode ? c2 = this.moveAvailableDate(e2, b2, "moveDay") : this.weekOfDateIsDisabled(e2) || (c2 = this.moveAvailableDate(e2, b2, "moveWeek")) : 1 === this.viewMode ? (38 !== a2.keyCode && 40 !== a2.keyCode || (b2 *= 4), c2 = this.moveAvailableDate(e2, b2, "moveMonth")) : 2 === this.viewMode && (38 !== a2.keyCode && 40 !== a2.keyCode || (b2 *= 4), c2 = this.moveAvailableDate(e2, b2, "moveYear")), c2 && (this.focusDate = this.viewDate = c2, this.setValue(), this.fill(), a2.preventDefault());
            break;
          case 13:
            if (!this.o.forceParse)
              break;
            e2 = this.focusDate || this.dates.get(-1) || this.viewDate, this.o.keyboardNavigation && (this._toggle_multidate(e2), d2 = true), this.focusDate = null, this.viewDate = this.dates.get(-1) || this.viewDate, this.setValue(), this.fill(), this.picker.is(":visible") && (a2.preventDefault(), a2.stopPropagation(), this.o.autoclose && this.hide());
            break;
          case 9:
            this.focusDate = null, this.viewDate = this.dates.get(-1) || this.viewDate, this.fill(), this.hide();
        }
        d2 && (this.dates.length ? this._trigger("changeDate") : this._trigger("clearDate"), this.inputField.trigger("change"));
      }, setViewMode: function(a2) {
        this.viewMode = a2, this.picker.children("div").hide().filter(".datepicker-" + r.viewModes[this.viewMode].clsName).show(), this.updateNavArrows(), this._trigger("changeViewMode", new Date(this.viewDate));
      } };
      var l = function(b2, c2) {
        a.data(b2, "datepicker", this), this.element = a(b2), this.inputs = a.map(c2.inputs, function(a2) {
          return a2.jquery ? a2[0] : a2;
        }), delete c2.inputs, this.keepEmptyValues = c2.keepEmptyValues, delete c2.keepEmptyValues, n.call(a(this.inputs), c2).on("changeDate", a.proxy(this.dateUpdated, this)), this.pickers = a.map(this.inputs, function(b3) {
          return a.data(b3, "datepicker");
        }), this.updateDates();
      };
      l.prototype = { updateDates: function() {
        this.dates = a.map(this.pickers, function(a2) {
          return a2.getUTCDate();
        }), this.updateRanges();
      }, updateRanges: function() {
        var b2 = a.map(this.dates, function(a2) {
          return a2.valueOf();
        });
        a.each(this.pickers, function(a2, c2) {
          c2.setRange(b2);
        });
      }, clearDates: function() {
        a.each(this.pickers, function(a2, b2) {
          b2.clearDates();
        });
      }, dateUpdated: function(c2) {
        if (!this.updating) {
          this.updating = true;
          var d2 = a.data(c2.target, "datepicker");
          if (d2 !== b) {
            var e2 = d2.getUTCDate(), f2 = this.keepEmptyValues, g2 = a.inArray(c2.target, this.inputs), h2 = g2 - 1, i2 = g2 + 1, j2 = this.inputs.length;
            if (-1 !== g2) {
              if (a.each(this.pickers, function(a2, b2) {
                b2.getUTCDate() || b2 !== d2 && f2 || b2.setUTCDate(e2);
              }), e2 < this.dates[h2])
                for (; h2 >= 0 && e2 < this.dates[h2]; )
                  this.pickers[h2--].setUTCDate(e2);
              else if (e2 > this.dates[i2])
                for (; i2 < j2 && e2 > this.dates[i2]; )
                  this.pickers[i2++].setUTCDate(e2);
              this.updateDates(), delete this.updating;
            }
          }
        }
      }, destroy: function() {
        a.map(this.pickers, function(a2) {
          a2.destroy();
        }), a(this.inputs).off("changeDate", this.dateUpdated), delete this.element.data().datepicker;
      }, remove: f("destroy", "Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead") };
      var m = a.fn.datepicker, n = function(c2) {
        var d2 = Array.apply(null, arguments);
        d2.shift();
        var e2;
        if (this.each(function() {
          var b2 = a(this), f2 = b2.data("datepicker"), g2 = "object" == typeof c2 && c2;
          if (!f2) {
            var j2 = h(this, "date"), m2 = a.extend({}, o, j2, g2), n2 = i(m2.language), p2 = a.extend({}, o, n2, j2, g2);
            b2.hasClass("input-daterange") || p2.inputs ? (a.extend(p2, { inputs: p2.inputs || b2.find("input").toArray() }), f2 = new l(this, p2)) : f2 = new k(this, p2), b2.data("datepicker", f2);
          }
          "string" == typeof c2 && "function" == typeof f2[c2] && (e2 = f2[c2].apply(f2, d2));
        }), e2 === b || e2 instanceof k || e2 instanceof l)
          return this;
        if (this.length > 1)
          throw new Error("Using only allowed for the collection of a single element (" + c2 + " function)");
        return e2;
      };
      a.fn.datepicker = n;
      var o = a.fn.datepicker.defaults = { assumeNearbyYear: false, autoclose: false, beforeShowDay: a.noop, beforeShowMonth: a.noop, beforeShowYear: a.noop, beforeShowDecade: a.noop, beforeShowCentury: a.noop, calendarWeeks: false, clearBtn: false, toggleActive: false, daysOfWeekDisabled: [], daysOfWeekHighlighted: [], datesDisabled: [], endDate: 1 / 0, forceParse: true, format: "mm/dd/yyyy", keepEmptyValues: false, keyboardNavigation: true, language: "en", minViewMode: 0, maxViewMode: 4, multidate: false, multidateSeparator: ",", orientation: "auto", rtl: false, startDate: -1 / 0, startView: 0, todayBtn: false, todayHighlight: false, updateViewDate: true, weekStart: 0, disableTouchKeyboard: false, enableOnReadonly: true, showOnFocus: true, zIndexOffset: 10, container: "body", immediateUpdates: false, title: "", templates: { leftArrow: "&#x00AB;", rightArrow: "&#x00BB;" }, showWeekDays: true }, p = a.fn.datepicker.locale_opts = ["format", "rtl", "weekStart"];
      a.fn.datepicker.Constructor = k;
      var q = a.fn.datepicker.dates = { en: { days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], today: "Today", clear: "Clear", titleFormat: "MM yyyy" } }, r = {
        viewModes: [{ names: ["days", "month"], clsName: "days", e: "changeMonth" }, { names: ["months", "year"], clsName: "months", e: "changeYear", navStep: 1 }, { names: ["years", "decade"], clsName: "years", e: "changeDecade", navStep: 10 }, { names: ["decades", "century"], clsName: "decades", e: "changeCentury", navStep: 100 }, { names: ["centuries", "millennium"], clsName: "centuries", e: "changeMillennium", navStep: 1e3 }],
        validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,
        nonpunctuation: /[^ -\/:-@\u5e74\u6708\u65e5\[-`{-~\t\n\r]+/g,
        parseFormat: function(a2) {
          if ("function" == typeof a2.toValue && "function" == typeof a2.toDisplay)
            return a2;
          var b2 = a2.replace(this.validParts, "\0").split("\0"), c2 = a2.match(this.validParts);
          if (!b2 || !b2.length || !c2 || 0 === c2.length)
            throw new Error("Invalid date format.");
          return { separators: b2, parts: c2 };
        },
        parseDate: function(c2, e2, f2, g2) {
          function h2(a2, b2) {
            return true === b2 && (b2 = 10), a2 < 100 && (a2 += 2e3) > (/* @__PURE__ */ new Date()).getFullYear() + b2 && (a2 -= 100), a2;
          }
          function i2() {
            var a2 = this.slice(0, j2[n2].length), b2 = j2[n2].slice(0, a2.length);
            return a2.toLowerCase() === b2.toLowerCase();
          }
          if (!c2)
            return b;
          if (c2 instanceof Date)
            return c2;
          if ("string" == typeof e2 && (e2 = r.parseFormat(e2)), e2.toValue)
            return e2.toValue(c2, e2, f2);
          var j2, l2, m2, n2, o2, p2 = { d: "moveDay", m: "moveMonth", w: "moveWeek", y: "moveYear" }, s = { yesterday: "-1d", today: "+0d", tomorrow: "+1d" };
          if (c2 in s && (c2 = s[c2]), /^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/i.test(c2)) {
            for (j2 = c2.match(/([\-+]\d+)([dmwy])/gi), c2 = /* @__PURE__ */ new Date(), n2 = 0; n2 < j2.length; n2++)
              l2 = j2[n2].match(/([\-+]\d+)([dmwy])/i), m2 = Number(l2[1]), o2 = p2[l2[2].toLowerCase()], c2 = k.prototype[o2](c2, m2);
            return k.prototype._zero_utc_time(c2);
          }
          j2 = c2 && c2.match(this.nonpunctuation) || [];
          var t, u, v = {}, w = ["yyyy", "yy", "M", "MM", "m", "mm", "d", "dd"], x = { yyyy: function(a2, b2) {
            return a2.setUTCFullYear(g2 ? h2(b2, g2) : b2);
          }, m: function(a2, b2) {
            if (isNaN(a2))
              return a2;
            for (b2 -= 1; b2 < 0; )
              b2 += 12;
            for (b2 %= 12, a2.setUTCMonth(b2); a2.getUTCMonth() !== b2; )
              a2.setUTCDate(a2.getUTCDate() - 1);
            return a2;
          }, d: function(a2, b2) {
            return a2.setUTCDate(b2);
          } };
          x.yy = x.yyyy, x.M = x.MM = x.mm = x.m, x.dd = x.d, c2 = d();
          var y = e2.parts.slice();
          if (j2.length !== y.length && (y = a(y).filter(function(b2, c3) {
            return -1 !== a.inArray(c3, w);
          }).toArray()), j2.length === y.length) {
            var z;
            for (n2 = 0, z = y.length; n2 < z; n2++) {
              if (t = parseInt(j2[n2], 10), l2 = y[n2], isNaN(t))
                switch (l2) {
                  case "MM":
                    u = a(q[f2].months).filter(i2), t = a.inArray(u[0], q[f2].months) + 1;
                    break;
                  case "M":
                    u = a(q[f2].monthsShort).filter(i2), t = a.inArray(u[0], q[f2].monthsShort) + 1;
                }
              v[l2] = t;
            }
            var A, B;
            for (n2 = 0; n2 < w.length; n2++)
              (B = w[n2]) in v && !isNaN(v[B]) && (A = new Date(c2), x[B](A, v[B]), isNaN(A) || (c2 = A));
          }
          return c2;
        },
        formatDate: function(b2, c2, d2) {
          if (!b2)
            return "";
          if ("string" == typeof c2 && (c2 = r.parseFormat(c2)), c2.toDisplay)
            return c2.toDisplay(b2, c2, d2);
          var e2 = { d: b2.getUTCDate(), D: q[d2].daysShort[b2.getUTCDay()], DD: q[d2].days[b2.getUTCDay()], m: b2.getUTCMonth() + 1, M: q[d2].monthsShort[b2.getUTCMonth()], MM: q[d2].months[b2.getUTCMonth()], yy: b2.getUTCFullYear().toString().substring(2), yyyy: b2.getUTCFullYear() };
          e2.dd = (e2.d < 10 ? "0" : "") + e2.d, e2.mm = (e2.m < 10 ? "0" : "") + e2.m, b2 = [];
          for (var f2 = a.extend([], c2.separators), g2 = 0, h2 = c2.parts.length; g2 <= h2; g2++)
            f2.length && b2.push(f2.shift()), b2.push(e2[c2.parts[g2]]);
          return b2.join("");
        },
        headTemplate: '<thead><tr><th colspan="7" class="datepicker-title"></th></tr><tr><th class="prev">' + o.templates.leftArrow + '</th><th colspan="5" class="datepicker-switch"></th><th class="next">' + o.templates.rightArrow + "</th></tr></thead>",
        contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
        footTemplate: '<tfoot><tr><th colspan="7" class="today"></th></tr><tr><th colspan="7" class="clear"></th></tr></tfoot>'
      };
      r.template = '<div class="datepicker"><div class="datepicker-days"><table class="table-condensed">' + r.headTemplate + "<tbody></tbody>" + r.footTemplate + '</table></div><div class="datepicker-months"><table class="table-condensed">' + r.headTemplate + r.contTemplate + r.footTemplate + '</table></div><div class="datepicker-years"><table class="table-condensed">' + r.headTemplate + r.contTemplate + r.footTemplate + '</table></div><div class="datepicker-decades"><table class="table-condensed">' + r.headTemplate + r.contTemplate + r.footTemplate + '</table></div><div class="datepicker-centuries"><table class="table-condensed">' + r.headTemplate + r.contTemplate + r.footTemplate + "</table></div></div>", a.fn.datepicker.DPGlobal = r, a.fn.datepicker.noConflict = function() {
        return a.fn.datepicker = m, this;
      }, a.fn.datepicker.version = "1.9.0", a.fn.datepicker.deprecated = function(a2) {
        var b2 = window.console;
        b2 && b2.warn && b2.warn("DEPRECATED: " + a2);
      }, a(document).on("focus.datepicker.data-api click.datepicker.data-api", '[data-provide="datepicker"]', function(b2) {
        var c2 = a(this);
        c2.data("datepicker") || (b2.preventDefault(), n.call(c2, "show"));
      }), a(function() {
        n.call(a('[data-provide="datepicker-inline"]'));
      });
    });
  }
});
export default require_bootstrap_datepicker_min();
/*! Bundled license information:

bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js:
  (*!
   * Datepicker for Bootstrap v1.9.0 (https://github.com/uxsolutions/bootstrap-datepicker)
   *
   * Licensed under the Apache License v2.0 (http://www.apache.org/licenses/LICENSE-2.0)
   *)
*/
//# sourceMappingURL=bootstrap-datepicker_dist_js_bootstrap-datepicker__min__js.js.map
