{
  "version": 3,
  "sources": ["../../datatables.net-responsive/js/dataTables.responsive.js"],
  "sourcesContent": ["/*! Responsive 2.2.9\n * 2014-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     2.2.9\n * @file        dataTables.responsive.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2014-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function ( settings, opts ) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.10' ) ) {\n\t\tthrow 'DataTables Responsive requires DataTables 1.10.10 or newer';\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api( settings ),\n\t\tcolumns: [],\n\t\tcurrent: []\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif ( this.s.dt.settings()[0].responsive ) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif ( opts && typeof opts.details === 'string' ) {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if ( opts && opts.details === false ) {\n\t\topts.details = { type: false };\n\t}\n\telse if ( opts && opts.details === true ) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend( Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtPrivateSettings = dt.settings()[0];\n\t\tvar oldWindowWidth = $(window).innerWidth();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing on\n\t\t// resize\n\t\t$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {\n\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\tvar width = $(window).innerWidth();\n\n\t\t\tif ( width !== oldWindowWidth ) {\n\t\t\t\tthat._resize();\n\t\t\t\toldWindowWidth = width;\n\t\t\t}\n\t\t} ) );\n\n\t\t// DataTables doesn't currently trigger an event when a row is added, so\n\t\t// we need to hook into its private API to enforce the hidden rows when\n\t\t// new data is added\n\t\tdtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {\n\t\t\tif ( $.inArray( false, that.s.current ) !== -1 ) {\n\t\t\t\t$('>td, >th', tr).each( function ( i ) {\n\t\t\t\t\tvar idx = dt.column.index( 'toData', i );\n\n\t\t\t\t\tif ( that.s.current[idx] === false ) {\n\t\t\t\t\t\t$(this).css('display', 'none');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Destroy event handler\n\t\tdt.on( 'destroy.dtr', function () {\n\t\t\tdt.off( '.dtr' );\n\t\t\t$( dt.table().body() ).off( '.dtr' );\n\t\t\t$(window).off( 'resize.dtr orientationchange.dtr' );\n\t\t\tdt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each( that.s.current, function ( i, val ) {\n\t\t\t\tif ( val === false ) {\n\t\t\t\t\tthat._setColumnVis( i, true );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort( function (a, b) {\n\t\t\treturn a.width < b.width ? 1 :\n\t\t\t\ta.width > b.width ? -1 : 0;\n\t\t} );\n\n\t\tthis._classLogic();\n\t\tthis._resizeAuto();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif ( details.type !== false ) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on( 'column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif ( that._timer ) {\n\t\t\t\t\tclearTimeout( that._timer );\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout( function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100 );\n\t\t\t} );\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on( 'draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t} );\n\n\t\t\t$(dt.table().node()).addClass( 'dtr-'+details.type );\n\t\t}\n\n\t\tdt.on( 'column-reorder.dtr', function (e, settings, details) {\n\t\t\tthat._classLogic();\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize(true);\n\t\t} );\n\n\t\t// Change in column sizes means we need to calc\n\t\tdt.on( 'column-sizing.dtr', function () {\n\t\t\tthat._resizeAuto();\n\t\t\tthat._resize();\n\t\t});\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on( 'preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every( function () {\n\t\t\t\tif ( this.child.isShown() ) {\n\t\t\t\t\trowIds.push( this.id(true) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tdt.one( 'draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows( rowIds ).every( function () {\n\t\t\t\t\tthat._detailsDisplay( this, false );\n\t\t\t\t} );\n\t\t\t} );\n\t\t});\n\n\t\tdt\n\t\t\t.on( 'draw.dtr', function () {\n\t\t\t\tthat._controlClass();\n\t\t\t})\n\t\t\t.on( 'init.dtr', function (e, settings, details) {\n\t\t\t\tif ( e.namespace !== 'dt' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\t// If columns were hidden, then DataTables needs to adjust the\n\t\t\t\t// column sizing\n\t\t\t\tif ( $.inArray( false, that.s.current ) ) {\n\t\t\t\t\tdt.columns.adjust();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t// First pass - draw the table for the current viewport size\n\t\tthis._resize();\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function ( breakpoint )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map( function ( col, idx ) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.sort( function ( a, b ) {\n\t\t\t\tif ( a.priority !== b.priority ) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t} );\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map( columns, function ( col, i ) {\n\t\t\tif ( dt.column(i).visible() === false ) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null ?\n\t\t\t\tfalse :\n\t\t\t\tcol.auto === true ?\n\t\t\t\t\t'-' :\n\t\t\t\t\t$.inArray( breakpoint, col.includeIn ) !== -1;\n\t\t} );\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( display[i] === true ) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor ( i=0, ien=display.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor ( i=0, ien=order.length ; i<ien ; i++ ) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( ! columns[i].control && ! columns[i].never && display[i] === false ) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].control ) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif ( display[i] === 'not-visible' ) {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ( $.inArray( true, display ) === -1 ) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function ()\n\t{\n\t\tvar that = this;\n\t\tvar calc = {};\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt.columns().eq(0).map( function (i) {\n\t\t\tvar column = this.column(i);\n\t\t\tvar className = column.header().className;\n\t\t\tvar priority = dt.settings()[0].aoColumns[i].responsivePriority;\n\t\t\tvar dataPriority = column.header().getAttribute('data-priority');\n\n\t\t\tif ( priority === undefined ) {\n\t\t\t\tpriority = dataPriority === undefined || dataPriority === null?\n\t\t\t\t\t10000 :\n\t\t\t\t\tdataPriority * 1;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tclassName: className,\n\t\t\t\tincludeIn: [],\n\t\t\t\tauto:      false,\n\t\t\t\tcontrol:   false,\n\t\t\t\tnever:     className.match(/\\bnever\\b/) ? true : false,\n\t\t\t\tpriority:  priority\n\t\t\t};\n\t\t} );\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function ( colIdx, name ) {\n\t\t\tvar includeIn = columns[ colIdx ].includeIn;\n\n\t\t\tif ( $.inArray( name, includeIn ) === -1 ) {\n\t\t\t\tincludeIn.push( name );\n\t\t\t}\n\t\t};\n\n\t\tvar column = function ( colIdx, name, operator, matched ) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif ( ! operator ) {\n\t\t\t\tcolumns[ colIdx ].includeIn.push( name );\n\t\t\t}\n\t\t\telse if ( operator === 'max-' ) {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width <= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'min-' ) {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find( name ).width;\n\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].width >= size ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( operator === 'not-' ) {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\t\t\tif ( breakpoints[i].name.indexOf( matched ) === -1 ) {\n\t\t\t\t\t\tadd( colIdx, breakpoints[i].name );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each( function ( col, i ) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor ( var k=0, ken=classNames.length ; k<ken ; k++ ) {\n\t\t\t\tvar className = classNames[k].trim();\n\n\t\t\t\tif ( className === 'all' ) {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map( breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t} );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'none' || col.never ) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if ( className === 'control' || className === 'dtr-control' ) {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each( breakpoints, function ( j, breakpoint ) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp( '(min\\\\-|max\\\\-|not\\\\-)?('+brokenPoint[0]+')(\\\\-[_a-zA-Z0-9])?' );\n\t\t\t\t\tvar match = className.match( re );\n\n\t\t\t\t\tif ( match ) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2]+match[3] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( match[2] === brokenPoint[0] && ! match[3] ) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn( i, breakpoint.name, match[1], match[2] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif ( ! hasClass ) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.columns = columns;\n\t},\n\n\t/**\n\t * Update the cells to show the correct control class / button\n\t * @private\n\t */\n\t_controlClass: function ()\n\t{\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\tvar dt = this.s.dt;\n\t\t\tvar columnsVis = this.s.current;\n\t\t\tvar firstVisible = $.inArray(true, columnsVis);\n\n\t\t\t// Remove from any cells which shouldn't have it\n\t\t\tdt.cells(\n\t\t\t\tnull,\n\t\t\t\tfunction(idx) {\n\t\t\t\t\treturn idx !== firstVisible;\n\t\t\t\t},\n\t\t\t\t{page: 'current'}\n\t\t\t)\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.filter('.dtr-control')\n\t\t\t\t.removeClass('dtr-control');\n\n\t\t\tdt.cells(null, firstVisible, {page: 'current'})\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.addClass('dtr-control');\n\t\t}\n\t},\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function ( row, update )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\tif ( details && details.type !== false ) {\n\t\t\tvar res = details.display( row, update, function () {\n\t\t\t\treturn details.renderer(\n\t\t\t\t\tdt, row[0], that._detailsObj(row[0])\n\t\t\t\t);\n\t\t\t} );\n\n\t\t\tif ( res === true || res === false ) {\n\t\t\t\t$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function ()\n\t{\n\t\tvar that    = this;\n\t\tvar dt      = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif ( details.type === 'inline' ) {\n\t\t\tdetails.target = 'td.dtr-control, th.dtr-control';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on( 'draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t} );\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {\n\t\t\tif ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t} );\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target   = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\tif ( target !== undefined || target !== null ) {\n\t\t\t// Click handler to show / hide the details rows when they are available\n\t\t\t$( dt.table().body() )\n\t\t\t\t.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {\n\t\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t\t// then take no action\n\t\t\t\t\tif ( ! $(dt.table().node()).hasClass('collapsed' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\t\tif ( $.inArray( $(this).closest('tr').get(0), dt.rows().nodes().toArray() ) === -1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\t\tif ( typeof target === 'number' ) {\n\t\t\t\t\t\tvar targetIdx = target < 0 ?\n\t\t\t\t\t\t\tdt.columns().eq(0).length + target :\n\t\t\t\t\t\t\ttarget;\n\n\t\t\t\t\t\tif ( dt.cell( this ).index().column !== targetIdx ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\t\tvar row = dt.row( $(this).closest('tr') );\n\n\t\t\t\t\t// Check event type to do an action\n\t\t\t\t\tif ( e.type === 'click' ) {\n\t\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t\t// the renderer)\n\t\t\t\t\t\tthat._detailsDisplay( row, false );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( e.type === 'mousedown' ) {\n\t\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse if ( e.type === 'mouseup' ) {\n\t\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t\t$(this).trigger('blur').css('outline', '');\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function ( rowIdx )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.columns, function( col, i ) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif ( col.never || col.control ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dtCol = dt.settings()[0].aoColumns[ i ];\n\n\t\t\treturn {\n\t\t\t\tclassName:   dtCol.sClass,\n\t\t\t\tcolumnIndex: i,\n\t\t\t\tdata:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),\n\t\t\t\thidden:      dt.column( i ).visible() && !that.s.current[ i ],\n\t\t\t\trowIndex:    rowIdx,\n\t\t\t\ttitle:       dtCol.sTitle !== null ?\n\t\t\t\t\tdtCol.sTitle :\n\t\t\t\t\t$(dt.column(i).header()).text()\n\t\t\t};\n\t\t} );\n\t},\n\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function ( name )\n\t{\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {\n\t\t\tif ( breakpoints[i].name === name ) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {\n\t\t\tvar row = dt.row( idx );\n\n\t\t\tthat._detailsDisplay( dt.row( idx ), true );\n\t\t} );\n\t},\n\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @param  {boolean} forceRedraw Force a redraw\n\t * @private\n\t */\n\t_resize: function (forceRedraw)\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).innerWidth();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor ( i=breakpoints.length-1 ; i>=0 ; i-- ) {\n\t\t\tif ( width <= breakpoints[i].width ) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity( breakpoint );\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\t\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\tif ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control && ! dt.column(i).visible() === false ) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\n\t\tdt.columns().eq(0).each( function ( colIdx, i ) {\n\t\t\tif ( columnsVis[i] === true ) {\n\t\t\t\tvisible++;\n\t\t\t}\n\n\t\t\tif ( forceRedraw || columnsVis[i] !== oldVis[i] ) {\n\t\t\t\tchanged = true;\n\t\t\t\tthat._setColumnVis( colIdx, columnsVis[i] );\n\t\t\t}\n\t\t} );\n\n\t\tif ( changed ) {\n\t\t\tthis._redrawChildren();\n\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif ( dt.page.info().recordsDisplay === 0 ) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\n\t\tthat._controlClass();\n\t},\n\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif ( ! this.c.auto ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Need to restore all children. They will be reinstated by a re-render\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\n\t\t\t$.each( _childNodeStore, function ( key ) {\n\t\t\t\tvar idx = key.split('-');\n\n\t\t\t\t_childNodesRestore( dt, idx[0]*1, idx[1]*1 );\n\t\t\t} );\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar tableWidth   = dt.table().node().offsetWidth;\n\t\tvar columnWidths = dt.columns;\n\t\tvar clonedTable  = dt.table().node().cloneNode( false );\n\t\tvar clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );\n\t\tvar clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8\n\n\t\tclonedTable.style.width = 'auto';\n\n\t\t// Header\n\t\tvar headerCells = dt.columns()\n\t\t\t.header()\n\t\t\t.filter( function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t} )\n\t\t\t.to$()\n\t\t\t.clone( false )\n\t\t\t.css( 'display', 'table-cell' )\n\t\t\t.css( 'width', 'auto' )\n\t\t\t.css( 'min-width', 0 );\n\n\t\t// Body rows - we don't need to take account of DataTables' column\n\t\t// visibility since we implement our own here (hence the `display` set)\n\t\t$(clonedBody)\n\t\t\t.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )\n\t\t\t.find( 'th, td' ).css( 'display', '' );\n\n\t\t// Footer\n\t\tvar footer = dt.table().footer();\n\t\tif ( footer ) {\n\t\t\tvar clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );\n\t\t\tvar footerCells = dt.columns()\n\t\t\t\t.footer()\n\t\t\t\t.filter( function (idx) {\n\t\t\t\t\treturn dt.column(idx).visible();\n\t\t\t\t} )\n\t\t\t\t.to$()\n\t\t\t\t.clone( false )\n\t\t\t\t.css( 'display', 'table-cell' );\n\n\t\t\t$('<tr/>')\n\t\t\t\t.append( footerCells )\n\t\t\t\t.appendTo( clonedFooter );\n\t\t}\n\n\t\t$('<tr/>')\n\t\t\t.append( headerCells )\n\t\t\t.appendTo( clonedHeader );\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif ( this.c.details.type === 'inline' ) {\n\t\t\t$(clonedTable).addClass( 'dtr-inline collapsed' );\n\t\t}\n\t\t\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$( clonedTable ).find( '[name]' ).removeAttr( 'name' );\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$( clonedTable ).css( 'position', 'relative' )\n\t\t\n\t\tvar inserted = $('<div/>')\n\t\t\t.css( {\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t} )\n\t\t\t.append( clonedTable );\n\n\t\tinserted.insertBefore( dt.table().node() );\n\n\t\t// The cloned header now contains the smallest that each column can be\n\t\theaderCells.each( function (i) {\n\t\t\tvar idx = dt.column.index( 'fromVisible', i );\n\t\t\tcolumns[ idx ].minWidth =  this.offsetWidth || 0;\n\t\t} );\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Get the state of the current hidden columns - controlled by Responsive only\n\t */\n\t_responsiveOnlyHidden: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map( this.s.current, function (v, i) {\n\t\t\t// If the column is hidden by DataTables then it can't be hidden by\n\t\t\t// Responsive!\n\t\t\tif ( dt.column(i).visible() === false ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn v;\n\t\t} );\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function ( col, showHide )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\t$( dt.column( col ).header() ).css( 'display', display );\n\t\t$( dt.column( col ).footer() ).css( 'display', display );\n\t\tdt.column( col ).nodes().to$().css( 'display', display );\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif ( ! $.isEmptyObject( _childNodeStore ) ) {\n\t\t\tdt.cells( null, col ).indexes().each( function (idx) {\n\t\t\t\t_childNodesRestore( dt, idx.row, idx.column );\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells( { page: 'current' } ).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );\n\n\t\tif ( typeof target === 'number' ) {\n\t\t\tdt.cells( null, target, { page: 'current' } ).nodes().to$()\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif ( target === 'td:first-child, th:first-child' ) {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$( target, dt.rows( { page: 'current' } ).nodes() )\n\t\t\t\t.attr( 'tabIndex', ctx.iTabIndex )\n\t\t\t\t.data( 'dtr-keyboard', 1 );\n\t\t}\n\t}\n} );\n\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop',  width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function ( row, update, render ) {\n\t\tif ( update ) {\n\t\t\tif ( $(row.node()).hasClass('parent') ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( ! row.child.isShown()  ) {\n\t\t\t\trow.child( render(), 'child' ).show();\n\t\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child( false );\n\t\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function ( row, update, render ) {\n\t\tif ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child( false );\n\t\t\t$( row.node() ).removeClass( 'parent' );\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\trow.child( render(), 'child' ).show();\n\t\t\t$( row.node() ).addClass( 'parent' );\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function ( options ) {\n\t\treturn function ( row, update, render ) {\n\t\t\tif ( ! update ) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off( 'keypress.dtr' );\n\t\t\t\t};\n\n\t\t\t\tvar modal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t.append( render() )\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<div class=\"dtr-modal-close\">&times;</div>' )\n\t\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append( $('<div class=\"dtr-modal-background\"/>')\n\t\t\t\t\t\t.click( function () {\n\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo( 'body' );\n\n\t\t\t\t$(document).on( 'keyup.dtr', function (e) {\n\t\t\t\t\tif ( e.keyCode === 27 ) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('div.dtr-modal-content')\n\t\t\t\t\t.empty()\n\t\t\t\t\t.append( render() );\n\t\t\t}\n\n\t\t\tif ( options && options.header ) {\n\t\t\t\t$('div.dtr-modal-content').prepend(\n\t\t\t\t\t'<h2>'+options.header( row )+'</h2>'\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}\n};\n\n\nvar _childNodeStore = {};\n\nfunction _childNodes( dt, row, col ) {\n\tvar name = row+'-'+col;\n\n\tif ( _childNodeStore[ name ] ) {\n\t\treturn _childNodeStore[ name ];\n\t}\n\n\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\tvar nodes = [];\n\tvar children = dt.cell( row, col ).node().childNodes;\n\tfor ( var i=0, ien=children.length ; i<ien ; i++ ) {\n\t\tnodes.push( children[i] );\n\t}\n\n\t_childNodeStore[ name ] = nodes;\n\n\treturn nodes;\n}\n\nfunction _childNodesRestore( dt, row, col ) {\n\tvar name = row+'-'+col;\n\n\tif ( ! _childNodeStore[ name ] ) {\n\t\treturn;\n\t}\n\n\tvar node = dt.cell( row, col ).node();\n\tvar store = _childNodeStore[ name ];\n\tvar parent = store[0].parentNode;\n\tvar parentChildren = parent.childNodes;\n\tvar a = [];\n\n\tfor ( var i=0, ien=parentChildren.length ; i<ien ; i++ ) {\n\t\ta.push( parentChildren[i] );\n\t}\n\n\tfor ( var j=0, jen=a.length ; j<jen ; j++ ) {\n\t\tnode.appendChild( a[j] );\n\t}\n\n\t_childNodeStore[ name ] = undefined;\n}\n\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar ul = $('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>');\n\t\t\tvar found = false;\n\n\t\t\tvar data = $.each( columns, function ( i, col ) {\n\t\t\t\tif ( col.hidden ) {\n\t\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t\t'';\n\t\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li '+klass+' data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append( $('<span class=\"dtr-data\"/>').append( _childNodes( api, col.rowIndex, col.columnIndex ) ) )// api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo( ul );\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn found ?\n\t\t\t\tul :\n\t\t\t\tfalse;\n\t\t};\n\t},\n\n\tlistHidden: function () {\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t'';\n\n\t\t\t\treturn col.hidden ?\n\t\t\t\t\t'<li '+klass+' data-dtr-index=\"'+col.columnIndex+'\" data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<span class=\"dtr-title\">'+\n\t\t\t\t\t\t\tcol.title+\n\t\t\t\t\t\t'</span> '+\n\t\t\t\t\t\t'<span class=\"dtr-data\">'+\n\t\t\t\t\t\t\tcol.data+\n\t\t\t\t\t\t'</span>'+\n\t\t\t\t\t'</li>' :\n\t\t\t\t\t'';\n\t\t\t} ).join('');\n\n\t\t\treturn data ?\n\t\t\t\t$('<ul data-dtr-index=\"'+rowIdx+'\" class=\"dtr-details\"/>').append( data ) :\n\t\t\t\tfalse;\n\t\t}\n\t},\n\n\ttableAll: function ( options ) {\n\t\toptions = $.extend( {\n\t\t\ttableClass: ''\n\t\t}, options );\n\n\t\treturn function ( api, rowIdx, columns ) {\n\t\t\tvar data = $.map( columns, function ( col ) {\n\t\t\t\tvar klass = col.className ?\n\t\t\t\t\t'class=\"'+ col.className +'\"' :\n\t\t\t\t\t'';\n\n\t\t\t\treturn '<tr '+klass+' data-dt-row=\"'+col.rowIndex+'\" data-dt-column=\"'+col.columnIndex+'\">'+\n\t\t\t\t\t\t'<td>'+col.title+':'+'</td> '+\n\t\t\t\t\t\t'<td>'+col.data+'</td>'+\n\t\t\t\t\t'</tr>';\n\t\t\t} ).join('');\n\n\t\t\treturn $('<table class=\"'+options.tableClass+' dtr-details\" width=\"100%\"/>').append( data );\n\t\t}\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register( 'responsive()', function () {\n\treturn this;\n} );\n\nApi.register( 'responsive.index()', function ( li ) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow:    li.parent().data('dtr-index')\n\t};\n} );\n\nApi.register( 'responsive.rebuild()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.recalc()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._responsive ) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t} );\n} );\n\nApi.register( 'responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive ?\n\t\t$.inArray( false, ctx._responsive._responsiveOnlyHidden() ) !== -1 :\n\t\tfalse;\n} );\n\nApi.registerPlural( 'columns().responsiveHidden()', 'column().responsiveHidden()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings._responsive ?\n\t\t\tsettings._responsive._responsiveOnlyHidden()[ column ] :\n\t\t\tfalse;\n\t}, 1 );\n} );\n\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '2.2.9';\n\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'preInit.dt.dtr', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tif ( $(settings.nTable).hasClass( 'responsive' ) ||\n\t\t $(settings.nTable).hasClass( 'dt-responsive' ) ||\n\t\t settings.oInit.responsive ||\n\t\t DataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif ( init !== false ) {\n\t\t\tnew Responsive( settings, $.isPlainObject( init ) ? init : {}  );\n\t\t}\n\t}\n} );\n\n\nreturn Responsive;\n}));\n"],
  "mappings": "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",
  "names": ["window", "document", "idx", "details", "i", "column"]
}
